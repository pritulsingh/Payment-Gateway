"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/web3-utils";
exports.ids = ["vendor-chunks/web3-utils"];
exports.modules = {

/***/ "(ssr)/./node_modules/web3-utils/lib/esm/chunk_response_parser.js":
/*!******************************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/chunk_response_parser.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChunkResponseParser: () => (/* binding */ ChunkResponseParser)\n/* harmony export */ });\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n\nclass ChunkResponseParser {\n    constructor(eventEmitter, autoReconnect) {\n        this.eventEmitter = eventEmitter;\n        this.autoReconnect = autoReconnect;\n        this.chunkTimeout = 1000 * 15;\n    }\n    clearQueues() {\n        if (typeof this._clearQueues === 'function') {\n            this._clearQueues();\n        }\n    }\n    onError(clearQueues) {\n        this._clearQueues = clearQueues;\n    }\n    parseResponse(data) {\n        const returnValues = [];\n        // DE-CHUNKER\n        const dechunkedData = data\n            .replace(/\\}[\\n\\r]?\\{/g, '}|--|{') // }{\n            .replace(/\\}\\][\\n\\r]?\\[\\{/g, '}]|--|[{') // }][{\n            .replace(/\\}[\\n\\r]?\\[\\{/g, '}|--|[{') // }[{\n            .replace(/\\}\\][\\n\\r]?\\{/g, '}]|--|{') // }]{\n            .split('|--|');\n        dechunkedData.forEach(_chunkData => {\n            // prepend the last chunk\n            let chunkData = _chunkData;\n            if (this.lastChunk) {\n                chunkData = this.lastChunk + chunkData;\n            }\n            let result;\n            try {\n                result = JSON.parse(chunkData);\n            }\n            catch (e) {\n                this.lastChunk = chunkData;\n                // start timeout to cancel all requests\n                if (this.lastChunkTimeout) {\n                    clearTimeout(this.lastChunkTimeout);\n                }\n                this.lastChunkTimeout = setTimeout(() => {\n                    if (this.autoReconnect)\n                        return;\n                    this.clearQueues();\n                    this.eventEmitter.emit('error', new web3_errors__WEBPACK_IMPORTED_MODULE_0__.InvalidResponseError({\n                        id: 1,\n                        jsonrpc: '2.0',\n                        error: { code: 2, message: 'Chunk timeout' },\n                    }));\n                }, this.chunkTimeout);\n                return;\n            }\n            // cancel timeout and set chunk to null\n            clearTimeout(this.lastChunkTimeout);\n            this.lastChunk = undefined;\n            if (result)\n                returnValues.push(result);\n        });\n        return returnValues;\n    }\n}\n//# sourceMappingURL=chunk_response_parser.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy11dGlscy9saWIvZXNtL2NodW5rX3Jlc3BvbnNlX3BhcnNlci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFtRDtBQUM1QztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsU0FBUyxNQUFNLEtBQUs7QUFDNUMsd0JBQXdCLGFBQWEsTUFBTSxPQUFPLE9BQU87QUFDekQsd0JBQXdCLFdBQVcsTUFBTSxNQUFNLE9BQU87QUFDdEQsd0JBQXdCLFdBQVcsTUFBTSxNQUFNLE9BQU87QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0RBQXdELDZEQUFvQjtBQUM1RTtBQUNBO0FBQ0EsaUNBQWlDLG1DQUFtQztBQUNwRSxxQkFBcUI7QUFDckIsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbW9ycGgtcGF5LXNkay8uL25vZGVfbW9kdWxlcy93ZWIzLXV0aWxzL2xpYi9lc20vY2h1bmtfcmVzcG9uc2VfcGFyc2VyLmpzPzRiZDUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW52YWxpZFJlc3BvbnNlRXJyb3IgfSBmcm9tICd3ZWIzLWVycm9ycyc7XG5leHBvcnQgY2xhc3MgQ2h1bmtSZXNwb25zZVBhcnNlciB7XG4gICAgY29uc3RydWN0b3IoZXZlbnRFbWl0dGVyLCBhdXRvUmVjb25uZWN0KSB7XG4gICAgICAgIHRoaXMuZXZlbnRFbWl0dGVyID0gZXZlbnRFbWl0dGVyO1xuICAgICAgICB0aGlzLmF1dG9SZWNvbm5lY3QgPSBhdXRvUmVjb25uZWN0O1xuICAgICAgICB0aGlzLmNodW5rVGltZW91dCA9IDEwMDAgKiAxNTtcbiAgICB9XG4gICAgY2xlYXJRdWV1ZXMoKSB7XG4gICAgICAgIGlmICh0eXBlb2YgdGhpcy5fY2xlYXJRdWV1ZXMgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIHRoaXMuX2NsZWFyUXVldWVzKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgb25FcnJvcihjbGVhclF1ZXVlcykge1xuICAgICAgICB0aGlzLl9jbGVhclF1ZXVlcyA9IGNsZWFyUXVldWVzO1xuICAgIH1cbiAgICBwYXJzZVJlc3BvbnNlKGRhdGEpIHtcbiAgICAgICAgY29uc3QgcmV0dXJuVmFsdWVzID0gW107XG4gICAgICAgIC8vIERFLUNIVU5LRVJcbiAgICAgICAgY29uc3QgZGVjaHVua2VkRGF0YSA9IGRhdGFcbiAgICAgICAgICAgIC5yZXBsYWNlKC9cXH1bXFxuXFxyXT9cXHsvZywgJ318LS18eycpIC8vIH17XG4gICAgICAgICAgICAucmVwbGFjZSgvXFx9XFxdW1xcblxccl0/XFxbXFx7L2csICd9XXwtLXxbeycpIC8vIH1dW3tcbiAgICAgICAgICAgIC5yZXBsYWNlKC9cXH1bXFxuXFxyXT9cXFtcXHsvZywgJ318LS18W3snKSAvLyB9W3tcbiAgICAgICAgICAgIC5yZXBsYWNlKC9cXH1cXF1bXFxuXFxyXT9cXHsvZywgJ31dfC0tfHsnKSAvLyB9XXtcbiAgICAgICAgICAgIC5zcGxpdCgnfC0tfCcpO1xuICAgICAgICBkZWNodW5rZWREYXRhLmZvckVhY2goX2NodW5rRGF0YSA9PiB7XG4gICAgICAgICAgICAvLyBwcmVwZW5kIHRoZSBsYXN0IGNodW5rXG4gICAgICAgICAgICBsZXQgY2h1bmtEYXRhID0gX2NodW5rRGF0YTtcbiAgICAgICAgICAgIGlmICh0aGlzLmxhc3RDaHVuaykge1xuICAgICAgICAgICAgICAgIGNodW5rRGF0YSA9IHRoaXMubGFzdENodW5rICsgY2h1bmtEYXRhO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbGV0IHJlc3VsdDtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0ID0gSlNPTi5wYXJzZShjaHVua0RhdGEpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmxhc3RDaHVuayA9IGNodW5rRGF0YTtcbiAgICAgICAgICAgICAgICAvLyBzdGFydCB0aW1lb3V0IHRvIGNhbmNlbCBhbGwgcmVxdWVzdHNcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5sYXN0Q2h1bmtUaW1lb3V0KSB7XG4gICAgICAgICAgICAgICAgICAgIGNsZWFyVGltZW91dCh0aGlzLmxhc3RDaHVua1RpbWVvdXQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0aGlzLmxhc3RDaHVua1RpbWVvdXQgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuYXV0b1JlY29ubmVjdClcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jbGVhclF1ZXVlcygpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmV2ZW50RW1pdHRlci5lbWl0KCdlcnJvcicsIG5ldyBJbnZhbGlkUmVzcG9uc2VFcnJvcih7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZDogMSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGpzb25ycGM6ICcyLjAnLFxuICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3I6IHsgY29kZTogMiwgbWVzc2FnZTogJ0NodW5rIHRpbWVvdXQnIH0sXG4gICAgICAgICAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICAgICAgICB9LCB0aGlzLmNodW5rVGltZW91dCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gY2FuY2VsIHRpbWVvdXQgYW5kIHNldCBjaHVuayB0byBudWxsXG4gICAgICAgICAgICBjbGVhclRpbWVvdXQodGhpcy5sYXN0Q2h1bmtUaW1lb3V0KTtcbiAgICAgICAgICAgIHRoaXMubGFzdENodW5rID0gdW5kZWZpbmVkO1xuICAgICAgICAgICAgaWYgKHJlc3VsdClcbiAgICAgICAgICAgICAgICByZXR1cm5WYWx1ZXMucHVzaChyZXN1bHQpO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHJldHVyblZhbHVlcztcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaHVua19yZXNwb25zZV9wYXJzZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-utils/lib/esm/chunk_response_parser.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-utils/lib/esm/converters.js":
/*!*******************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/converters.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   asciiToHex: () => (/* binding */ asciiToHex),\n/* harmony export */   bytesToHex: () => (/* binding */ bytesToHex),\n/* harmony export */   bytesToUint8Array: () => (/* binding */ bytesToUint8Array),\n/* harmony export */   ethUnitMap: () => (/* binding */ ethUnitMap),\n/* harmony export */   fromAscii: () => (/* binding */ fromAscii),\n/* harmony export */   fromDecimal: () => (/* binding */ fromDecimal),\n/* harmony export */   fromUtf8: () => (/* binding */ fromUtf8),\n/* harmony export */   fromWei: () => (/* binding */ fromWei),\n/* harmony export */   hexToAscii: () => (/* binding */ hexToAscii),\n/* harmony export */   hexToBytes: () => (/* binding */ hexToBytes),\n/* harmony export */   hexToNumber: () => (/* binding */ hexToNumber),\n/* harmony export */   hexToNumberString: () => (/* binding */ hexToNumberString),\n/* harmony export */   hexToString: () => (/* binding */ hexToString),\n/* harmony export */   hexToUtf8: () => (/* binding */ hexToUtf8),\n/* harmony export */   numberToHex: () => (/* binding */ numberToHex),\n/* harmony export */   stringToHex: () => (/* binding */ stringToHex),\n/* harmony export */   toAscii: () => (/* binding */ toAscii),\n/* harmony export */   toBigInt: () => (/* binding */ toBigInt),\n/* harmony export */   toBool: () => (/* binding */ toBool),\n/* harmony export */   toChecksumAddress: () => (/* binding */ toChecksumAddress),\n/* harmony export */   toDecimal: () => (/* binding */ toDecimal),\n/* harmony export */   toHex: () => (/* binding */ toHex),\n/* harmony export */   toNumber: () => (/* binding */ toNumber),\n/* harmony export */   toUtf8: () => (/* binding */ toUtf8),\n/* harmony export */   toWei: () => (/* binding */ toWei),\n/* harmony export */   utf8ToBytes: () => (/* binding */ utf8ToBytes),\n/* harmony export */   utf8ToHex: () => (/* binding */ utf8ToHex)\n/* harmony export */ });\n/* harmony import */ var ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ethereum-cryptography/keccak.js */ \"(ssr)/./node_modules/ethereum-cryptography/esm/keccak.js\");\n/* harmony import */ var ethereum_cryptography_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ethereum-cryptography/utils.js */ \"(ssr)/./node_modules/ethereum-cryptography/esm/utils.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var _uint8array_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./uint8array.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/uint8array.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @module Utils\n */\n\n\n\n\n\n// Ref: https://ethdocs.org/en/latest/ether.html\n// Note: this could be simplified using ** operator, but babel does not handle it well (https://github.com/babel/babel/issues/13109)\n/** @internal */\nconst ethUnitMap = {\n    noether: BigInt(0),\n    wei: BigInt(1),\n    kwei: BigInt(1000),\n    Kwei: BigInt(1000),\n    babbage: BigInt(1000),\n    femtoether: BigInt(1000),\n    mwei: BigInt(1000000),\n    Mwei: BigInt(1000000),\n    lovelace: BigInt(1000000),\n    picoether: BigInt(1000000),\n    gwei: BigInt(1000000000),\n    Gwei: BigInt(1000000000),\n    shannon: BigInt(1000000000),\n    nanoether: BigInt(1000000000),\n    nano: BigInt(1000000000),\n    szabo: BigInt(1000000000000),\n    microether: BigInt(1000000000000),\n    micro: BigInt(1000000000000),\n    finney: BigInt(1000000000000000),\n    milliether: BigInt(1000000000000000),\n    milli: BigInt(1000000000000000),\n    ether: BigInt('1000000000000000000'),\n    kether: BigInt('1000000000000000000000'),\n    grand: BigInt('1000000000000000000000'),\n    mether: BigInt('1000000000000000000000000'),\n    gether: BigInt('1000000000000000000000000000'),\n    tether: BigInt('1000000000000000000000000000000'),\n};\nconst PrecisionLossWarning = 'Warning: Using type `number` with values that are large or contain many decimals may cause loss of precision, it is recommended to use type `string` or `BigInt` when using conversion methods';\n/**\n * Convert a value from bytes to Uint8Array\n * @param data - Data to be converted\n * @returns - The Uint8Array representation of the input data\n *\n * @example\n * ```ts\n * console.log(web3.utils.bytesToUint8Array(\"0xab\")));\n * > Uint8Array(1) [ 171 ]\n * ```\n */\nconst bytesToUint8Array = (data) => {\n    web3_validator__WEBPACK_IMPORTED_MODULE_2__.validator.validate(['bytes'], [data]);\n    if ((0,_uint8array_js__WEBPACK_IMPORTED_MODULE_4__.isUint8Array)(data)) {\n        return data;\n    }\n    if (Array.isArray(data)) {\n        return new Uint8Array(data);\n    }\n    if (typeof data === 'string') {\n        return web3_validator__WEBPACK_IMPORTED_MODULE_2__.utils.hexToUint8Array(data);\n    }\n    throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.InvalidBytesError(data);\n};\n/**\n * @internal\n */\nconst { uint8ArrayToHexString } = web3_validator__WEBPACK_IMPORTED_MODULE_2__.utils;\n/**\n * Convert a byte array to a hex string\n * @param bytes - Byte array to be converted\n * @returns - The hex string representation of the input byte array\n *\n * @example\n * ```ts\n * console.log(web3.utils.bytesToHex(new Uint8Array([72, 12])));\n * > \"0x480c\"\n *\n */\nconst bytesToHex = (bytes) => uint8ArrayToHexString(bytesToUint8Array(bytes));\n/**\n * Convert a hex string to a byte array\n * @param hex - Hex string to be converted\n * @returns - The byte array representation of the input hex string\n *\n * @example\n * ```ts\n * console.log(web3.utils.hexToBytes('0x74657374'));\n * > Uint8Array(4) [ 116, 101, 115, 116 ]\n * ```\n */\nconst hexToBytes = (bytes) => {\n    if (typeof bytes === 'string' && bytes.slice(0, 2).toLowerCase() !== '0x') {\n        return bytesToUint8Array(`0x${bytes}`);\n    }\n    return bytesToUint8Array(bytes);\n};\n/**\n * Converts value to it's number representation\n * @param value - Hex string to be converted\n * @returns - The number representation of the input value\n *\n * @example\n * ```ts\n * conoslle.log(web3.utils.hexToNumber('0xa'));\n * > 10\n * ```\n */\nconst hexToNumber = (value) => {\n    web3_validator__WEBPACK_IMPORTED_MODULE_2__.validator.validate(['hex'], [value]);\n    // To avoid duplicate code and circular dependency we will\n    // use `hexToNumber` implementation from `web3-validator`\n    return web3_validator__WEBPACK_IMPORTED_MODULE_2__.utils.hexToNumber(value);\n};\n/**\n * Converts value to it's number representation @alias `hexToNumber`\n */\nconst toDecimal = hexToNumber;\n/**\n * Converts value to it's hex representation\n * @param value - Value to be converted\n * @param hexstrict - Add padding to converted value if odd, to make it hexstrict\n * @returns - The hex representation of the input value\n *\n * @example\n * ```ts\n * console.log(web3.utils.numberToHex(10));\n * > \"0xa\"\n * ```\n */\nconst numberToHex = (value, hexstrict) => {\n    if (typeof value !== 'bigint')\n        web3_validator__WEBPACK_IMPORTED_MODULE_2__.validator.validate(['int'], [value]);\n    // To avoid duplicate code and circular dependency we will\n    // use `numberToHex` implementation from `web3-validator`\n    let updatedValue = web3_validator__WEBPACK_IMPORTED_MODULE_2__.utils.numberToHex(value);\n    if (hexstrict) {\n        if (!updatedValue.startsWith('-') && updatedValue.length % 2 === 1) {\n            // To avoid duplicate a circular dependency we will not be using the padLeft method\n            updatedValue = '0x0'.concat(updatedValue.slice(2));\n        }\n        else if (updatedValue.length % 2 === 0 && updatedValue.startsWith('-'))\n            updatedValue = '-0x0'.concat(updatedValue.slice(3));\n    }\n    return updatedValue;\n};\n/**\n * Converts value to it's hex representation @alias `numberToHex`\n *\n */\nconst fromDecimal = numberToHex;\n/**\n * Converts value to it's decimal representation in string\n * @param value - Hex string to be converted\n * @returns - The decimal representation of the input value\n *\n * @example\n * ```ts\n * console.log(web3.utils.hexToNumberString('0xa'));\n * > \"10\"\n * ```\n */\nconst hexToNumberString = (data) => hexToNumber(data).toString();\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n * @param str - Utf8 string to be converted\n * @returns - The hex representation of the input string\n *\n * @example\n * ```ts\n * console.log(utf8ToHex('web3.js'));\n * > \"0x776562332e6a73\"\n * ```\n *\n */\nconst utf8ToHex = (str) => {\n    web3_validator__WEBPACK_IMPORTED_MODULE_2__.validator.validate(['string'], [str]);\n    // To be compatible with 1.x trim null character\n    // eslint-disable-next-line no-control-regex\n    let strWithoutNullCharacter = str.replace(/^(?:\\u0000)/, '');\n    // eslint-disable-next-line no-control-regex\n    strWithoutNullCharacter = strWithoutNullCharacter.replace(/(?:\\u0000)$/, '');\n    return bytesToHex(new TextEncoder().encode(strWithoutNullCharacter));\n};\n/**\n * @alias utf8ToHex\n */\nconst fromUtf8 = utf8ToHex;\n/**\n * @alias utf8ToHex\n */\nconst stringToHex = utf8ToHex;\n/**\n * Should be called to get utf8 from it's hex representation\n * @param str - Hex string to be converted\n * @returns - Utf8 string\n *\n * @example\n * ```ts\n * console.log(web3.utils.hexToUtf8('0x48656c6c6f20576f726c64'));\n * > Hello World\n * ```\n */\nconst hexToUtf8 = (str) => (0,ethereum_cryptography_utils_js__WEBPACK_IMPORTED_MODULE_1__.bytesToUtf8)(hexToBytes(str));\n/**\n * @alias hexToUtf8\n */\nconst toUtf8 = (input) => {\n    if (typeof input === 'string') {\n        return hexToUtf8(input);\n    }\n    web3_validator__WEBPACK_IMPORTED_MODULE_2__.validator.validate(['bytes'], [input]);\n    return (0,ethereum_cryptography_utils_js__WEBPACK_IMPORTED_MODULE_1__.bytesToUtf8)(input);\n};\nconst utf8ToBytes = ethereum_cryptography_utils_js__WEBPACK_IMPORTED_MODULE_1__.utf8ToBytes;\n/**\n * @alias hexToUtf8\n */\nconst hexToString = hexToUtf8;\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n * @param str - String to be converted to hex\n * @returns - Hex string\n *\n * @example\n * ```ts\n * console.log(web3.utils.asciiToHex('Hello World'));\n * > 0x48656c6c6f20576f726c64\n * ```\n */\nconst asciiToHex = (str) => {\n    web3_validator__WEBPACK_IMPORTED_MODULE_2__.validator.validate(['string'], [str]);\n    let hexString = '';\n    for (let i = 0; i < str.length; i += 1) {\n        const hexCharCode = str.charCodeAt(i).toString(16);\n        // might need a leading 0\n        hexString += hexCharCode.length % 2 !== 0 ? `0${hexCharCode}` : hexCharCode;\n    }\n    return `0x${hexString}`;\n};\n/**\n * @alias asciiToHex\n */\nconst fromAscii = asciiToHex;\n/**\n * Should be called to get ascii from it's hex representation\n * @param str - Hex string to be converted to ascii\n * @returns - Ascii string\n *\n * @example\n * ```ts\n * console.log(web3.utils.hexToAscii('0x48656c6c6f20576f726c64'));\n * > Hello World\n * ```\n */\nconst hexToAscii = (str) => {\n    const decoder = new TextDecoder('ascii');\n    return decoder.decode(hexToBytes(str));\n};\n/**\n * @alias hexToAscii\n */\nconst toAscii = hexToAscii;\n/**\n * Auto converts any given value into it's hex representation.\n * @param value - Value to be converted to hex\n * @param returnType - If true, it will return the type of the value\n *\n * @example\n * ```ts\n * console.log(web3.utils.toHex(10));\n * > 0xa\n *\n * console.log(web3.utils.toHex('0x123', true));\n * > bytes\n *```\n */\nconst toHex = (value, returnType) => {\n    if (typeof value === 'string' && (0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isAddress)(value)) {\n        return returnType ? 'address' : `0x${value.toLowerCase().replace(/^0x/i, '')}`;\n    }\n    if (typeof value === 'boolean') {\n        // eslint-disable-next-line no-nested-ternary\n        return returnType ? 'bool' : value ? '0x01' : '0x00';\n    }\n    if (typeof value === 'number') {\n        // eslint-disable-next-line no-nested-ternary\n        return returnType ? (value < 0 ? 'int256' : 'uint256') : numberToHex(value);\n    }\n    if (typeof value === 'bigint') {\n        return returnType ? 'bigint' : numberToHex(value);\n    }\n    if ((0,_uint8array_js__WEBPACK_IMPORTED_MODULE_4__.isUint8Array)(value)) {\n        return returnType ? 'bytes' : bytesToHex(value);\n    }\n    if (typeof value === 'object' && !!value) {\n        return returnType ? 'string' : utf8ToHex(JSON.stringify(value));\n    }\n    if (typeof value === 'string') {\n        if (value.startsWith('-0x') || value.startsWith('-0X')) {\n            return returnType ? 'int256' : numberToHex(value);\n        }\n        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isHexStrict)(value)) {\n            return returnType ? 'bytes' : value;\n        }\n        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isHex)(value) && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isInt)(value) && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isUInt)(value)) {\n            return returnType ? 'bytes' : `0x${value}`;\n        }\n        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isHex)(value) && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isInt)(value) && (0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isUInt)(value)) {\n            // This condition seems problematic because meeting\n            // both conditions `!isInt(value) && isUInt(value)` should be impossible.\n            // But a value pass for those conditions: \"101611154195520776335741463917853444671577865378275924493376429267637792638729\"\n            // Note that according to the docs: it is supposed to be treated as a string (https://docs.web3js.org/guides/web3_upgrade_guide/x/web3_utils_migration_guide#conversion-to-hex)\n            // In short, the strange is that isInt(value) is false but isUInt(value) is true for the value above.\n            // TODO: isUInt(value) should be investigated.\n            // However, if `toHex('101611154195520776335741463917853444671577865378275924493376429267637792638729', true)` is called, it will return `true`.\n            // But, if `toHex('101611154195520776335741463917853444671577865378275924493376429267637792638729')` is called, it will throw inside `numberToHex`.\n            return returnType ? 'uint' : numberToHex(value);\n        }\n        if (!Number.isFinite(value)) {\n            return returnType ? 'string' : utf8ToHex(value);\n        }\n    }\n    throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.HexProcessingError(value);\n};\n/**\n * Converts any given value into it's number representation, if possible, else into it's bigint representation.\n * @param value - The value to convert\n * @returns - Returns the value in number or bigint representation\n *\n * @example\n * ```ts\n * console.log(web3.utils.toNumber(1));\n * > 1\n * console.log(web3.utils.toNumber(Number.MAX_SAFE_INTEGER));\n * > 9007199254740991\n *\n * console.log(web3.utils.toNumber(BigInt(Number.MAX_SAFE_INTEGER)));\n * > 9007199254740991\n *\n * console.log(web3.utils.toNumber(BigInt(Number.MAX_SAFE_INTEGER) + BigInt(1)));\n * > 9007199254740992n\n *\n * ```\n */\nconst toNumber = (value) => {\n    if (typeof value === 'number') {\n        if (value > 1e20) {\n            console.warn(PrecisionLossWarning);\n            // JavaScript converts numbers >= 10^21 to scientific notation when coerced to strings,\n            // leading to potential parsing errors and incorrect representations.\n            // For instance, String(10000000000000000000000) yields '1e+22'.\n            // Using BigInt prevents this\n            return BigInt(value);\n        }\n        return value;\n    }\n    if (typeof value === 'bigint') {\n        return value >= Number.MIN_SAFE_INTEGER && value <= Number.MAX_SAFE_INTEGER\n            ? Number(value)\n            : value;\n    }\n    if (typeof value === 'string' && (0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isHexStrict)(value)) {\n        return hexToNumber(value);\n    }\n    try {\n        return toNumber(BigInt(value));\n    }\n    catch (_a) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.InvalidNumberError(value);\n    }\n};\n/**\n * Auto converts any given value into it's bigint representation\n *\n * @param value - The value to convert\n * @returns - Returns the value in bigint representation\n\n * @example\n * ```ts\n * console.log(web3.utils.toBigInt(1));\n * > 1n\n * ```\n */\nconst toBigInt = (value) => {\n    if (typeof value === 'number') {\n        return BigInt(value);\n    }\n    if (typeof value === 'bigint') {\n        return value;\n    }\n    // isHex passes for dec, too\n    if (typeof value === 'string' && (0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isHex)(value)) {\n        if (value.startsWith('-')) {\n            return -BigInt(value.substring(1));\n        }\n        return BigInt(value);\n    }\n    throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.InvalidNumberError(value);\n};\n/**\n * Takes a number of wei and converts it to any other ether unit.\n * @param number - The value in wei\n * @param unit - The unit to convert to\n * @returns - Returns the converted value in the given unit\n *\n * @example\n * ```ts\n * console.log(web3.utils.fromWei(\"1\", \"ether\"));\n * > 0.000000000000000001\n *\n * console.log(web3.utils.fromWei(\"1\", \"shannon\"));\n * > 0.000000001\n * ```\n */\nconst fromWei = (number, unit) => {\n    let denomination;\n    if (typeof unit === 'string') {\n        denomination = ethUnitMap[unit];\n        if (!denomination) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.InvalidUnitError(unit);\n        }\n    }\n    else {\n        if (unit < 0 || !Number.isInteger(unit)) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.InvalidIntegerError(unit);\n        }\n        denomination = (0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.bigintPower)(BigInt(10), BigInt(unit));\n    }\n    // value in wei would always be integer\n    // 13456789, 1234\n    const value = String(toNumber(number));\n    // count number of zeros in denomination\n    // 1000000 -> 6\n    const numberOfZerosInDenomination = denomination.toString().length - 1;\n    if (numberOfZerosInDenomination <= 0) {\n        return value.toString();\n    }\n    // pad the value with required zeros\n    // 13456789 -> 13456789, 1234 -> 001234\n    const zeroPaddedValue = value.padStart(numberOfZerosInDenomination, '0');\n    // get the integer part of value by counting number of zeros from start\n    // 13456789 -> '13'\n    // 001234 -> ''\n    const integer = zeroPaddedValue.slice(0, -numberOfZerosInDenomination);\n    // get the fraction part of value by counting number of zeros backward\n    // 13456789 -> '456789'\n    // 001234 -> '001234'\n    const fraction = zeroPaddedValue.slice(-numberOfZerosInDenomination).replace(/\\.?0+$/, '');\n    if (integer === '') {\n        return fraction ? `0.${fraction}` : '0';\n    }\n    if (fraction === '') {\n        return integer;\n    }\n    const updatedValue = `${integer}.${fraction}`;\n    return updatedValue.slice(0, integer.length + numberOfZerosInDenomination + 1);\n};\n/**\n * Takes a number of a unit and converts it to wei.\n *\n * @param number - The number to convert.\n * @param unit - {@link EtherUnits} The unit of the number passed.\n * @returns The number converted to wei.\n *\n * @example\n * ```ts\n * console.log(web3.utils.toWei(\"0.001\", \"ether\"));\n * > 1000000000000000 //(wei)\n * ```\n */\n// todo in 1.x unit defaults to 'ether'\nconst toWei = (number, unit) => {\n    web3_validator__WEBPACK_IMPORTED_MODULE_2__.validator.validate(['number'], [number]);\n    let denomination;\n    if (typeof unit === 'string') {\n        denomination = ethUnitMap[unit];\n        if (!denomination) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.InvalidUnitError(unit);\n        }\n    }\n    else {\n        if (unit < 0 || !Number.isInteger(unit)) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.InvalidIntegerError(unit);\n        }\n        denomination = (0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.bigintPower)(BigInt(10), BigInt(unit));\n    }\n    let parsedNumber = number;\n    if (typeof parsedNumber === 'number') {\n        if (parsedNumber < 1e-15) {\n            console.warn(PrecisionLossWarning);\n        }\n        if (parsedNumber > 1e20) {\n            console.warn(PrecisionLossWarning);\n            parsedNumber = BigInt(parsedNumber);\n        }\n        else {\n            // in case there is a decimal point, we need to convert it to string\n            parsedNumber = parsedNumber.toLocaleString('fullwide', {\n                useGrouping: false,\n                maximumFractionDigits: 20,\n            });\n        }\n    }\n    // if value is decimal e.g. 24.56 extract `integer` and `fraction` part\n    // to avoid `fraction` to be null use `concat` with empty string\n    const [integer, fraction] = String(typeof parsedNumber === 'string' && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isHexStrict)(parsedNumber)\n        ? parsedNumber\n        : toNumber(parsedNumber))\n        .split('.')\n        .concat('');\n    // join the value removing `.` from\n    // 24.56 -> 2456\n    const value = BigInt(`${integer}${fraction}`);\n    // multiply value with denomination\n    // 2456 * 1000000 -> 2456000000\n    const updatedValue = value * denomination;\n    // check if whole number was passed in\n    const decimals = fraction.length;\n    if (decimals === 0) {\n        return updatedValue.toString();\n    }\n    // trim the value to remove extra zeros\n    return updatedValue.toString().slice(0, -decimals);\n};\n/**\n * Will convert an upper or lowercase Ethereum address to a checksum address.\n * @param address - An address string\n * @returns\tThe checksum address\n * @example\n * ```ts\n * web3.utils.toChecksumAddress('0xc1912fee45d61c87cc5ea59dae31190fffff232d');\n * > \"0xc1912fEE45d61C87Cc5EA59DaE31190FFFFf232d\"\n * ```\n */\nconst toChecksumAddress = (address) => {\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isAddress)(address, false)) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.InvalidAddressError(address);\n    }\n    const lowerCaseAddress = address.toLowerCase().replace(/^0x/i, '');\n    // calling `Uint8Array.from` because `noble-hashes` checks with `instanceof Uint8Array` that fails in some edge cases:\n    // \thttps://github.com/paulmillr/noble-hashes/issues/25#issuecomment-1750106284\n    const hash = web3_validator__WEBPACK_IMPORTED_MODULE_2__.utils.uint8ArrayToHexString((0,ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_0__.keccak256)(web3_validator__WEBPACK_IMPORTED_MODULE_2__.utils.ensureIfUint8Array(utf8ToBytes(lowerCaseAddress))));\n    if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isNullish)(hash) ||\n        hash === '0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470')\n        return ''; // // EIP-1052 if hash is equal to c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470, keccak was given empty data\n    let checksumAddress = '0x';\n    const addressHash = hash.replace(/^0x/i, '');\n    for (let i = 0; i < lowerCaseAddress.length; i += 1) {\n        // If ith character is 8 to f then make it uppercase\n        if (parseInt(addressHash[i], 16) > 7) {\n            checksumAddress += lowerCaseAddress[i].toUpperCase();\n        }\n        else {\n            checksumAddress += lowerCaseAddress[i];\n        }\n    }\n    return checksumAddress;\n};\nconst toBool = (value) => {\n    if (typeof value === 'boolean') {\n        return value;\n    }\n    if (typeof value === 'number' && (value === 0 || value === 1)) {\n        return Boolean(value);\n    }\n    if (typeof value === 'bigint' && (value === BigInt(0) || value === BigInt(1))) {\n        return Boolean(value);\n    }\n    if (typeof value === 'string' &&\n        !(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isHexStrict)(value) &&\n        (value === '1' || value === '0' || value === 'false' || value === 'true')) {\n        if (value === 'true') {\n            return true;\n        }\n        if (value === 'false') {\n            return false;\n        }\n        return Boolean(Number(value));\n    }\n    if (typeof value === 'string' && (0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isHexStrict)(value) && (value === '0x1' || value === '0x0')) {\n        return Boolean(toNumber(value));\n    }\n    throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.InvalidBooleanError(value);\n};\n//# sourceMappingURL=converters.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy11dGlscy9saWIvZXNtL2NvbnZlcnRlcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQzREO0FBQytCO0FBQ3VEO0FBQ3dCO0FBQzNIO0FBQy9DO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLElBQUkscURBQVM7QUFDYixRQUFRLDREQUFZO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsaUVBQThCO0FBQzdDO0FBQ0EsY0FBYywwREFBaUI7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHdCQUF3QixFQUFFLGlEQUFjO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0Esc0NBQXNDLE1BQU07QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsSUFBSSxxREFBUztBQUNiO0FBQ0E7QUFDQSxXQUFXLDZEQUEwQjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLFFBQVEscURBQVM7QUFDakI7QUFDQTtBQUNBLHVCQUF1Qiw2REFBMEI7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxJQUFJLHFEQUFTO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLDJCQUEyQiwyRUFBVztBQUM3QztBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBLElBQUkscURBQVM7QUFDYixXQUFXLDJFQUFXO0FBQ3RCO0FBQ08sb0JBQW9CLHVFQUFhO0FBQ3hDO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsSUFBSSxxREFBUztBQUNiO0FBQ0Esb0JBQW9CLGdCQUFnQjtBQUNwQztBQUNBO0FBQ0Esd0RBQXdELFlBQVk7QUFDcEU7QUFDQSxnQkFBZ0IsVUFBVTtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxxQ0FBcUMseURBQVM7QUFDOUMsNkNBQTZDLHdDQUF3QztBQUNyRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLDREQUFZO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksMkRBQVc7QUFDdkI7QUFDQTtBQUNBLFlBQVkscURBQUssWUFBWSxxREFBSyxZQUFZLHNEQUFNO0FBQ3BELCtDQUErQyxNQUFNO0FBQ3JEO0FBQ0EsWUFBWSxxREFBSyxZQUFZLHFEQUFLLFdBQVcsc0RBQU07QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsMkRBQWtCO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUMsMkRBQVc7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLDJEQUFrQjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLHFEQUFLO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLDJEQUFrQjtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IseURBQWdCO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLDREQUFtQjtBQUN6QztBQUNBLHVCQUF1QiwyREFBVztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQixTQUFTO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLFFBQVEsR0FBRyxTQUFTO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixrQkFBa0I7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxJQUFJLHFEQUFTO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IseURBQWdCO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLDREQUFtQjtBQUN6QztBQUNBLHVCQUF1QiwyREFBVztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0RUFBNEUsMkRBQVc7QUFDdkY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLFFBQVEsRUFBRSxTQUFTO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsU0FBUyx5REFBUztBQUNsQixrQkFBa0IsNERBQW1CO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLHVFQUEyQixDQUFDLDBFQUFTLENBQUMsb0VBQWlDO0FBQ3hGLFFBQVEseURBQVM7QUFDakI7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBLG9CQUFvQiw2QkFBNkI7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUywyREFBVztBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUMsMkRBQVc7QUFDaEQ7QUFDQTtBQUNBLGNBQWMsNERBQW1CO0FBQ2pDO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tb3JwaC1wYXktc2RrLy4vbm9kZV9tb2R1bGVzL3dlYjMtdXRpbHMvbGliL2VzbS9jb252ZXJ0ZXJzLmpzPzUzZmYiXSwic291cmNlc0NvbnRlbnQiOlsiLypcblRoaXMgZmlsZSBpcyBwYXJ0IG9mIHdlYjMuanMuXG5cbndlYjMuanMgaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG50aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cblxud2ViMy5qcyBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2Zcbk1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbkdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuXG5Zb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbmFsb25nIHdpdGggd2ViMy5qcy4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiovXG4vKipcbiAqIEBtb2R1bGUgVXRpbHNcbiAqL1xuaW1wb3J0IHsga2VjY2FrMjU2IH0gZnJvbSAnZXRoZXJldW0tY3J5cHRvZ3JhcGh5L2tlY2Nhay5qcyc7XG5pbXBvcnQgeyBieXRlc1RvVXRmOCwgdXRmOFRvQnl0ZXMgYXMgZWNVdGY4VG9CeXRlcyB9IGZyb20gJ2V0aGVyZXVtLWNyeXB0b2dyYXBoeS91dGlscy5qcyc7XG5pbXBvcnQgeyBpc0FkZHJlc3MsIGlzSGV4LCBpc0hleFN0cmljdCwgaXNJbnQsIGlzVUludCwgaXNOdWxsaXNoLCB1dGlscywgdXRpbHMgYXMgdmFsaWRhdG9yVXRpbHMsIHZhbGlkYXRvciwgYmlnaW50UG93ZXIsIH0gZnJvbSAnd2ViMy12YWxpZGF0b3InO1xuaW1wb3J0IHsgSGV4UHJvY2Vzc2luZ0Vycm9yLCBJbnZhbGlkQWRkcmVzc0Vycm9yLCBJbnZhbGlkQm9vbGVhbkVycm9yLCBJbnZhbGlkQnl0ZXNFcnJvciwgSW52YWxpZE51bWJlckVycm9yLCBJbnZhbGlkVW5pdEVycm9yLCBJbnZhbGlkSW50ZWdlckVycm9yLCB9IGZyb20gJ3dlYjMtZXJyb3JzJztcbmltcG9ydCB7IGlzVWludDhBcnJheSB9IGZyb20gJy4vdWludDhhcnJheS5qcyc7XG4vLyBSZWY6IGh0dHBzOi8vZXRoZG9jcy5vcmcvZW4vbGF0ZXN0L2V0aGVyLmh0bWxcbi8vIE5vdGU6IHRoaXMgY291bGQgYmUgc2ltcGxpZmllZCB1c2luZyAqKiBvcGVyYXRvciwgYnV0IGJhYmVsIGRvZXMgbm90IGhhbmRsZSBpdCB3ZWxsIChodHRwczovL2dpdGh1Yi5jb20vYmFiZWwvYmFiZWwvaXNzdWVzLzEzMTA5KVxuLyoqIEBpbnRlcm5hbCAqL1xuZXhwb3J0IGNvbnN0IGV0aFVuaXRNYXAgPSB7XG4gICAgbm9ldGhlcjogQmlnSW50KDApLFxuICAgIHdlaTogQmlnSW50KDEpLFxuICAgIGt3ZWk6IEJpZ0ludCgxMDAwKSxcbiAgICBLd2VpOiBCaWdJbnQoMTAwMCksXG4gICAgYmFiYmFnZTogQmlnSW50KDEwMDApLFxuICAgIGZlbXRvZXRoZXI6IEJpZ0ludCgxMDAwKSxcbiAgICBtd2VpOiBCaWdJbnQoMTAwMDAwMCksXG4gICAgTXdlaTogQmlnSW50KDEwMDAwMDApLFxuICAgIGxvdmVsYWNlOiBCaWdJbnQoMTAwMDAwMCksXG4gICAgcGljb2V0aGVyOiBCaWdJbnQoMTAwMDAwMCksXG4gICAgZ3dlaTogQmlnSW50KDEwMDAwMDAwMDApLFxuICAgIEd3ZWk6IEJpZ0ludCgxMDAwMDAwMDAwKSxcbiAgICBzaGFubm9uOiBCaWdJbnQoMTAwMDAwMDAwMCksXG4gICAgbmFub2V0aGVyOiBCaWdJbnQoMTAwMDAwMDAwMCksXG4gICAgbmFubzogQmlnSW50KDEwMDAwMDAwMDApLFxuICAgIHN6YWJvOiBCaWdJbnQoMTAwMDAwMDAwMDAwMCksXG4gICAgbWljcm9ldGhlcjogQmlnSW50KDEwMDAwMDAwMDAwMDApLFxuICAgIG1pY3JvOiBCaWdJbnQoMTAwMDAwMDAwMDAwMCksXG4gICAgZmlubmV5OiBCaWdJbnQoMTAwMDAwMDAwMDAwMDAwMCksXG4gICAgbWlsbGlldGhlcjogQmlnSW50KDEwMDAwMDAwMDAwMDAwMDApLFxuICAgIG1pbGxpOiBCaWdJbnQoMTAwMDAwMDAwMDAwMDAwMCksXG4gICAgZXRoZXI6IEJpZ0ludCgnMTAwMDAwMDAwMDAwMDAwMDAwMCcpLFxuICAgIGtldGhlcjogQmlnSW50KCcxMDAwMDAwMDAwMDAwMDAwMDAwMDAwJyksXG4gICAgZ3JhbmQ6IEJpZ0ludCgnMTAwMDAwMDAwMDAwMDAwMDAwMDAwMCcpLFxuICAgIG1ldGhlcjogQmlnSW50KCcxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwJyksXG4gICAgZ2V0aGVyOiBCaWdJbnQoJzEwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAnKSxcbiAgICB0ZXRoZXI6IEJpZ0ludCgnMTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMCcpLFxufTtcbmNvbnN0IFByZWNpc2lvbkxvc3NXYXJuaW5nID0gJ1dhcm5pbmc6IFVzaW5nIHR5cGUgYG51bWJlcmAgd2l0aCB2YWx1ZXMgdGhhdCBhcmUgbGFyZ2Ugb3IgY29udGFpbiBtYW55IGRlY2ltYWxzIG1heSBjYXVzZSBsb3NzIG9mIHByZWNpc2lvbiwgaXQgaXMgcmVjb21tZW5kZWQgdG8gdXNlIHR5cGUgYHN0cmluZ2Agb3IgYEJpZ0ludGAgd2hlbiB1c2luZyBjb252ZXJzaW9uIG1ldGhvZHMnO1xuLyoqXG4gKiBDb252ZXJ0IGEgdmFsdWUgZnJvbSBieXRlcyB0byBVaW50OEFycmF5XG4gKiBAcGFyYW0gZGF0YSAtIERhdGEgdG8gYmUgY29udmVydGVkXG4gKiBAcmV0dXJucyAtIFRoZSBVaW50OEFycmF5IHJlcHJlc2VudGF0aW9uIG9mIHRoZSBpbnB1dCBkYXRhXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYHRzXG4gKiBjb25zb2xlLmxvZyh3ZWIzLnV0aWxzLmJ5dGVzVG9VaW50OEFycmF5KFwiMHhhYlwiKSkpO1xuICogPiBVaW50OEFycmF5KDEpIFsgMTcxIF1cbiAqIGBgYFxuICovXG5leHBvcnQgY29uc3QgYnl0ZXNUb1VpbnQ4QXJyYXkgPSAoZGF0YSkgPT4ge1xuICAgIHZhbGlkYXRvci52YWxpZGF0ZShbJ2J5dGVzJ10sIFtkYXRhXSk7XG4gICAgaWYgKGlzVWludDhBcnJheShkYXRhKSkge1xuICAgICAgICByZXR1cm4gZGF0YTtcbiAgICB9XG4gICAgaWYgKEFycmF5LmlzQXJyYXkoZGF0YSkpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBVaW50OEFycmF5KGRhdGEpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGRhdGEgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHJldHVybiB2YWxpZGF0b3JVdGlscy5oZXhUb1VpbnQ4QXJyYXkoZGF0YSk7XG4gICAgfVxuICAgIHRocm93IG5ldyBJbnZhbGlkQnl0ZXNFcnJvcihkYXRhKTtcbn07XG4vKipcbiAqIEBpbnRlcm5hbFxuICovXG5jb25zdCB7IHVpbnQ4QXJyYXlUb0hleFN0cmluZyB9ID0gdmFsaWRhdG9yVXRpbHM7XG4vKipcbiAqIENvbnZlcnQgYSBieXRlIGFycmF5IHRvIGEgaGV4IHN0cmluZ1xuICogQHBhcmFtIGJ5dGVzIC0gQnl0ZSBhcnJheSB0byBiZSBjb252ZXJ0ZWRcbiAqIEByZXR1cm5zIC0gVGhlIGhleCBzdHJpbmcgcmVwcmVzZW50YXRpb24gb2YgdGhlIGlucHV0IGJ5dGUgYXJyYXlcbiAqXG4gKiBAZXhhbXBsZVxuICogYGBgdHNcbiAqIGNvbnNvbGUubG9nKHdlYjMudXRpbHMuYnl0ZXNUb0hleChuZXcgVWludDhBcnJheShbNzIsIDEyXSkpKTtcbiAqID4gXCIweDQ4MGNcIlxuICpcbiAqL1xuZXhwb3J0IGNvbnN0IGJ5dGVzVG9IZXggPSAoYnl0ZXMpID0+IHVpbnQ4QXJyYXlUb0hleFN0cmluZyhieXRlc1RvVWludDhBcnJheShieXRlcykpO1xuLyoqXG4gKiBDb252ZXJ0IGEgaGV4IHN0cmluZyB0byBhIGJ5dGUgYXJyYXlcbiAqIEBwYXJhbSBoZXggLSBIZXggc3RyaW5nIHRvIGJlIGNvbnZlcnRlZFxuICogQHJldHVybnMgLSBUaGUgYnl0ZSBhcnJheSByZXByZXNlbnRhdGlvbiBvZiB0aGUgaW5wdXQgaGV4IHN0cmluZ1xuICpcbiAqIEBleGFtcGxlXG4gKiBgYGB0c1xuICogY29uc29sZS5sb2cod2ViMy51dGlscy5oZXhUb0J5dGVzKCcweDc0NjU3Mzc0JykpO1xuICogPiBVaW50OEFycmF5KDQpIFsgMTE2LCAxMDEsIDExNSwgMTE2IF1cbiAqIGBgYFxuICovXG5leHBvcnQgY29uc3QgaGV4VG9CeXRlcyA9IChieXRlcykgPT4ge1xuICAgIGlmICh0eXBlb2YgYnl0ZXMgPT09ICdzdHJpbmcnICYmIGJ5dGVzLnNsaWNlKDAsIDIpLnRvTG93ZXJDYXNlKCkgIT09ICcweCcpIHtcbiAgICAgICAgcmV0dXJuIGJ5dGVzVG9VaW50OEFycmF5KGAweCR7Ynl0ZXN9YCk7XG4gICAgfVxuICAgIHJldHVybiBieXRlc1RvVWludDhBcnJheShieXRlcyk7XG59O1xuLyoqXG4gKiBDb252ZXJ0cyB2YWx1ZSB0byBpdCdzIG51bWJlciByZXByZXNlbnRhdGlvblxuICogQHBhcmFtIHZhbHVlIC0gSGV4IHN0cmluZyB0byBiZSBjb252ZXJ0ZWRcbiAqIEByZXR1cm5zIC0gVGhlIG51bWJlciByZXByZXNlbnRhdGlvbiBvZiB0aGUgaW5wdXQgdmFsdWVcbiAqXG4gKiBAZXhhbXBsZVxuICogYGBgdHNcbiAqIGNvbm9zbGxlLmxvZyh3ZWIzLnV0aWxzLmhleFRvTnVtYmVyKCcweGEnKSk7XG4gKiA+IDEwXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGNvbnN0IGhleFRvTnVtYmVyID0gKHZhbHVlKSA9PiB7XG4gICAgdmFsaWRhdG9yLnZhbGlkYXRlKFsnaGV4J10sIFt2YWx1ZV0pO1xuICAgIC8vIFRvIGF2b2lkIGR1cGxpY2F0ZSBjb2RlIGFuZCBjaXJjdWxhciBkZXBlbmRlbmN5IHdlIHdpbGxcbiAgICAvLyB1c2UgYGhleFRvTnVtYmVyYCBpbXBsZW1lbnRhdGlvbiBmcm9tIGB3ZWIzLXZhbGlkYXRvcmBcbiAgICByZXR1cm4gdmFsaWRhdG9yVXRpbHMuaGV4VG9OdW1iZXIodmFsdWUpO1xufTtcbi8qKlxuICogQ29udmVydHMgdmFsdWUgdG8gaXQncyBudW1iZXIgcmVwcmVzZW50YXRpb24gQGFsaWFzIGBoZXhUb051bWJlcmBcbiAqL1xuZXhwb3J0IGNvbnN0IHRvRGVjaW1hbCA9IGhleFRvTnVtYmVyO1xuLyoqXG4gKiBDb252ZXJ0cyB2YWx1ZSB0byBpdCdzIGhleCByZXByZXNlbnRhdGlvblxuICogQHBhcmFtIHZhbHVlIC0gVmFsdWUgdG8gYmUgY29udmVydGVkXG4gKiBAcGFyYW0gaGV4c3RyaWN0IC0gQWRkIHBhZGRpbmcgdG8gY29udmVydGVkIHZhbHVlIGlmIG9kZCwgdG8gbWFrZSBpdCBoZXhzdHJpY3RcbiAqIEByZXR1cm5zIC0gVGhlIGhleCByZXByZXNlbnRhdGlvbiBvZiB0aGUgaW5wdXQgdmFsdWVcbiAqXG4gKiBAZXhhbXBsZVxuICogYGBgdHNcbiAqIGNvbnNvbGUubG9nKHdlYjMudXRpbHMubnVtYmVyVG9IZXgoMTApKTtcbiAqID4gXCIweGFcIlxuICogYGBgXG4gKi9cbmV4cG9ydCBjb25zdCBudW1iZXJUb0hleCA9ICh2YWx1ZSwgaGV4c3RyaWN0KSA9PiB7XG4gICAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gJ2JpZ2ludCcpXG4gICAgICAgIHZhbGlkYXRvci52YWxpZGF0ZShbJ2ludCddLCBbdmFsdWVdKTtcbiAgICAvLyBUbyBhdm9pZCBkdXBsaWNhdGUgY29kZSBhbmQgY2lyY3VsYXIgZGVwZW5kZW5jeSB3ZSB3aWxsXG4gICAgLy8gdXNlIGBudW1iZXJUb0hleGAgaW1wbGVtZW50YXRpb24gZnJvbSBgd2ViMy12YWxpZGF0b3JgXG4gICAgbGV0IHVwZGF0ZWRWYWx1ZSA9IHZhbGlkYXRvclV0aWxzLm51bWJlclRvSGV4KHZhbHVlKTtcbiAgICBpZiAoaGV4c3RyaWN0KSB7XG4gICAgICAgIGlmICghdXBkYXRlZFZhbHVlLnN0YXJ0c1dpdGgoJy0nKSAmJiB1cGRhdGVkVmFsdWUubGVuZ3RoICUgMiA9PT0gMSkge1xuICAgICAgICAgICAgLy8gVG8gYXZvaWQgZHVwbGljYXRlIGEgY2lyY3VsYXIgZGVwZW5kZW5jeSB3ZSB3aWxsIG5vdCBiZSB1c2luZyB0aGUgcGFkTGVmdCBtZXRob2RcbiAgICAgICAgICAgIHVwZGF0ZWRWYWx1ZSA9ICcweDAnLmNvbmNhdCh1cGRhdGVkVmFsdWUuc2xpY2UoMikpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHVwZGF0ZWRWYWx1ZS5sZW5ndGggJSAyID09PSAwICYmIHVwZGF0ZWRWYWx1ZS5zdGFydHNXaXRoKCctJykpXG4gICAgICAgICAgICB1cGRhdGVkVmFsdWUgPSAnLTB4MCcuY29uY2F0KHVwZGF0ZWRWYWx1ZS5zbGljZSgzKSk7XG4gICAgfVxuICAgIHJldHVybiB1cGRhdGVkVmFsdWU7XG59O1xuLyoqXG4gKiBDb252ZXJ0cyB2YWx1ZSB0byBpdCdzIGhleCByZXByZXNlbnRhdGlvbiBAYWxpYXMgYG51bWJlclRvSGV4YFxuICpcbiAqL1xuZXhwb3J0IGNvbnN0IGZyb21EZWNpbWFsID0gbnVtYmVyVG9IZXg7XG4vKipcbiAqIENvbnZlcnRzIHZhbHVlIHRvIGl0J3MgZGVjaW1hbCByZXByZXNlbnRhdGlvbiBpbiBzdHJpbmdcbiAqIEBwYXJhbSB2YWx1ZSAtIEhleCBzdHJpbmcgdG8gYmUgY29udmVydGVkXG4gKiBAcmV0dXJucyAtIFRoZSBkZWNpbWFsIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBpbnB1dCB2YWx1ZVxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGB0c1xuICogY29uc29sZS5sb2cod2ViMy51dGlscy5oZXhUb051bWJlclN0cmluZygnMHhhJykpO1xuICogPiBcIjEwXCJcbiAqIGBgYFxuICovXG5leHBvcnQgY29uc3QgaGV4VG9OdW1iZXJTdHJpbmcgPSAoZGF0YSkgPT4gaGV4VG9OdW1iZXIoZGF0YSkudG9TdHJpbmcoKTtcbi8qKlxuICogU2hvdWxkIGJlIGNhbGxlZCB0byBnZXQgaGV4IHJlcHJlc2VudGF0aW9uIChwcmVmaXhlZCBieSAweCkgb2YgdXRmOCBzdHJpbmdcbiAqIEBwYXJhbSBzdHIgLSBVdGY4IHN0cmluZyB0byBiZSBjb252ZXJ0ZWRcbiAqIEByZXR1cm5zIC0gVGhlIGhleCByZXByZXNlbnRhdGlvbiBvZiB0aGUgaW5wdXQgc3RyaW5nXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYHRzXG4gKiBjb25zb2xlLmxvZyh1dGY4VG9IZXgoJ3dlYjMuanMnKSk7XG4gKiA+IFwiMHg3NzY1NjIzMzJlNmE3M1wiXG4gKiBgYGBcbiAqXG4gKi9cbmV4cG9ydCBjb25zdCB1dGY4VG9IZXggPSAoc3RyKSA9PiB7XG4gICAgdmFsaWRhdG9yLnZhbGlkYXRlKFsnc3RyaW5nJ10sIFtzdHJdKTtcbiAgICAvLyBUbyBiZSBjb21wYXRpYmxlIHdpdGggMS54IHRyaW0gbnVsbCBjaGFyYWN0ZXJcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29udHJvbC1yZWdleFxuICAgIGxldCBzdHJXaXRob3V0TnVsbENoYXJhY3RlciA9IHN0ci5yZXBsYWNlKC9eKD86XFx1MDAwMCkvLCAnJyk7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnRyb2wtcmVnZXhcbiAgICBzdHJXaXRob3V0TnVsbENoYXJhY3RlciA9IHN0cldpdGhvdXROdWxsQ2hhcmFjdGVyLnJlcGxhY2UoLyg/OlxcdTAwMDApJC8sICcnKTtcbiAgICByZXR1cm4gYnl0ZXNUb0hleChuZXcgVGV4dEVuY29kZXIoKS5lbmNvZGUoc3RyV2l0aG91dE51bGxDaGFyYWN0ZXIpKTtcbn07XG4vKipcbiAqIEBhbGlhcyB1dGY4VG9IZXhcbiAqL1xuZXhwb3J0IGNvbnN0IGZyb21VdGY4ID0gdXRmOFRvSGV4O1xuLyoqXG4gKiBAYWxpYXMgdXRmOFRvSGV4XG4gKi9cbmV4cG9ydCBjb25zdCBzdHJpbmdUb0hleCA9IHV0ZjhUb0hleDtcbi8qKlxuICogU2hvdWxkIGJlIGNhbGxlZCB0byBnZXQgdXRmOCBmcm9tIGl0J3MgaGV4IHJlcHJlc2VudGF0aW9uXG4gKiBAcGFyYW0gc3RyIC0gSGV4IHN0cmluZyB0byBiZSBjb252ZXJ0ZWRcbiAqIEByZXR1cm5zIC0gVXRmOCBzdHJpbmdcbiAqXG4gKiBAZXhhbXBsZVxuICogYGBgdHNcbiAqIGNvbnNvbGUubG9nKHdlYjMudXRpbHMuaGV4VG9VdGY4KCcweDQ4NjU2YzZjNmYyMDU3NmY3MjZjNjQnKSk7XG4gKiA+IEhlbGxvIFdvcmxkXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGNvbnN0IGhleFRvVXRmOCA9IChzdHIpID0+IGJ5dGVzVG9VdGY4KGhleFRvQnl0ZXMoc3RyKSk7XG4vKipcbiAqIEBhbGlhcyBoZXhUb1V0ZjhcbiAqL1xuZXhwb3J0IGNvbnN0IHRvVXRmOCA9IChpbnB1dCkgPT4ge1xuICAgIGlmICh0eXBlb2YgaW5wdXQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHJldHVybiBoZXhUb1V0ZjgoaW5wdXQpO1xuICAgIH1cbiAgICB2YWxpZGF0b3IudmFsaWRhdGUoWydieXRlcyddLCBbaW5wdXRdKTtcbiAgICByZXR1cm4gYnl0ZXNUb1V0ZjgoaW5wdXQpO1xufTtcbmV4cG9ydCBjb25zdCB1dGY4VG9CeXRlcyA9IGVjVXRmOFRvQnl0ZXM7XG4vKipcbiAqIEBhbGlhcyBoZXhUb1V0ZjhcbiAqL1xuZXhwb3J0IGNvbnN0IGhleFRvU3RyaW5nID0gaGV4VG9VdGY4O1xuLyoqXG4gKiBTaG91bGQgYmUgY2FsbGVkIHRvIGdldCBoZXggcmVwcmVzZW50YXRpb24gKHByZWZpeGVkIGJ5IDB4KSBvZiBhc2NpaSBzdHJpbmdcbiAqIEBwYXJhbSBzdHIgLSBTdHJpbmcgdG8gYmUgY29udmVydGVkIHRvIGhleFxuICogQHJldHVybnMgLSBIZXggc3RyaW5nXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYHRzXG4gKiBjb25zb2xlLmxvZyh3ZWIzLnV0aWxzLmFzY2lpVG9IZXgoJ0hlbGxvIFdvcmxkJykpO1xuICogPiAweDQ4NjU2YzZjNmYyMDU3NmY3MjZjNjRcbiAqIGBgYFxuICovXG5leHBvcnQgY29uc3QgYXNjaWlUb0hleCA9IChzdHIpID0+IHtcbiAgICB2YWxpZGF0b3IudmFsaWRhdGUoWydzdHJpbmcnXSwgW3N0cl0pO1xuICAgIGxldCBoZXhTdHJpbmcgPSAnJztcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHN0ci5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgICBjb25zdCBoZXhDaGFyQ29kZSA9IHN0ci5jaGFyQ29kZUF0KGkpLnRvU3RyaW5nKDE2KTtcbiAgICAgICAgLy8gbWlnaHQgbmVlZCBhIGxlYWRpbmcgMFxuICAgICAgICBoZXhTdHJpbmcgKz0gaGV4Q2hhckNvZGUubGVuZ3RoICUgMiAhPT0gMCA/IGAwJHtoZXhDaGFyQ29kZX1gIDogaGV4Q2hhckNvZGU7XG4gICAgfVxuICAgIHJldHVybiBgMHgke2hleFN0cmluZ31gO1xufTtcbi8qKlxuICogQGFsaWFzIGFzY2lpVG9IZXhcbiAqL1xuZXhwb3J0IGNvbnN0IGZyb21Bc2NpaSA9IGFzY2lpVG9IZXg7XG4vKipcbiAqIFNob3VsZCBiZSBjYWxsZWQgdG8gZ2V0IGFzY2lpIGZyb20gaXQncyBoZXggcmVwcmVzZW50YXRpb25cbiAqIEBwYXJhbSBzdHIgLSBIZXggc3RyaW5nIHRvIGJlIGNvbnZlcnRlZCB0byBhc2NpaVxuICogQHJldHVybnMgLSBBc2NpaSBzdHJpbmdcbiAqXG4gKiBAZXhhbXBsZVxuICogYGBgdHNcbiAqIGNvbnNvbGUubG9nKHdlYjMudXRpbHMuaGV4VG9Bc2NpaSgnMHg0ODY1NmM2YzZmMjA1NzZmNzI2YzY0JykpO1xuICogPiBIZWxsbyBXb3JsZFxuICogYGBgXG4gKi9cbmV4cG9ydCBjb25zdCBoZXhUb0FzY2lpID0gKHN0cikgPT4ge1xuICAgIGNvbnN0IGRlY29kZXIgPSBuZXcgVGV4dERlY29kZXIoJ2FzY2lpJyk7XG4gICAgcmV0dXJuIGRlY29kZXIuZGVjb2RlKGhleFRvQnl0ZXMoc3RyKSk7XG59O1xuLyoqXG4gKiBAYWxpYXMgaGV4VG9Bc2NpaVxuICovXG5leHBvcnQgY29uc3QgdG9Bc2NpaSA9IGhleFRvQXNjaWk7XG4vKipcbiAqIEF1dG8gY29udmVydHMgYW55IGdpdmVuIHZhbHVlIGludG8gaXQncyBoZXggcmVwcmVzZW50YXRpb24uXG4gKiBAcGFyYW0gdmFsdWUgLSBWYWx1ZSB0byBiZSBjb252ZXJ0ZWQgdG8gaGV4XG4gKiBAcGFyYW0gcmV0dXJuVHlwZSAtIElmIHRydWUsIGl0IHdpbGwgcmV0dXJuIHRoZSB0eXBlIG9mIHRoZSB2YWx1ZVxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGB0c1xuICogY29uc29sZS5sb2cod2ViMy51dGlscy50b0hleCgxMCkpO1xuICogPiAweGFcbiAqXG4gKiBjb25zb2xlLmxvZyh3ZWIzLnV0aWxzLnRvSGV4KCcweDEyMycsIHRydWUpKTtcbiAqID4gYnl0ZXNcbiAqYGBgXG4gKi9cbmV4cG9ydCBjb25zdCB0b0hleCA9ICh2YWx1ZSwgcmV0dXJuVHlwZSkgPT4ge1xuICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnICYmIGlzQWRkcmVzcyh2YWx1ZSkpIHtcbiAgICAgICAgcmV0dXJuIHJldHVyblR5cGUgPyAnYWRkcmVzcycgOiBgMHgke3ZhbHVlLnRvTG93ZXJDYXNlKCkucmVwbGFjZSgvXjB4L2ksICcnKX1gO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnYm9vbGVhbicpIHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLW5lc3RlZC10ZXJuYXJ5XG4gICAgICAgIHJldHVybiByZXR1cm5UeXBlID8gJ2Jvb2wnIDogdmFsdWUgPyAnMHgwMScgOiAnMHgwMCc7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdudW1iZXInKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1uZXN0ZWQtdGVybmFyeVxuICAgICAgICByZXR1cm4gcmV0dXJuVHlwZSA/ICh2YWx1ZSA8IDAgPyAnaW50MjU2JyA6ICd1aW50MjU2JykgOiBudW1iZXJUb0hleCh2YWx1ZSk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdiaWdpbnQnKSB7XG4gICAgICAgIHJldHVybiByZXR1cm5UeXBlID8gJ2JpZ2ludCcgOiBudW1iZXJUb0hleCh2YWx1ZSk7XG4gICAgfVxuICAgIGlmIChpc1VpbnQ4QXJyYXkodmFsdWUpKSB7XG4gICAgICAgIHJldHVybiByZXR1cm5UeXBlID8gJ2J5dGVzJyA6IGJ5dGVzVG9IZXgodmFsdWUpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiAhIXZhbHVlKSB7XG4gICAgICAgIHJldHVybiByZXR1cm5UeXBlID8gJ3N0cmluZycgOiB1dGY4VG9IZXgoSlNPTi5zdHJpbmdpZnkodmFsdWUpKTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgaWYgKHZhbHVlLnN0YXJ0c1dpdGgoJy0weCcpIHx8IHZhbHVlLnN0YXJ0c1dpdGgoJy0wWCcpKSB7XG4gICAgICAgICAgICByZXR1cm4gcmV0dXJuVHlwZSA/ICdpbnQyNTYnIDogbnVtYmVyVG9IZXgodmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpc0hleFN0cmljdCh2YWx1ZSkpIHtcbiAgICAgICAgICAgIHJldHVybiByZXR1cm5UeXBlID8gJ2J5dGVzJyA6IHZhbHVlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpc0hleCh2YWx1ZSkgJiYgIWlzSW50KHZhbHVlKSAmJiAhaXNVSW50KHZhbHVlKSkge1xuICAgICAgICAgICAgcmV0dXJuIHJldHVyblR5cGUgPyAnYnl0ZXMnIDogYDB4JHt2YWx1ZX1gO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpc0hleCh2YWx1ZSkgJiYgIWlzSW50KHZhbHVlKSAmJiBpc1VJbnQodmFsdWUpKSB7XG4gICAgICAgICAgICAvLyBUaGlzIGNvbmRpdGlvbiBzZWVtcyBwcm9ibGVtYXRpYyBiZWNhdXNlIG1lZXRpbmdcbiAgICAgICAgICAgIC8vIGJvdGggY29uZGl0aW9ucyBgIWlzSW50KHZhbHVlKSAmJiBpc1VJbnQodmFsdWUpYCBzaG91bGQgYmUgaW1wb3NzaWJsZS5cbiAgICAgICAgICAgIC8vIEJ1dCBhIHZhbHVlIHBhc3MgZm9yIHRob3NlIGNvbmRpdGlvbnM6IFwiMTAxNjExMTU0MTk1NTIwNzc2MzM1NzQxNDYzOTE3ODUzNDQ0NjcxNTc3ODY1Mzc4Mjc1OTI0NDkzMzc2NDI5MjY3NjM3NzkyNjM4NzI5XCJcbiAgICAgICAgICAgIC8vIE5vdGUgdGhhdCBhY2NvcmRpbmcgdG8gdGhlIGRvY3M6IGl0IGlzIHN1cHBvc2VkIHRvIGJlIHRyZWF0ZWQgYXMgYSBzdHJpbmcgKGh0dHBzOi8vZG9jcy53ZWIzanMub3JnL2d1aWRlcy93ZWIzX3VwZ3JhZGVfZ3VpZGUveC93ZWIzX3V0aWxzX21pZ3JhdGlvbl9ndWlkZSNjb252ZXJzaW9uLXRvLWhleClcbiAgICAgICAgICAgIC8vIEluIHNob3J0LCB0aGUgc3RyYW5nZSBpcyB0aGF0IGlzSW50KHZhbHVlKSBpcyBmYWxzZSBidXQgaXNVSW50KHZhbHVlKSBpcyB0cnVlIGZvciB0aGUgdmFsdWUgYWJvdmUuXG4gICAgICAgICAgICAvLyBUT0RPOiBpc1VJbnQodmFsdWUpIHNob3VsZCBiZSBpbnZlc3RpZ2F0ZWQuXG4gICAgICAgICAgICAvLyBIb3dldmVyLCBpZiBgdG9IZXgoJzEwMTYxMTE1NDE5NTUyMDc3NjMzNTc0MTQ2MzkxNzg1MzQ0NDY3MTU3Nzg2NTM3ODI3NTkyNDQ5MzM3NjQyOTI2NzYzNzc5MjYzODcyOScsIHRydWUpYCBpcyBjYWxsZWQsIGl0IHdpbGwgcmV0dXJuIGB0cnVlYC5cbiAgICAgICAgICAgIC8vIEJ1dCwgaWYgYHRvSGV4KCcxMDE2MTExNTQxOTU1MjA3NzYzMzU3NDE0NjM5MTc4NTM0NDQ2NzE1Nzc4NjUzNzgyNzU5MjQ0OTMzNzY0MjkyNjc2Mzc3OTI2Mzg3MjknKWAgaXMgY2FsbGVkLCBpdCB3aWxsIHRocm93IGluc2lkZSBgbnVtYmVyVG9IZXhgLlxuICAgICAgICAgICAgcmV0dXJuIHJldHVyblR5cGUgPyAndWludCcgOiBudW1iZXJUb0hleCh2YWx1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFOdW1iZXIuaXNGaW5pdGUodmFsdWUpKSB7XG4gICAgICAgICAgICByZXR1cm4gcmV0dXJuVHlwZSA/ICdzdHJpbmcnIDogdXRmOFRvSGV4KHZhbHVlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICB0aHJvdyBuZXcgSGV4UHJvY2Vzc2luZ0Vycm9yKHZhbHVlKTtcbn07XG4vKipcbiAqIENvbnZlcnRzIGFueSBnaXZlbiB2YWx1ZSBpbnRvIGl0J3MgbnVtYmVyIHJlcHJlc2VudGF0aW9uLCBpZiBwb3NzaWJsZSwgZWxzZSBpbnRvIGl0J3MgYmlnaW50IHJlcHJlc2VudGF0aW9uLlxuICogQHBhcmFtIHZhbHVlIC0gVGhlIHZhbHVlIHRvIGNvbnZlcnRcbiAqIEByZXR1cm5zIC0gUmV0dXJucyB0aGUgdmFsdWUgaW4gbnVtYmVyIG9yIGJpZ2ludCByZXByZXNlbnRhdGlvblxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGB0c1xuICogY29uc29sZS5sb2cod2ViMy51dGlscy50b051bWJlcigxKSk7XG4gKiA+IDFcbiAqIGNvbnNvbGUubG9nKHdlYjMudXRpbHMudG9OdW1iZXIoTnVtYmVyLk1BWF9TQUZFX0lOVEVHRVIpKTtcbiAqID4gOTAwNzE5OTI1NDc0MDk5MVxuICpcbiAqIGNvbnNvbGUubG9nKHdlYjMudXRpbHMudG9OdW1iZXIoQmlnSW50KE51bWJlci5NQVhfU0FGRV9JTlRFR0VSKSkpO1xuICogPiA5MDA3MTk5MjU0NzQwOTkxXG4gKlxuICogY29uc29sZS5sb2cod2ViMy51dGlscy50b051bWJlcihCaWdJbnQoTnVtYmVyLk1BWF9TQUZFX0lOVEVHRVIpICsgQmlnSW50KDEpKSk7XG4gKiA+IDkwMDcxOTkyNTQ3NDA5OTJuXG4gKlxuICogYGBgXG4gKi9cbmV4cG9ydCBjb25zdCB0b051bWJlciA9ICh2YWx1ZSkgPT4ge1xuICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdudW1iZXInKSB7XG4gICAgICAgIGlmICh2YWx1ZSA+IDFlMjApIHtcbiAgICAgICAgICAgIGNvbnNvbGUud2FybihQcmVjaXNpb25Mb3NzV2FybmluZyk7XG4gICAgICAgICAgICAvLyBKYXZhU2NyaXB0IGNvbnZlcnRzIG51bWJlcnMgPj0gMTBeMjEgdG8gc2NpZW50aWZpYyBub3RhdGlvbiB3aGVuIGNvZXJjZWQgdG8gc3RyaW5ncyxcbiAgICAgICAgICAgIC8vIGxlYWRpbmcgdG8gcG90ZW50aWFsIHBhcnNpbmcgZXJyb3JzIGFuZCBpbmNvcnJlY3QgcmVwcmVzZW50YXRpb25zLlxuICAgICAgICAgICAgLy8gRm9yIGluc3RhbmNlLCBTdHJpbmcoMTAwMDAwMDAwMDAwMDAwMDAwMDAwMDApIHlpZWxkcyAnMWUrMjInLlxuICAgICAgICAgICAgLy8gVXNpbmcgQmlnSW50IHByZXZlbnRzIHRoaXNcbiAgICAgICAgICAgIHJldHVybiBCaWdJbnQodmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ2JpZ2ludCcpIHtcbiAgICAgICAgcmV0dXJuIHZhbHVlID49IE51bWJlci5NSU5fU0FGRV9JTlRFR0VSICYmIHZhbHVlIDw9IE51bWJlci5NQVhfU0FGRV9JTlRFR0VSXG4gICAgICAgICAgICA/IE51bWJlcih2YWx1ZSlcbiAgICAgICAgICAgIDogdmFsdWU7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnICYmIGlzSGV4U3RyaWN0KHZhbHVlKSkge1xuICAgICAgICByZXR1cm4gaGV4VG9OdW1iZXIodmFsdWUpO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgICByZXR1cm4gdG9OdW1iZXIoQmlnSW50KHZhbHVlKSk7XG4gICAgfVxuICAgIGNhdGNoIChfYSkge1xuICAgICAgICB0aHJvdyBuZXcgSW52YWxpZE51bWJlckVycm9yKHZhbHVlKTtcbiAgICB9XG59O1xuLyoqXG4gKiBBdXRvIGNvbnZlcnRzIGFueSBnaXZlbiB2YWx1ZSBpbnRvIGl0J3MgYmlnaW50IHJlcHJlc2VudGF0aW9uXG4gKlxuICogQHBhcmFtIHZhbHVlIC0gVGhlIHZhbHVlIHRvIGNvbnZlcnRcbiAqIEByZXR1cm5zIC0gUmV0dXJucyB0aGUgdmFsdWUgaW4gYmlnaW50IHJlcHJlc2VudGF0aW9uXG5cbiAqIEBleGFtcGxlXG4gKiBgYGB0c1xuICogY29uc29sZS5sb2cod2ViMy51dGlscy50b0JpZ0ludCgxKSk7XG4gKiA+IDFuXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGNvbnN0IHRvQmlnSW50ID0gKHZhbHVlKSA9PiB7XG4gICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgcmV0dXJuIEJpZ0ludCh2YWx1ZSk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdiaWdpbnQnKSB7XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG4gICAgLy8gaXNIZXggcGFzc2VzIGZvciBkZWMsIHRvb1xuICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnICYmIGlzSGV4KHZhbHVlKSkge1xuICAgICAgICBpZiAodmFsdWUuc3RhcnRzV2l0aCgnLScpKSB7XG4gICAgICAgICAgICByZXR1cm4gLUJpZ0ludCh2YWx1ZS5zdWJzdHJpbmcoMSkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBCaWdJbnQodmFsdWUpO1xuICAgIH1cbiAgICB0aHJvdyBuZXcgSW52YWxpZE51bWJlckVycm9yKHZhbHVlKTtcbn07XG4vKipcbiAqIFRha2VzIGEgbnVtYmVyIG9mIHdlaSBhbmQgY29udmVydHMgaXQgdG8gYW55IG90aGVyIGV0aGVyIHVuaXQuXG4gKiBAcGFyYW0gbnVtYmVyIC0gVGhlIHZhbHVlIGluIHdlaVxuICogQHBhcmFtIHVuaXQgLSBUaGUgdW5pdCB0byBjb252ZXJ0IHRvXG4gKiBAcmV0dXJucyAtIFJldHVybnMgdGhlIGNvbnZlcnRlZCB2YWx1ZSBpbiB0aGUgZ2l2ZW4gdW5pdFxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGB0c1xuICogY29uc29sZS5sb2cod2ViMy51dGlscy5mcm9tV2VpKFwiMVwiLCBcImV0aGVyXCIpKTtcbiAqID4gMC4wMDAwMDAwMDAwMDAwMDAwMDFcbiAqXG4gKiBjb25zb2xlLmxvZyh3ZWIzLnV0aWxzLmZyb21XZWkoXCIxXCIsIFwic2hhbm5vblwiKSk7XG4gKiA+IDAuMDAwMDAwMDAxXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGNvbnN0IGZyb21XZWkgPSAobnVtYmVyLCB1bml0KSA9PiB7XG4gICAgbGV0IGRlbm9taW5hdGlvbjtcbiAgICBpZiAodHlwZW9mIHVuaXQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGRlbm9taW5hdGlvbiA9IGV0aFVuaXRNYXBbdW5pdF07XG4gICAgICAgIGlmICghZGVub21pbmF0aW9uKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgSW52YWxpZFVuaXRFcnJvcih1bml0KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgaWYgKHVuaXQgPCAwIHx8ICFOdW1iZXIuaXNJbnRlZ2VyKHVuaXQpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgSW52YWxpZEludGVnZXJFcnJvcih1bml0KTtcbiAgICAgICAgfVxuICAgICAgICBkZW5vbWluYXRpb24gPSBiaWdpbnRQb3dlcihCaWdJbnQoMTApLCBCaWdJbnQodW5pdCkpO1xuICAgIH1cbiAgICAvLyB2YWx1ZSBpbiB3ZWkgd291bGQgYWx3YXlzIGJlIGludGVnZXJcbiAgICAvLyAxMzQ1Njc4OSwgMTIzNFxuICAgIGNvbnN0IHZhbHVlID0gU3RyaW5nKHRvTnVtYmVyKG51bWJlcikpO1xuICAgIC8vIGNvdW50IG51bWJlciBvZiB6ZXJvcyBpbiBkZW5vbWluYXRpb25cbiAgICAvLyAxMDAwMDAwIC0+IDZcbiAgICBjb25zdCBudW1iZXJPZlplcm9zSW5EZW5vbWluYXRpb24gPSBkZW5vbWluYXRpb24udG9TdHJpbmcoKS5sZW5ndGggLSAxO1xuICAgIGlmIChudW1iZXJPZlplcm9zSW5EZW5vbWluYXRpb24gPD0gMCkge1xuICAgICAgICByZXR1cm4gdmFsdWUudG9TdHJpbmcoKTtcbiAgICB9XG4gICAgLy8gcGFkIHRoZSB2YWx1ZSB3aXRoIHJlcXVpcmVkIHplcm9zXG4gICAgLy8gMTM0NTY3ODkgLT4gMTM0NTY3ODksIDEyMzQgLT4gMDAxMjM0XG4gICAgY29uc3QgemVyb1BhZGRlZFZhbHVlID0gdmFsdWUucGFkU3RhcnQobnVtYmVyT2ZaZXJvc0luRGVub21pbmF0aW9uLCAnMCcpO1xuICAgIC8vIGdldCB0aGUgaW50ZWdlciBwYXJ0IG9mIHZhbHVlIGJ5IGNvdW50aW5nIG51bWJlciBvZiB6ZXJvcyBmcm9tIHN0YXJ0XG4gICAgLy8gMTM0NTY3ODkgLT4gJzEzJ1xuICAgIC8vIDAwMTIzNCAtPiAnJ1xuICAgIGNvbnN0IGludGVnZXIgPSB6ZXJvUGFkZGVkVmFsdWUuc2xpY2UoMCwgLW51bWJlck9mWmVyb3NJbkRlbm9taW5hdGlvbik7XG4gICAgLy8gZ2V0IHRoZSBmcmFjdGlvbiBwYXJ0IG9mIHZhbHVlIGJ5IGNvdW50aW5nIG51bWJlciBvZiB6ZXJvcyBiYWNrd2FyZFxuICAgIC8vIDEzNDU2Nzg5IC0+ICc0NTY3ODknXG4gICAgLy8gMDAxMjM0IC0+ICcwMDEyMzQnXG4gICAgY29uc3QgZnJhY3Rpb24gPSB6ZXJvUGFkZGVkVmFsdWUuc2xpY2UoLW51bWJlck9mWmVyb3NJbkRlbm9taW5hdGlvbikucmVwbGFjZSgvXFwuPzArJC8sICcnKTtcbiAgICBpZiAoaW50ZWdlciA9PT0gJycpIHtcbiAgICAgICAgcmV0dXJuIGZyYWN0aW9uID8gYDAuJHtmcmFjdGlvbn1gIDogJzAnO1xuICAgIH1cbiAgICBpZiAoZnJhY3Rpb24gPT09ICcnKSB7XG4gICAgICAgIHJldHVybiBpbnRlZ2VyO1xuICAgIH1cbiAgICBjb25zdCB1cGRhdGVkVmFsdWUgPSBgJHtpbnRlZ2VyfS4ke2ZyYWN0aW9ufWA7XG4gICAgcmV0dXJuIHVwZGF0ZWRWYWx1ZS5zbGljZSgwLCBpbnRlZ2VyLmxlbmd0aCArIG51bWJlck9mWmVyb3NJbkRlbm9taW5hdGlvbiArIDEpO1xufTtcbi8qKlxuICogVGFrZXMgYSBudW1iZXIgb2YgYSB1bml0IGFuZCBjb252ZXJ0cyBpdCB0byB3ZWkuXG4gKlxuICogQHBhcmFtIG51bWJlciAtIFRoZSBudW1iZXIgdG8gY29udmVydC5cbiAqIEBwYXJhbSB1bml0IC0ge0BsaW5rIEV0aGVyVW5pdHN9IFRoZSB1bml0IG9mIHRoZSBudW1iZXIgcGFzc2VkLlxuICogQHJldHVybnMgVGhlIG51bWJlciBjb252ZXJ0ZWQgdG8gd2VpLlxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGB0c1xuICogY29uc29sZS5sb2cod2ViMy51dGlscy50b1dlaShcIjAuMDAxXCIsIFwiZXRoZXJcIikpO1xuICogPiAxMDAwMDAwMDAwMDAwMDAwIC8vKHdlaSlcbiAqIGBgYFxuICovXG4vLyB0b2RvIGluIDEueCB1bml0IGRlZmF1bHRzIHRvICdldGhlcidcbmV4cG9ydCBjb25zdCB0b1dlaSA9IChudW1iZXIsIHVuaXQpID0+IHtcbiAgICB2YWxpZGF0b3IudmFsaWRhdGUoWydudW1iZXInXSwgW251bWJlcl0pO1xuICAgIGxldCBkZW5vbWluYXRpb247XG4gICAgaWYgKHR5cGVvZiB1bml0ID09PSAnc3RyaW5nJykge1xuICAgICAgICBkZW5vbWluYXRpb24gPSBldGhVbml0TWFwW3VuaXRdO1xuICAgICAgICBpZiAoIWRlbm9taW5hdGlvbikge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEludmFsaWRVbml0RXJyb3IodW5pdCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGlmICh1bml0IDwgMCB8fCAhTnVtYmVyLmlzSW50ZWdlcih1bml0KSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEludmFsaWRJbnRlZ2VyRXJyb3IodW5pdCk7XG4gICAgICAgIH1cbiAgICAgICAgZGVub21pbmF0aW9uID0gYmlnaW50UG93ZXIoQmlnSW50KDEwKSwgQmlnSW50KHVuaXQpKTtcbiAgICB9XG4gICAgbGV0IHBhcnNlZE51bWJlciA9IG51bWJlcjtcbiAgICBpZiAodHlwZW9mIHBhcnNlZE51bWJlciA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgaWYgKHBhcnNlZE51bWJlciA8IDFlLTE1KSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oUHJlY2lzaW9uTG9zc1dhcm5pbmcpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChwYXJzZWROdW1iZXIgPiAxZTIwKSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oUHJlY2lzaW9uTG9zc1dhcm5pbmcpO1xuICAgICAgICAgICAgcGFyc2VkTnVtYmVyID0gQmlnSW50KHBhcnNlZE51bWJlcik7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAvLyBpbiBjYXNlIHRoZXJlIGlzIGEgZGVjaW1hbCBwb2ludCwgd2UgbmVlZCB0byBjb252ZXJ0IGl0IHRvIHN0cmluZ1xuICAgICAgICAgICAgcGFyc2VkTnVtYmVyID0gcGFyc2VkTnVtYmVyLnRvTG9jYWxlU3RyaW5nKCdmdWxsd2lkZScsIHtcbiAgICAgICAgICAgICAgICB1c2VHcm91cGluZzogZmFsc2UsXG4gICAgICAgICAgICAgICAgbWF4aW11bUZyYWN0aW9uRGlnaXRzOiAyMCxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8vIGlmIHZhbHVlIGlzIGRlY2ltYWwgZS5nLiAyNC41NiBleHRyYWN0IGBpbnRlZ2VyYCBhbmQgYGZyYWN0aW9uYCBwYXJ0XG4gICAgLy8gdG8gYXZvaWQgYGZyYWN0aW9uYCB0byBiZSBudWxsIHVzZSBgY29uY2F0YCB3aXRoIGVtcHR5IHN0cmluZ1xuICAgIGNvbnN0IFtpbnRlZ2VyLCBmcmFjdGlvbl0gPSBTdHJpbmcodHlwZW9mIHBhcnNlZE51bWJlciA9PT0gJ3N0cmluZycgJiYgIWlzSGV4U3RyaWN0KHBhcnNlZE51bWJlcilcbiAgICAgICAgPyBwYXJzZWROdW1iZXJcbiAgICAgICAgOiB0b051bWJlcihwYXJzZWROdW1iZXIpKVxuICAgICAgICAuc3BsaXQoJy4nKVxuICAgICAgICAuY29uY2F0KCcnKTtcbiAgICAvLyBqb2luIHRoZSB2YWx1ZSByZW1vdmluZyBgLmAgZnJvbVxuICAgIC8vIDI0LjU2IC0+IDI0NTZcbiAgICBjb25zdCB2YWx1ZSA9IEJpZ0ludChgJHtpbnRlZ2VyfSR7ZnJhY3Rpb259YCk7XG4gICAgLy8gbXVsdGlwbHkgdmFsdWUgd2l0aCBkZW5vbWluYXRpb25cbiAgICAvLyAyNDU2ICogMTAwMDAwMCAtPiAyNDU2MDAwMDAwXG4gICAgY29uc3QgdXBkYXRlZFZhbHVlID0gdmFsdWUgKiBkZW5vbWluYXRpb247XG4gICAgLy8gY2hlY2sgaWYgd2hvbGUgbnVtYmVyIHdhcyBwYXNzZWQgaW5cbiAgICBjb25zdCBkZWNpbWFscyA9IGZyYWN0aW9uLmxlbmd0aDtcbiAgICBpZiAoZGVjaW1hbHMgPT09IDApIHtcbiAgICAgICAgcmV0dXJuIHVwZGF0ZWRWYWx1ZS50b1N0cmluZygpO1xuICAgIH1cbiAgICAvLyB0cmltIHRoZSB2YWx1ZSB0byByZW1vdmUgZXh0cmEgemVyb3NcbiAgICByZXR1cm4gdXBkYXRlZFZhbHVlLnRvU3RyaW5nKCkuc2xpY2UoMCwgLWRlY2ltYWxzKTtcbn07XG4vKipcbiAqIFdpbGwgY29udmVydCBhbiB1cHBlciBvciBsb3dlcmNhc2UgRXRoZXJldW0gYWRkcmVzcyB0byBhIGNoZWNrc3VtIGFkZHJlc3MuXG4gKiBAcGFyYW0gYWRkcmVzcyAtIEFuIGFkZHJlc3Mgc3RyaW5nXG4gKiBAcmV0dXJuc1x0VGhlIGNoZWNrc3VtIGFkZHJlc3NcbiAqIEBleGFtcGxlXG4gKiBgYGB0c1xuICogd2ViMy51dGlscy50b0NoZWNrc3VtQWRkcmVzcygnMHhjMTkxMmZlZTQ1ZDYxYzg3Y2M1ZWE1OWRhZTMxMTkwZmZmZmYyMzJkJyk7XG4gKiA+IFwiMHhjMTkxMmZFRTQ1ZDYxQzg3Q2M1RUE1OURhRTMxMTkwRkZGRmYyMzJkXCJcbiAqIGBgYFxuICovXG5leHBvcnQgY29uc3QgdG9DaGVja3N1bUFkZHJlc3MgPSAoYWRkcmVzcykgPT4ge1xuICAgIGlmICghaXNBZGRyZXNzKGFkZHJlc3MsIGZhbHNlKSkge1xuICAgICAgICB0aHJvdyBuZXcgSW52YWxpZEFkZHJlc3NFcnJvcihhZGRyZXNzKTtcbiAgICB9XG4gICAgY29uc3QgbG93ZXJDYXNlQWRkcmVzcyA9IGFkZHJlc3MudG9Mb3dlckNhc2UoKS5yZXBsYWNlKC9eMHgvaSwgJycpO1xuICAgIC8vIGNhbGxpbmcgYFVpbnQ4QXJyYXkuZnJvbWAgYmVjYXVzZSBgbm9ibGUtaGFzaGVzYCBjaGVja3Mgd2l0aCBgaW5zdGFuY2VvZiBVaW50OEFycmF5YCB0aGF0IGZhaWxzIGluIHNvbWUgZWRnZSBjYXNlczpcbiAgICAvLyBcdGh0dHBzOi8vZ2l0aHViLmNvbS9wYXVsbWlsbHIvbm9ibGUtaGFzaGVzL2lzc3Vlcy8yNSNpc3N1ZWNvbW1lbnQtMTc1MDEwNjI4NFxuICAgIGNvbnN0IGhhc2ggPSB1dGlscy51aW50OEFycmF5VG9IZXhTdHJpbmcoa2VjY2FrMjU2KHZhbGlkYXRvclV0aWxzLmVuc3VyZUlmVWludDhBcnJheSh1dGY4VG9CeXRlcyhsb3dlckNhc2VBZGRyZXNzKSkpKTtcbiAgICBpZiAoaXNOdWxsaXNoKGhhc2gpIHx8XG4gICAgICAgIGhhc2ggPT09ICcweGM1ZDI0NjAxODZmNzIzM2M5MjdlN2RiMmRjYzcwM2MwZTUwMGI2NTNjYTgyMjczYjdiZmFkODA0NWQ4NWE0NzAnKVxuICAgICAgICByZXR1cm4gJyc7IC8vIC8vIEVJUC0xMDUyIGlmIGhhc2ggaXMgZXF1YWwgdG8gYzVkMjQ2MDE4NmY3MjMzYzkyN2U3ZGIyZGNjNzAzYzBlNTAwYjY1M2NhODIyNzNiN2JmYWQ4MDQ1ZDg1YTQ3MCwga2VjY2FrIHdhcyBnaXZlbiBlbXB0eSBkYXRhXG4gICAgbGV0IGNoZWNrc3VtQWRkcmVzcyA9ICcweCc7XG4gICAgY29uc3QgYWRkcmVzc0hhc2ggPSBoYXNoLnJlcGxhY2UoL14weC9pLCAnJyk7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsb3dlckNhc2VBZGRyZXNzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICAgIC8vIElmIGl0aCBjaGFyYWN0ZXIgaXMgOCB0byBmIHRoZW4gbWFrZSBpdCB1cHBlcmNhc2VcbiAgICAgICAgaWYgKHBhcnNlSW50KGFkZHJlc3NIYXNoW2ldLCAxNikgPiA3KSB7XG4gICAgICAgICAgICBjaGVja3N1bUFkZHJlc3MgKz0gbG93ZXJDYXNlQWRkcmVzc1tpXS50b1VwcGVyQ2FzZSgpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgY2hlY2tzdW1BZGRyZXNzICs9IGxvd2VyQ2FzZUFkZHJlc3NbaV07XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGNoZWNrc3VtQWRkcmVzcztcbn07XG5leHBvcnQgY29uc3QgdG9Cb29sID0gKHZhbHVlKSA9PiB7XG4gICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ2Jvb2xlYW4nKSB7XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ251bWJlcicgJiYgKHZhbHVlID09PSAwIHx8IHZhbHVlID09PSAxKSkge1xuICAgICAgICByZXR1cm4gQm9vbGVhbih2YWx1ZSk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdiaWdpbnQnICYmICh2YWx1ZSA9PT0gQmlnSW50KDApIHx8IHZhbHVlID09PSBCaWdJbnQoMSkpKSB7XG4gICAgICAgIHJldHVybiBCb29sZWFuKHZhbHVlKTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgJiZcbiAgICAgICAgIWlzSGV4U3RyaWN0KHZhbHVlKSAmJlxuICAgICAgICAodmFsdWUgPT09ICcxJyB8fCB2YWx1ZSA9PT0gJzAnIHx8IHZhbHVlID09PSAnZmFsc2UnIHx8IHZhbHVlID09PSAndHJ1ZScpKSB7XG4gICAgICAgIGlmICh2YWx1ZSA9PT0gJ3RydWUnKSB7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodmFsdWUgPT09ICdmYWxzZScpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gQm9vbGVhbihOdW1iZXIodmFsdWUpKTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgJiYgaXNIZXhTdHJpY3QodmFsdWUpICYmICh2YWx1ZSA9PT0gJzB4MScgfHwgdmFsdWUgPT09ICcweDAnKSkge1xuICAgICAgICByZXR1cm4gQm9vbGVhbih0b051bWJlcih2YWx1ZSkpO1xuICAgIH1cbiAgICB0aHJvdyBuZXcgSW52YWxpZEJvb2xlYW5FcnJvcih2YWx1ZSk7XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29udmVydGVycy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-utils/lib/esm/converters.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-utils/lib/esm/event_emitter.js":
/*!**********************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/event_emitter.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EventEmitter: () => (/* binding */ EventEmitter)\n/* harmony export */ });\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! eventemitter3 */ \"(ssr)/./node_modules/eventemitter3/index.mjs\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/* eslint-disable max-classes-per-file */\n\n/**\n * This class copy the behavior of Node.js EventEmitter class.\n * It is used to provide the same interface for the browser environment.\n */\nclass EventEmitter extends eventemitter3__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor() {\n        super(...arguments);\n        // must be defined for backwards compatibility\n        this.maxListeners = Number.MAX_SAFE_INTEGER;\n    }\n    setMaxListeners(maxListeners) {\n        this.maxListeners = maxListeners;\n        return this;\n    }\n    getMaxListeners() {\n        return this.maxListeners;\n    }\n}\n//# sourceMappingURL=event_emitter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy11dGlscy9saWIvZXNtL2V2ZW50X2VtaXR0ZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDMEM7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDTywyQkFBMkIscURBQWE7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL21vcnBoLXBheS1zZGsvLi9ub2RlX21vZHVsZXMvd2ViMy11dGlscy9saWIvZXNtL2V2ZW50X2VtaXR0ZXIuanM/MzE5MyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuVGhpcyBmaWxlIGlzIHBhcnQgb2Ygd2ViMy5qcy5cblxud2ViMy5qcyBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG5pdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbnRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4oYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuXG53ZWIzLmpzIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG5idXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG5cbllvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuYWxvbmcgd2l0aCB3ZWIzLmpzLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuKi9cbi8qIGVzbGludC1kaXNhYmxlIG1heC1jbGFzc2VzLXBlci1maWxlICovXG5pbXBvcnQgRXZlbnRFbWl0dGVyMyBmcm9tICdldmVudGVtaXR0ZXIzJztcbi8qKlxuICogVGhpcyBjbGFzcyBjb3B5IHRoZSBiZWhhdmlvciBvZiBOb2RlLmpzIEV2ZW50RW1pdHRlciBjbGFzcy5cbiAqIEl0IGlzIHVzZWQgdG8gcHJvdmlkZSB0aGUgc2FtZSBpbnRlcmZhY2UgZm9yIHRoZSBicm93c2VyIGVudmlyb25tZW50LlxuICovXG5leHBvcnQgY2xhc3MgRXZlbnRFbWl0dGVyIGV4dGVuZHMgRXZlbnRFbWl0dGVyMyB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIC8vIG11c3QgYmUgZGVmaW5lZCBmb3IgYmFja3dhcmRzIGNvbXBhdGliaWxpdHlcbiAgICAgICAgdGhpcy5tYXhMaXN0ZW5lcnMgPSBOdW1iZXIuTUFYX1NBRkVfSU5URUdFUjtcbiAgICB9XG4gICAgc2V0TWF4TGlzdGVuZXJzKG1heExpc3RlbmVycykge1xuICAgICAgICB0aGlzLm1heExpc3RlbmVycyA9IG1heExpc3RlbmVycztcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIGdldE1heExpc3RlbmVycygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubWF4TGlzdGVuZXJzO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWV2ZW50X2VtaXR0ZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-utils/lib/esm/event_emitter.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-utils/lib/esm/formatter.js":
/*!******************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/formatter.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   convert: () => (/* binding */ convert),\n/* harmony export */   convertScalarValue: () => (/* binding */ convertScalarValue),\n/* harmony export */   format: () => (/* binding */ format),\n/* harmony export */   isDataFormat: () => (/* binding */ isDataFormat)\n/* harmony export */ });\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-types */ \"(ssr)/./node_modules/web3-types/lib/esm/index.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var _converters_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./converters.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/converters.js\");\n/* harmony import */ var _objects_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./objects.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/objects.js\");\n/* harmony import */ var _string_manipulation_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./string_manipulation.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/string_manipulation.js\");\n/* harmony import */ var _uint8array_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./uint8array.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/uint8array.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\n\n\n\n\n\nconst { parseBaseType } = web3_validator__WEBPACK_IMPORTED_MODULE_2__.utils;\nconst isDataFormat = (dataFormat) => typeof dataFormat === 'object' &&\n    !(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isNullish)(dataFormat) &&\n    'number' in dataFormat &&\n    'bytes' in dataFormat;\n/**\n * Finds the schema that corresponds to a specific data path within a larger JSON schema.\n * It works by iterating over the dataPath array and traversing the JSON schema one step at a time until it reaches the end of the path.\n *\n * @param schema - represents a JSON schema, which is an object that describes the structure of JSON data\n * @param dataPath - represents an array of strings that specifies the path to the data within the JSON schema\n * @param oneOfPath - represents an optional array of two-element tuples that specifies the \"oneOf\" option to choose, if the schema has oneOf and the data path can match multiple subschemas\n * @returns the JSON schema that matches the data path\n *\n */\nconst findSchemaByDataPath = (schema, dataPath, oneOfPath = []) => {\n    let result = Object.assign({}, schema);\n    let previousDataPath;\n    for (const dataPart of dataPath) {\n        if (result.oneOf && previousDataPath) {\n            const currentDataPath = previousDataPath;\n            const path = oneOfPath.find(([key]) => key === currentDataPath);\n            if (path && path[0] === previousDataPath) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n                result = result.oneOf[path[1]];\n            }\n        }\n        if (!result.properties && !result.items) {\n            return undefined;\n        }\n        if (result.properties) {\n            result = result.properties[dataPart];\n        }\n        else if (result.items && result.items.properties) {\n            const node = result.items.properties;\n            result = node[dataPart];\n        }\n        else if (result.items && (0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isObject)(result.items)) {\n            result = result.items;\n        }\n        else if (result.items && Array.isArray(result.items)) {\n            result = result.items[parseInt(dataPart, 10)];\n        }\n        if (result && dataPart)\n            previousDataPath = dataPart;\n    }\n    return result;\n};\n/**\n * Converts a value depending on the format\n * @param value - value to convert\n * @param ethType - The type of the value to be parsed\n * @param format - The format to be converted to\n * @returns - The value converted to the specified format\n */\nconst convertScalarValue = (value, ethType, format) => {\n    try {\n        const { baseType, baseTypeSize } = parseBaseType(ethType);\n        if (baseType === 'int' || baseType === 'uint') {\n            switch (format.number) {\n                case web3_types__WEBPACK_IMPORTED_MODULE_1__.FMT_NUMBER.NUMBER:\n                    return Number((0,_converters_js__WEBPACK_IMPORTED_MODULE_3__.toBigInt)(value));\n                case web3_types__WEBPACK_IMPORTED_MODULE_1__.FMT_NUMBER.HEX:\n                    return (0,_converters_js__WEBPACK_IMPORTED_MODULE_3__.numberToHex)((0,_converters_js__WEBPACK_IMPORTED_MODULE_3__.toBigInt)(value));\n                case web3_types__WEBPACK_IMPORTED_MODULE_1__.FMT_NUMBER.STR:\n                    return (0,_converters_js__WEBPACK_IMPORTED_MODULE_3__.toBigInt)(value).toString();\n                case web3_types__WEBPACK_IMPORTED_MODULE_1__.FMT_NUMBER.BIGINT:\n                    return (0,_converters_js__WEBPACK_IMPORTED_MODULE_3__.toBigInt)(value);\n                default:\n                    throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.FormatterError(`Invalid format: ${String(format.number)}`);\n            }\n        }\n        if (baseType === 'bytes') {\n            let paddedValue;\n            if (baseTypeSize) {\n                if (typeof value === 'string')\n                    paddedValue = (0,_string_manipulation_js__WEBPACK_IMPORTED_MODULE_5__.padLeft)(value, baseTypeSize * 2);\n                else if ((0,_uint8array_js__WEBPACK_IMPORTED_MODULE_6__.isUint8Array)(value)) {\n                    paddedValue = (0,_uint8array_js__WEBPACK_IMPORTED_MODULE_6__.uint8ArrayConcat)(new Uint8Array(baseTypeSize - value.length), value);\n                }\n            }\n            else {\n                paddedValue = value;\n            }\n            switch (format.bytes) {\n                case web3_types__WEBPACK_IMPORTED_MODULE_1__.FMT_BYTES.HEX:\n                    return (0,_converters_js__WEBPACK_IMPORTED_MODULE_3__.bytesToHex)((0,_converters_js__WEBPACK_IMPORTED_MODULE_3__.bytesToUint8Array)(paddedValue));\n                case web3_types__WEBPACK_IMPORTED_MODULE_1__.FMT_BYTES.UINT8ARRAY:\n                    return (0,_converters_js__WEBPACK_IMPORTED_MODULE_3__.bytesToUint8Array)(paddedValue);\n                default:\n                    throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.FormatterError(`Invalid format: ${String(format.bytes)}`);\n            }\n        }\n        if (baseType === 'string') {\n            return String(value);\n        }\n    }\n    catch (error) {\n        // If someone didn't use `eth` keyword we can return original value\n        // as the scope of this code is formatting not validation\n        return value;\n    }\n    return value;\n};\nconst convertArray = ({ value, schemaProp, schema, object, key, dataPath, format, oneOfPath = [], }) => {\n    var _a, _b;\n    // If value is an array\n    if (Array.isArray(value)) {\n        let _schemaProp = schemaProp;\n        // TODO This is a naive approach to solving the issue of\n        // a schema using oneOf. This chunk of code was intended to handle\n        // BlockSchema.transactions\n        // TODO BlockSchema.transactions are not being formatted\n        if ((schemaProp === null || schemaProp === void 0 ? void 0 : schemaProp.oneOf) !== undefined) {\n            // The following code is basically saying:\n            // if the schema specifies oneOf, then we are to loop\n            // over each possible schema and check if they type of the schema\n            // matches the type of value[0], and if so we use the oneOfSchemaProp\n            // as the schema for formatting\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n            schemaProp.oneOf.forEach((oneOfSchemaProp, index) => {\n                var _a, _b;\n                if (!Array.isArray(schemaProp === null || schemaProp === void 0 ? void 0 : schemaProp.items) &&\n                    ((typeof value[0] === 'object' &&\n                        ((_a = oneOfSchemaProp === null || oneOfSchemaProp === void 0 ? void 0 : oneOfSchemaProp.items) === null || _a === void 0 ? void 0 : _a.type) === 'object') ||\n                        (typeof value[0] === 'string' &&\n                            ((_b = oneOfSchemaProp === null || oneOfSchemaProp === void 0 ? void 0 : oneOfSchemaProp.items) === null || _b === void 0 ? void 0 : _b.type) !== 'object'))) {\n                    _schemaProp = oneOfSchemaProp;\n                    oneOfPath.push([key, index]);\n                }\n            });\n        }\n        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isNullish)(_schemaProp === null || _schemaProp === void 0 ? void 0 : _schemaProp.items)) {\n            // Can not find schema for array item, delete that item\n            // eslint-disable-next-line no-param-reassign\n            delete object[key];\n            dataPath.pop();\n            return true;\n        }\n        // If schema for array items is a single type\n        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isObject)(_schemaProp.items) && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isNullish)(_schemaProp.items.format)) {\n            for (let i = 0; i < value.length; i += 1) {\n                // eslint-disable-next-line no-param-reassign\n                object[key][i] = convertScalarValue(value[i], \n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                (_a = _schemaProp === null || _schemaProp === void 0 ? void 0 : _schemaProp.items) === null || _a === void 0 ? void 0 : _a.format, format);\n            }\n            dataPath.pop();\n            return true;\n        }\n        // If schema for array items is an object\n        if (!Array.isArray(_schemaProp === null || _schemaProp === void 0 ? void 0 : _schemaProp.items) && ((_b = _schemaProp === null || _schemaProp === void 0 ? void 0 : _schemaProp.items) === null || _b === void 0 ? void 0 : _b.type) === 'object') {\n            for (const arrObject of value) {\n                // eslint-disable-next-line no-use-before-define\n                convert(arrObject, schema, dataPath, format, oneOfPath);\n            }\n            dataPath.pop();\n            return true;\n        }\n        // If schema for array is a tuple\n        if (Array.isArray(_schemaProp === null || _schemaProp === void 0 ? void 0 : _schemaProp.items)) {\n            for (let i = 0; i < value.length; i += 1) {\n                // eslint-disable-next-line no-param-reassign\n                object[key][i] = convertScalarValue(value[i], _schemaProp.items[i].format, format);\n            }\n            dataPath.pop();\n            return true;\n        }\n    }\n    return false;\n};\n/**\n * Converts the data to the specified format\n * @param data - data to convert\n * @param schema - The JSON schema that describes the structure of the data\n * @param dataPath - A string array that specifies the path to the data within the JSON schema\n * @param format  - The format to be converted to\n * @param oneOfPath - An optional array of two-element tuples that specifies the \"oneOf\" option to choose, if the schema has oneOf and the data path can match multiple subschemas\n * @returns - The data converted to the specified format\n */\nconst convert = (data, schema, dataPath, format, oneOfPath = []) => {\n    var _a;\n    // If it's a scalar value\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isObject)(data) && !Array.isArray(data)) {\n        return convertScalarValue(data, schema === null || schema === void 0 ? void 0 : schema.format, format);\n    }\n    const object = data;\n    // case when schema is array and `items` is object\n    if (Array.isArray(object) &&\n        (schema === null || schema === void 0 ? void 0 : schema.type) === 'array' &&\n        ((_a = schema === null || schema === void 0 ? void 0 : schema.items) === null || _a === void 0 ? void 0 : _a.type) === 'object') {\n        convertArray({\n            value: object,\n            schemaProp: schema,\n            schema,\n            object,\n            key: '',\n            dataPath,\n            format,\n            oneOfPath,\n        });\n    }\n    else {\n        for (const [key, value] of Object.entries(object)) {\n            dataPath.push(key);\n            let schemaProp = findSchemaByDataPath(schema, dataPath, oneOfPath);\n            // If value is a scaler value\n            if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isNullish)(schemaProp)) {\n                delete object[key];\n                dataPath.pop();\n                continue;\n            }\n            // If value is an object, recurse into it\n            if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isObject)(value)) {\n                convert(value, schema, dataPath, format, oneOfPath);\n                dataPath.pop();\n                continue;\n            }\n            // If value is an array\n            if (convertArray({\n                value,\n                schemaProp,\n                schema,\n                object,\n                key,\n                dataPath,\n                format,\n                oneOfPath,\n            })) {\n                continue;\n            }\n            // The following code is basically saying:\n            // if the schema specifies oneOf, then we are to loop\n            // over each possible schema and check if they type of the schema specifies format\n            // and if so we use the oneOfSchemaProp as the schema for formatting\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n            if ((schemaProp === null || schemaProp === void 0 ? void 0 : schemaProp.format) === undefined && (schemaProp === null || schemaProp === void 0 ? void 0 : schemaProp.oneOf) !== undefined) {\n                for (const [_index, oneOfSchemaProp] of schemaProp.oneOf.entries()) {\n                    if ((oneOfSchemaProp === null || oneOfSchemaProp === void 0 ? void 0 : oneOfSchemaProp.format) !== undefined) {\n                        schemaProp = oneOfSchemaProp;\n                        break;\n                    }\n                }\n            }\n            object[key] = convertScalarValue(value, schemaProp.format, format);\n            dataPath.pop();\n        }\n    }\n    return object;\n};\n/**\n * Given data that can be interpreted according to the provided schema, returns equivalent data that has been formatted\n * according to the provided return format.\n *\n * @param schema - how to interpret the data\n * @param data - data to be formatted\n * @param returnFormat - how to format the data\n * @returns - formatted data\n *\n * @example\n *\n * ```js\n * import { FMT_NUMBER, utils } from \"web3\";\n *\n * console.log(\n *   utils.format({ format: \"uint\" }, \"221\", { number: FMT_NUMBER.HEX }),\n * );\n * // 0xdd\n * ```\n *\n */\nconst format = (schema, data, returnFormat = web3_types__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_RETURN_FORMAT) => {\n    let dataToParse;\n    if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isObject)(data)) {\n        dataToParse = (0,_objects_js__WEBPACK_IMPORTED_MODULE_4__.mergeDeep)({}, data);\n    }\n    else if (Array.isArray(data)) {\n        dataToParse = [...data];\n    }\n    else {\n        dataToParse = data;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const jsonSchema = (0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isObject)(schema) ? schema : web3_validator__WEBPACK_IMPORTED_MODULE_2__.utils.ethAbiToJsonSchema(schema);\n    if (!jsonSchema.properties && !jsonSchema.items && !jsonSchema.format) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.FormatterError('Invalid json schema for formatting');\n    }\n    return convert(dataToParse, jsonSchema, [], returnFormat);\n};\n//# sourceMappingURL=formatter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-utils/lib/esm/formatter.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-utils/lib/esm/hash.js":
/*!*************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/hash.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   encodePacked: () => (/* binding */ encodePacked),\n/* harmony export */   getStorageSlotNumForLongString: () => (/* binding */ getStorageSlotNumForLongString),\n/* harmony export */   keccak256: () => (/* binding */ keccak256Wrapper),\n/* harmony export */   keccak256Wrapper: () => (/* binding */ keccak256Wrapper),\n/* harmony export */   processSolidityEncodePackedArgs: () => (/* binding */ processSolidityEncodePackedArgs),\n/* harmony export */   sha3: () => (/* binding */ sha3),\n/* harmony export */   sha3Raw: () => (/* binding */ sha3Raw),\n/* harmony export */   soliditySha3: () => (/* binding */ soliditySha3),\n/* harmony export */   soliditySha3Raw: () => (/* binding */ soliditySha3Raw)\n/* harmony export */ });\n/* harmony import */ var ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ethereum-cryptography/keccak.js */ \"(ssr)/./node_modules/ethereum-cryptography/esm/keccak.js\");\n/* harmony import */ var ethereum_cryptography_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ethereum-cryptography/utils.js */ \"(ssr)/./node_modules/ethereum-cryptography/esm/utils.js\");\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var _converters_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./converters.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/converters.js\");\n/* harmony import */ var _string_manipulation_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./string_manipulation.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/string_manipulation.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * This package provides utility functions for Ethereum dapps and other web3.js packages.\n *\n * For using Utils functions, first install Web3 package using `npm i web3` or `yarn add web3`.\n * After that, Web3 Utils functions will be available as mentioned below.\n * ```ts\n * import { Web3 } from 'web3';\n * const web3 = new Web3();\n *\n * const value = web3.utils.fromWei(\"1\", \"ether\")\n *\n * ```\n *\n * For using individual package install `web3-utils` package using `npm i web3-utils` or `yarn add web3-utils` and only import required functions.\n * This is more efficient approach for building lightweight applications.\n * ```ts\n * import { fromWei, soliditySha3Raw } from 'web3-utils';\n *\n * console.log(fromWei(\"1\", \"ether\"));\n * console.log(soliditySha3Raw({ type: \"string\", value: \"helloworld\" }))\n *\n * ```\n * @module Utils\n */\n\n\n\n\n\n\nconst SHA3_EMPTY_BYTES = '0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470';\n/**\n * A wrapper for ethereum-cryptography/keccak256 to allow hashing a `string` and a `bigint` in addition to `UInt8Array`\n * @param data - the input to hash\n * @returns - the Keccak-256 hash of the input\n *\n * @example\n * ```ts\n * console.log(web3.utils.keccak256Wrapper('web3.js'));\n * > 0x63667efb1961039c9bb0d6ea7a5abdd223a3aca7daa5044ad894226e1f83919a\n *\n * console.log(web3.utils.keccak256Wrapper(1));\n * > 0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6\n *\n * console.log(web3.utils.keccak256Wrapper(0xaf12fd));\n * > 0x358640fd4719fa923525d74ab5ae80a594301aba5543e3492b052bf4598b794c\n * ```\n */\nconst keccak256Wrapper = (data) => {\n    let processedData;\n    if (typeof data === 'bigint' || typeof data === 'number') {\n        processedData = (0,ethereum_cryptography_utils_js__WEBPACK_IMPORTED_MODULE_1__.utf8ToBytes)(data.toString());\n    }\n    else if (Array.isArray(data)) {\n        processedData = new Uint8Array(data);\n    }\n    else if (typeof data === 'string' && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isHexStrict)(data)) {\n        processedData = (0,ethereum_cryptography_utils_js__WEBPACK_IMPORTED_MODULE_1__.utf8ToBytes)(data);\n    }\n    else {\n        processedData = (0,_converters_js__WEBPACK_IMPORTED_MODULE_4__.bytesToUint8Array)(data);\n    }\n    return (0,_converters_js__WEBPACK_IMPORTED_MODULE_4__.bytesToHex)((0,ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_0__.keccak256)(web3_validator__WEBPACK_IMPORTED_MODULE_3__.utils.ensureIfUint8Array(processedData)));\n};\n\n/**\n * computes the Keccak-256 hash of the input and returns a hexstring\n * @param data - the input to hash\n * @returns - the Keccak-256 hash of the input\n *\n * @example\n * ```ts\n * console.log(web3.utils.sha3('web3.js'));\n * > 0x63667efb1961039c9bb0d6ea7a5abdd223a3aca7daa5044ad894226e1f83919a\n *\n * console.log(web3.utils.sha3(''));\n * > undefined\n * ```\n */\nconst sha3 = (data) => {\n    let updatedData;\n    if (typeof data === 'string') {\n        if (data.startsWith('0x') && (0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isHexStrict)(data)) {\n            updatedData = (0,_converters_js__WEBPACK_IMPORTED_MODULE_4__.hexToBytes)(data);\n        }\n        else {\n            updatedData = (0,ethereum_cryptography_utils_js__WEBPACK_IMPORTED_MODULE_1__.utf8ToBytes)(data);\n        }\n    }\n    else {\n        updatedData = data;\n    }\n    const hash = keccak256Wrapper(updatedData);\n    // EIP-1052 if hash is equal to c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470, keccak was given empty data\n    return hash === SHA3_EMPTY_BYTES ? undefined : hash;\n};\n/**\n * Will calculate the sha3 of the input but does return the hash value instead of null if for example a empty string is passed.\n * @param data - the input to hash\n * @returns - the Keccak-256 hash of the input\n *\n * @example\n * ```ts\n * conosle.log(web3.utils.sha3Raw('web3.js'));\n * > 0x63667efb1961039c9bb0d6ea7a5abdd223a3aca7daa5044ad894226e1f83919a\n *\n * console.log(web3.utils.sha3Raw(''));\n * > 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\n * ```\n */\nconst sha3Raw = (data) => {\n    const hash = sha3(data);\n    if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(hash)) {\n        return SHA3_EMPTY_BYTES;\n    }\n    return hash;\n};\n/**\n * returns type and value\n * @param arg - the input to return the type and value\n * @returns - the type and value of the input\n */\nconst getType = (arg) => {\n    if (Array.isArray(arg)) {\n        throw new Error('Autodetection of array types is not supported.');\n    }\n    let type;\n    let value;\n    // if type is given\n    if (typeof arg === 'object' &&\n        ('t' in arg || 'type' in arg) &&\n        ('v' in arg || 'value' in arg)) {\n        type = 't' in arg ? arg.t : arg.type;\n        value = 'v' in arg ? arg.v : arg.value;\n        type = type.toLowerCase() === 'bigint' ? 'int' : type;\n    }\n    else if (typeof arg === 'bigint') {\n        return ['int', arg];\n    }\n    // otherwise try to guess the type\n    else {\n        type = (0,_converters_js__WEBPACK_IMPORTED_MODULE_4__.toHex)(arg, true);\n        value = (0,_converters_js__WEBPACK_IMPORTED_MODULE_4__.toHex)(arg);\n        if (!type.startsWith('int') && !type.startsWith('uint')) {\n            type = 'bytes';\n        }\n    }\n    if ((type.startsWith('int') || type.startsWith('uint')) &&\n        typeof value === 'string' &&\n        !/^(-)?0x/i.test(value)) {\n        value = (0,_converters_js__WEBPACK_IMPORTED_MODULE_4__.toBigInt)(value);\n    }\n    return [type, value];\n};\n/**\n * returns the type with size if uint or int\n * @param name - the input to return the type with size\n * @returns - the type with size of the input\n */\nconst elementaryName = (name) => {\n    if (name.startsWith('int[')) {\n        return `int256${name.slice(3)}`;\n    }\n    if (name === 'int') {\n        return 'int256';\n    }\n    if (name.startsWith('uint[')) {\n        return `uint256'${name.slice(4)}`;\n    }\n    if (name === 'uint') {\n        return 'uint256';\n    }\n    return name;\n};\n/**\n * returns the size of the value of type 'byte'\n */\nconst parseTypeN = (value, typeLength) => {\n    const typesize = /^(\\d+).*$/.exec(value.slice(typeLength));\n    return typesize ? parseInt(typesize[1], 10) : 0;\n};\n/**\n * returns the bit length of the value\n * @param value - the input to return the bit length\n * @returns - the bit length of the input\n */\nconst bitLength = (value) => {\n    const updatedVal = value.toString(2);\n    return updatedVal.length;\n};\n/**\n * Pads the value based on size and type\n * returns a string of the padded value\n * @param type - the input to pad\n * @returns = the padded value\n */\nconst solidityPack = (type, val) => {\n    const value = val.toString();\n    if (type === 'string') {\n        if (typeof val === 'string')\n            return (0,_converters_js__WEBPACK_IMPORTED_MODULE_4__.utf8ToHex)(val);\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidStringError(val);\n    }\n    if (type === 'bool' || type === 'boolean') {\n        if (typeof val === 'boolean')\n            return val ? '01' : '00';\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidBooleanError(val);\n    }\n    if (type === 'address') {\n        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isAddress)(value)) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidAddressError(value);\n        }\n        return value;\n    }\n    const name = elementaryName(type);\n    if (type.startsWith('uint')) {\n        const size = parseTypeN(name, 'uint'.length);\n        if (size % 8 || size < 8 || size > 256) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidSizeError(value);\n        }\n        const num = (0,_converters_js__WEBPACK_IMPORTED_MODULE_4__.toNumber)(value);\n        if (bitLength(num) > size) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidLargeValueError(value);\n        }\n        if (num < BigInt(0)) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidUnsignedIntegerError(value);\n        }\n        return size ? (0,_string_manipulation_js__WEBPACK_IMPORTED_MODULE_5__.leftPad)(num.toString(16), (size / 8) * 2) : num.toString(16);\n    }\n    if (type.startsWith('int')) {\n        const size = parseTypeN(name, 'int'.length);\n        if (size % 8 || size < 8 || size > 256) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidSizeError(type);\n        }\n        const num = (0,_converters_js__WEBPACK_IMPORTED_MODULE_4__.toNumber)(value);\n        if (bitLength(num) > size) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidLargeValueError(value);\n        }\n        if (num < BigInt(0)) {\n            return (0,_string_manipulation_js__WEBPACK_IMPORTED_MODULE_5__.toTwosComplement)(num.toString(), (size / 8) * 2);\n        }\n        return size ? (0,_string_manipulation_js__WEBPACK_IMPORTED_MODULE_5__.leftPad)(num.toString(16), size / 4) : num.toString(16);\n    }\n    if (name === 'bytes') {\n        if (value.replace(/^0x/i, '').length % 2 !== 0) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidBytesError(value);\n        }\n        return value;\n    }\n    if (type.startsWith('bytes')) {\n        if (value.replace(/^0x/i, '').length % 2 !== 0) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidBytesError(value);\n        }\n        const size = parseTypeN(type, 'bytes'.length);\n        if (!size || size < 1 || size > 64 || size < value.replace(/^0x/i, '').length / 2) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidBytesError(value);\n        }\n        return (0,_string_manipulation_js__WEBPACK_IMPORTED_MODULE_5__.rightPad)(value, size * 2);\n    }\n    return '';\n};\n/**\n * returns a string of the tightly packed value given based on the type\n * @param arg - the input to return the tightly packed value\n * @returns - the tightly packed value\n */\nconst processSolidityEncodePackedArgs = (arg) => {\n    const [type, val] = getType(arg);\n    // array case\n    if (Array.isArray(val)) {\n        // go through each element of the array and use map function to create new hexarg list\n        const hexArg = val.map((v) => solidityPack(type, v).replace('0x', ''));\n        return hexArg.join('');\n    }\n    const hexArg = solidityPack(type, val);\n    return hexArg.replace('0x', '');\n};\n/**\n * Encode packed arguments to a hexstring\n */\nconst encodePacked = (...values) => {\n    const hexArgs = values.map(processSolidityEncodePackedArgs);\n    return `0x${hexArgs.join('').toLowerCase()}`;\n};\n/**\n * Will tightly pack values given in the same way solidity would then hash.\n * returns a hash string, or null if input is empty\n * @param values - the input to return the tightly packed values\n * @returns - the keccack246 of the tightly packed values\n *\n * @example\n * ```ts\n * console.log(web3.utils.soliditySha3({ type: \"string\", value: \"31323334\" }));\n * > 0xf15f8da2ad27e486d632dc37d24912f634398918d6f9913a0a0ff84e388be62b\n * ```\n */\nconst soliditySha3 = (...values) => sha3(encodePacked(...values));\n/**\n * Will tightly pack values given in the same way solidity would then hash.\n * returns a hash string, if input is empty will return `0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470`\n * @param values - the input to return the tightly packed values\n * @returns - the keccack246 of the tightly packed values\n *\n * @example\n * ```ts\n * console.log(web3.utils.soliditySha3Raw({ type: \"string\", value: \"helloworld\" }))\n * > 0xfa26db7ca85ead399216e7c6316bc50ed24393c3122b582735e7f3b0f91b93f0\n * ```\n */\nconst soliditySha3Raw = (...values) => sha3Raw(encodePacked(...values));\n/**\n * Get slot number for storage long string in contract. Basically for getStorage method\n * returns slotNumber where will data placed\n * @param mainSlotNumber - the slot number where will be stored hash of long string\n * @returns - the slot number where will be stored long string\n */\nconst getStorageSlotNumForLongString = (mainSlotNumber) => sha3(`0x${(typeof mainSlotNumber === 'number'\n    ? mainSlotNumber.toString()\n    : mainSlotNumber).padStart(64, '0')}`);\n//# sourceMappingURL=hash.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-utils/lib/esm/hash.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-utils/lib/esm/index.js":
/*!**************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChunkResponseParser: () => (/* reexport safe */ _chunk_response_parser_js__WEBPACK_IMPORTED_MODULE_11__.ChunkResponseParser),\n/* harmony export */   Eip1193Provider: () => (/* reexport safe */ _web3_eip1193_provider_js__WEBPACK_IMPORTED_MODULE_13__.Eip1193Provider),\n/* harmony export */   EventEmitter: () => (/* reexport safe */ _event_emitter_js__WEBPACK_IMPORTED_MODULE_1__.EventEmitter),\n/* harmony export */   SocketProvider: () => (/* reexport safe */ _socket_provider_js__WEBPACK_IMPORTED_MODULE_14__.SocketProvider),\n/* harmony export */   Web3DeferredPromise: () => (/* reexport safe */ _web3_deferred_promise_js__WEBPACK_IMPORTED_MODULE_10__.Web3DeferredPromise),\n/* harmony export */   asciiToHex: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.asciiToHex),\n/* harmony export */   bytesToHex: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.bytesToHex),\n/* harmony export */   bytesToUint8Array: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.bytesToUint8Array),\n/* harmony export */   checkAddressCheckSum: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.checkAddressCheckSum),\n/* harmony export */   compareBlockNumbers: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.compareBlockNumbers),\n/* harmony export */   convert: () => (/* reexport safe */ _formatter_js__WEBPACK_IMPORTED_MODULE_3__.convert),\n/* harmony export */   convertScalarValue: () => (/* reexport safe */ _formatter_js__WEBPACK_IMPORTED_MODULE_3__.convertScalarValue),\n/* harmony export */   encodePacked: () => (/* reexport safe */ _hash_js__WEBPACK_IMPORTED_MODULE_4__.encodePacked),\n/* harmony export */   ethUnitMap: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.ethUnitMap),\n/* harmony export */   format: () => (/* reexport safe */ _formatter_js__WEBPACK_IMPORTED_MODULE_3__.format),\n/* harmony export */   fromAscii: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.fromAscii),\n/* harmony export */   fromDecimal: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.fromDecimal),\n/* harmony export */   fromTwosComplement: () => (/* reexport safe */ _string_manipulation_js__WEBPACK_IMPORTED_MODULE_6__.fromTwosComplement),\n/* harmony export */   fromUtf8: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.fromUtf8),\n/* harmony export */   fromWei: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.fromWei),\n/* harmony export */   getStorageSlotNumForLongString: () => (/* reexport safe */ _hash_js__WEBPACK_IMPORTED_MODULE_4__.getStorageSlotNumForLongString),\n/* harmony export */   hexToAscii: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.hexToAscii),\n/* harmony export */   hexToBytes: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.hexToBytes),\n/* harmony export */   hexToNumber: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.hexToNumber),\n/* harmony export */   hexToNumberString: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.hexToNumberString),\n/* harmony export */   hexToString: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.hexToString),\n/* harmony export */   hexToUtf8: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.hexToUtf8),\n/* harmony export */   isAddress: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.isAddress),\n/* harmony export */   isBatchRequest: () => (/* reexport safe */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__.isBatchRequest),\n/* harmony export */   isBatchResponse: () => (/* reexport safe */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__.isBatchResponse),\n/* harmony export */   isBloom: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.isBloom),\n/* harmony export */   isContractAddressInBloom: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.isContractAddressInBloom),\n/* harmony export */   isContractInitOptions: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.isContractInitOptions),\n/* harmony export */   isDataFormat: () => (/* reexport safe */ _formatter_js__WEBPACK_IMPORTED_MODULE_3__.isDataFormat),\n/* harmony export */   isHex: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.isHex),\n/* harmony export */   isHexStrict: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.isHexStrict),\n/* harmony export */   isInBloom: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.isInBloom),\n/* harmony export */   isNullish: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.isNullish),\n/* harmony export */   isPromise: () => (/* reexport safe */ _promise_helpers_js__WEBPACK_IMPORTED_MODULE_8__.isPromise),\n/* harmony export */   isResponseRpcError: () => (/* reexport safe */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__.isResponseRpcError),\n/* harmony export */   isResponseWithError: () => (/* reexport safe */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__.isResponseWithError),\n/* harmony export */   isResponseWithNotification: () => (/* reexport safe */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__.isResponseWithNotification),\n/* harmony export */   isResponseWithResult: () => (/* reexport safe */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__.isResponseWithResult),\n/* harmony export */   isSubscriptionResult: () => (/* reexport safe */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__.isSubscriptionResult),\n/* harmony export */   isTopic: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.isTopic),\n/* harmony export */   isTopicInBloom: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.isTopicInBloom),\n/* harmony export */   isUint8Array: () => (/* reexport safe */ _uint8array_js__WEBPACK_IMPORTED_MODULE_15__.isUint8Array),\n/* harmony export */   isUserEthereumAddressInBloom: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.isUserEthereumAddressInBloom),\n/* harmony export */   isValidResponse: () => (/* reexport safe */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__.isValidResponse),\n/* harmony export */   jsonRpc: () => (/* reexport module object */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__),\n/* harmony export */   keccak256: () => (/* reexport safe */ _hash_js__WEBPACK_IMPORTED_MODULE_4__.keccak256),\n/* harmony export */   keccak256Wrapper: () => (/* reexport safe */ _hash_js__WEBPACK_IMPORTED_MODULE_4__.keccak256Wrapper),\n/* harmony export */   leftPad: () => (/* reexport safe */ _string_manipulation_js__WEBPACK_IMPORTED_MODULE_6__.leftPad),\n/* harmony export */   mergeDeep: () => (/* reexport safe */ _objects_js__WEBPACK_IMPORTED_MODULE_7__.mergeDeep),\n/* harmony export */   numberToHex: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.numberToHex),\n/* harmony export */   padLeft: () => (/* reexport safe */ _string_manipulation_js__WEBPACK_IMPORTED_MODULE_6__.padLeft),\n/* harmony export */   padRight: () => (/* reexport safe */ _string_manipulation_js__WEBPACK_IMPORTED_MODULE_6__.padRight),\n/* harmony export */   pollTillDefined: () => (/* reexport safe */ _promise_helpers_js__WEBPACK_IMPORTED_MODULE_8__.pollTillDefined),\n/* harmony export */   pollTillDefinedAndReturnIntervalId: () => (/* reexport safe */ _promise_helpers_js__WEBPACK_IMPORTED_MODULE_8__.pollTillDefinedAndReturnIntervalId),\n/* harmony export */   processSolidityEncodePackedArgs: () => (/* reexport safe */ _hash_js__WEBPACK_IMPORTED_MODULE_4__.processSolidityEncodePackedArgs),\n/* harmony export */   randomBytes: () => (/* reexport safe */ _random_js__WEBPACK_IMPORTED_MODULE_5__.randomBytes),\n/* harmony export */   randomHex: () => (/* reexport safe */ _random_js__WEBPACK_IMPORTED_MODULE_5__.randomHex),\n/* harmony export */   rejectIfConditionAtInterval: () => (/* reexport safe */ _promise_helpers_js__WEBPACK_IMPORTED_MODULE_8__.rejectIfConditionAtInterval),\n/* harmony export */   rejectIfTimeout: () => (/* reexport safe */ _promise_helpers_js__WEBPACK_IMPORTED_MODULE_8__.rejectIfTimeout),\n/* harmony export */   rightPad: () => (/* reexport safe */ _string_manipulation_js__WEBPACK_IMPORTED_MODULE_6__.rightPad),\n/* harmony export */   setRequestIdStart: () => (/* reexport safe */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__.setRequestIdStart),\n/* harmony export */   sha3: () => (/* reexport safe */ _hash_js__WEBPACK_IMPORTED_MODULE_4__.sha3),\n/* harmony export */   sha3Raw: () => (/* reexport safe */ _hash_js__WEBPACK_IMPORTED_MODULE_4__.sha3Raw),\n/* harmony export */   soliditySha3: () => (/* reexport safe */ _hash_js__WEBPACK_IMPORTED_MODULE_4__.soliditySha3),\n/* harmony export */   soliditySha3Raw: () => (/* reexport safe */ _hash_js__WEBPACK_IMPORTED_MODULE_4__.soliditySha3Raw),\n/* harmony export */   stringToHex: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.stringToHex),\n/* harmony export */   toAscii: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.toAscii),\n/* harmony export */   toBatchPayload: () => (/* reexport safe */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__.toBatchPayload),\n/* harmony export */   toBigInt: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.toBigInt),\n/* harmony export */   toBool: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.toBool),\n/* harmony export */   toChecksumAddress: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.toChecksumAddress),\n/* harmony export */   toDecimal: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.toDecimal),\n/* harmony export */   toHex: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.toHex),\n/* harmony export */   toNumber: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.toNumber),\n/* harmony export */   toPayload: () => (/* reexport safe */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__.toPayload),\n/* harmony export */   toTwosComplement: () => (/* reexport safe */ _string_manipulation_js__WEBPACK_IMPORTED_MODULE_6__.toTwosComplement),\n/* harmony export */   toUtf8: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.toUtf8),\n/* harmony export */   toWei: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.toWei),\n/* harmony export */   uint8ArrayConcat: () => (/* reexport safe */ _uint8array_js__WEBPACK_IMPORTED_MODULE_15__.uint8ArrayConcat),\n/* harmony export */   uint8ArrayEquals: () => (/* reexport safe */ _uint8array_js__WEBPACK_IMPORTED_MODULE_15__.uint8ArrayEquals),\n/* harmony export */   utf8ToBytes: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.utf8ToBytes),\n/* harmony export */   utf8ToHex: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.utf8ToHex),\n/* harmony export */   uuidV4: () => (/* reexport safe */ _uuid_js__WEBPACK_IMPORTED_MODULE_12__.uuidV4),\n/* harmony export */   validateResponse: () => (/* reexport safe */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__.validateResponse),\n/* harmony export */   waitWithTimeout: () => (/* reexport safe */ _promise_helpers_js__WEBPACK_IMPORTED_MODULE_8__.waitWithTimeout)\n/* harmony export */ });\n/* harmony import */ var _converters_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./converters.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/converters.js\");\n/* harmony import */ var _event_emitter_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./event_emitter.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/event_emitter.js\");\n/* harmony import */ var _validation_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./validation.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/validation.js\");\n/* harmony import */ var _formatter_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./formatter.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/formatter.js\");\n/* harmony import */ var _hash_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./hash.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/hash.js\");\n/* harmony import */ var _random_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./random.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/random.js\");\n/* harmony import */ var _string_manipulation_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./string_manipulation.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/string_manipulation.js\");\n/* harmony import */ var _objects_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./objects.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/objects.js\");\n/* harmony import */ var _promise_helpers_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./promise_helpers.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/promise_helpers.js\");\n/* harmony import */ var _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./json_rpc.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/json_rpc.js\");\n/* harmony import */ var _web3_deferred_promise_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./web3_deferred_promise.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/web3_deferred_promise.js\");\n/* harmony import */ var _chunk_response_parser_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./chunk_response_parser.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/chunk_response_parser.js\");\n/* harmony import */ var _uuid_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./uuid.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/uuid.js\");\n/* harmony import */ var _web3_eip1193_provider_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./web3_eip1193_provider.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/web3_eip1193_provider.js\");\n/* harmony import */ var _socket_provider_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./socket_provider.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/socket_provider.js\");\n/* harmony import */ var _uint8array_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./uint8array.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/uint8array.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy11dGlscy9saWIvZXNtL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ2dDO0FBQ0c7QUFDSDtBQUNEO0FBQ0w7QUFDRTtBQUNhO0FBQ1o7QUFDUTtBQUNQO0FBQ1c7QUFDRTtBQUNBO0FBQ2pCO0FBQ2lCO0FBQ047QUFDTDtBQUNoQyIsInNvdXJjZXMiOlsid2VicGFjazovL21vcnBoLXBheS1zZGsvLi9ub2RlX21vZHVsZXMvd2ViMy11dGlscy9saWIvZXNtL2luZGV4LmpzPzhmNTMiXSwic291cmNlc0NvbnRlbnQiOlsiLypcblRoaXMgZmlsZSBpcyBwYXJ0IG9mIHdlYjMuanMuXG5cbndlYjMuanMgaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG50aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cblxud2ViMy5qcyBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2Zcbk1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbkdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuXG5Zb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbmFsb25nIHdpdGggd2ViMy5qcy4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiovXG5leHBvcnQgKiBmcm9tICcuL2NvbnZlcnRlcnMuanMnO1xuZXhwb3J0ICogZnJvbSAnLi9ldmVudF9lbWl0dGVyLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vdmFsaWRhdGlvbi5qcyc7XG5leHBvcnQgKiBmcm9tICcuL2Zvcm1hdHRlci5qcyc7XG5leHBvcnQgKiBmcm9tICcuL2hhc2guanMnO1xuZXhwb3J0ICogZnJvbSAnLi9yYW5kb20uanMnO1xuZXhwb3J0ICogZnJvbSAnLi9zdHJpbmdfbWFuaXB1bGF0aW9uLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vb2JqZWN0cy5qcyc7XG5leHBvcnQgKiBmcm9tICcuL3Byb21pc2VfaGVscGVycy5qcyc7XG5leHBvcnQgKiBmcm9tICcuL2pzb25fcnBjLmpzJztcbmV4cG9ydCAqIGFzIGpzb25ScGMgZnJvbSAnLi9qc29uX3JwYy5qcyc7XG5leHBvcnQgKiBmcm9tICcuL3dlYjNfZGVmZXJyZWRfcHJvbWlzZS5qcyc7XG5leHBvcnQgKiBmcm9tICcuL2NodW5rX3Jlc3BvbnNlX3BhcnNlci5qcyc7XG5leHBvcnQgKiBmcm9tICcuL3V1aWQuanMnO1xuZXhwb3J0ICogZnJvbSAnLi93ZWIzX2VpcDExOTNfcHJvdmlkZXIuanMnO1xuZXhwb3J0ICogZnJvbSAnLi9zb2NrZXRfcHJvdmlkZXIuanMnO1xuZXhwb3J0ICogZnJvbSAnLi91aW50OGFycmF5LmpzJztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-utils/lib/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-utils/lib/esm/json_rpc.js":
/*!*****************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/json_rpc.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isBatchRequest: () => (/* binding */ isBatchRequest),\n/* harmony export */   isBatchResponse: () => (/* binding */ isBatchResponse),\n/* harmony export */   isResponseRpcError: () => (/* binding */ isResponseRpcError),\n/* harmony export */   isResponseWithError: () => (/* binding */ isResponseWithError),\n/* harmony export */   isResponseWithNotification: () => (/* binding */ isResponseWithNotification),\n/* harmony export */   isResponseWithResult: () => (/* binding */ isResponseWithResult),\n/* harmony export */   isSubscriptionResult: () => (/* binding */ isSubscriptionResult),\n/* harmony export */   isValidResponse: () => (/* binding */ isValidResponse),\n/* harmony export */   setRequestIdStart: () => (/* binding */ setRequestIdStart),\n/* harmony export */   toBatchPayload: () => (/* binding */ toBatchPayload),\n/* harmony export */   toPayload: () => (/* binding */ toPayload),\n/* harmony export */   validateResponse: () => (/* binding */ validateResponse)\n/* harmony export */ });\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var _uuid_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./uuid.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/uuid.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\n\n// check if code is a valid rpc server error code\nconst isResponseRpcError = (rpcError) => {\n    const errorCode = rpcError.error.code;\n    return web3_errors__WEBPACK_IMPORTED_MODULE_1__.rpcErrorsMap.has(errorCode) || (errorCode >= -32099 && errorCode <= -32000);\n};\nconst isResponseWithResult = (response) => !Array.isArray(response) &&\n    !!response &&\n    response.jsonrpc === '2.0' &&\n    // JSON RPC consider \"null\" as valid response\n    'result' in response &&\n    (0,web3_validator__WEBPACK_IMPORTED_MODULE_0__.isNullish)(response.error) &&\n    (typeof response.id === 'number' || typeof response.id === 'string');\n// To avoid circular package dependency, copied to code here. If you update this please update same function in `response_errors.ts`\nconst isResponseWithError = (response) => !Array.isArray(response) &&\n    response.jsonrpc === '2.0' &&\n    !!response &&\n    (0,web3_validator__WEBPACK_IMPORTED_MODULE_0__.isNullish)(response.result) &&\n    // JSON RPC consider \"null\" as valid response\n    'error' in response &&\n    (typeof response.id === 'number' || typeof response.id === 'string');\nconst isResponseWithNotification = (response) => !Array.isArray(response) &&\n    !!response &&\n    response.jsonrpc === '2.0' &&\n    !(0,web3_validator__WEBPACK_IMPORTED_MODULE_0__.isNullish)(response.params) &&\n    !(0,web3_validator__WEBPACK_IMPORTED_MODULE_0__.isNullish)(response.method);\nconst isSubscriptionResult = (response) => !Array.isArray(response) &&\n    !!response &&\n    response.jsonrpc === '2.0' &&\n    'id' in response &&\n    // JSON RPC consider \"null\" as valid response\n    'result' in response;\nconst validateResponse = (response) => isResponseWithResult(response) || isResponseWithError(response);\nconst isValidResponse = (response) => Array.isArray(response) ? response.every(validateResponse) : validateResponse(response);\nconst isBatchResponse = (response) => Array.isArray(response) && response.length > 0 && isValidResponse(response);\n// internal optional variable to increment and use for the jsonrpc `id`\nlet requestIdSeed;\n/**\n * Optionally use to make the jsonrpc `id` start from a specific number.\n * Without calling this function, the `id` will be filled with a Uuid.\n * But after this being called with a number, the `id` will be a number starting from the provided `start` variable.\n * However, if `undefined` was passed to this function, the `id` will be a Uuid again.\n * @param start - a number to start incrementing from.\n * \tOr `undefined` to use a new Uuid (this is the default behavior)\n */\nconst setRequestIdStart = (start) => {\n    requestIdSeed = start;\n};\nconst toPayload = (request) => {\n    var _a, _b, _c, _d;\n    if (typeof requestIdSeed !== 'undefined') {\n        requestIdSeed += 1;\n    }\n    return {\n        jsonrpc: (_a = request.jsonrpc) !== null && _a !== void 0 ? _a : '2.0',\n        id: (_c = (_b = request.id) !== null && _b !== void 0 ? _b : requestIdSeed) !== null && _c !== void 0 ? _c : (0,_uuid_js__WEBPACK_IMPORTED_MODULE_2__.uuidV4)(),\n        method: request.method,\n        params: (_d = request.params) !== null && _d !== void 0 ? _d : undefined,\n    };\n};\nconst toBatchPayload = (requests) => requests.map(request => toPayload(request));\nconst isBatchRequest = (request) => Array.isArray(request) && request.length > 0;\n//# sourceMappingURL=json_rpc.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy11dGlscy9saWIvZXNtL2pzb25fcnBjLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSwwQkFBMEI7QUFDMUI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDMkM7QUFDQTtBQUNSO0FBQ25DO0FBQ087QUFDUDtBQUNBLFdBQVcscURBQVk7QUFDdkI7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSx5REFBUztBQUNiO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxJQUFJLHlEQUFTO0FBQ2I7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EsS0FBSyx5REFBUztBQUNkLEtBQUsseURBQVM7QUFDUDtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNBO0FBQ0E7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUhBQXFILGdEQUFNO0FBQzNIO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDQTtBQUNQIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbW9ycGgtcGF5LXNkay8uL25vZGVfbW9kdWxlcy93ZWIzLXV0aWxzL2xpYi9lc20vanNvbl9ycGMuanM/ZTcxZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuVGhpcyBmaWxlIGlzIHBhcnQgb2Ygd2ViMy5qcy5cblxud2ViMy5qcyBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG5pdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbnRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4oYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuXG53ZWIzLmpzIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG5idXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG5cbllvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuYWxvbmcgd2l0aCB3ZWIzLmpzLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuKi9cbmltcG9ydCB7IGlzTnVsbGlzaCB9IGZyb20gJ3dlYjMtdmFsaWRhdG9yJztcbmltcG9ydCB7IHJwY0Vycm9yc01hcCB9IGZyb20gJ3dlYjMtZXJyb3JzJztcbmltcG9ydCB7IHV1aWRWNCB9IGZyb20gJy4vdXVpZC5qcyc7XG4vLyBjaGVjayBpZiBjb2RlIGlzIGEgdmFsaWQgcnBjIHNlcnZlciBlcnJvciBjb2RlXG5leHBvcnQgY29uc3QgaXNSZXNwb25zZVJwY0Vycm9yID0gKHJwY0Vycm9yKSA9PiB7XG4gICAgY29uc3QgZXJyb3JDb2RlID0gcnBjRXJyb3IuZXJyb3IuY29kZTtcbiAgICByZXR1cm4gcnBjRXJyb3JzTWFwLmhhcyhlcnJvckNvZGUpIHx8IChlcnJvckNvZGUgPj0gLTMyMDk5ICYmIGVycm9yQ29kZSA8PSAtMzIwMDApO1xufTtcbmV4cG9ydCBjb25zdCBpc1Jlc3BvbnNlV2l0aFJlc3VsdCA9IChyZXNwb25zZSkgPT4gIUFycmF5LmlzQXJyYXkocmVzcG9uc2UpICYmXG4gICAgISFyZXNwb25zZSAmJlxuICAgIHJlc3BvbnNlLmpzb25ycGMgPT09ICcyLjAnICYmXG4gICAgLy8gSlNPTiBSUEMgY29uc2lkZXIgXCJudWxsXCIgYXMgdmFsaWQgcmVzcG9uc2VcbiAgICAncmVzdWx0JyBpbiByZXNwb25zZSAmJlxuICAgIGlzTnVsbGlzaChyZXNwb25zZS5lcnJvcikgJiZcbiAgICAodHlwZW9mIHJlc3BvbnNlLmlkID09PSAnbnVtYmVyJyB8fCB0eXBlb2YgcmVzcG9uc2UuaWQgPT09ICdzdHJpbmcnKTtcbi8vIFRvIGF2b2lkIGNpcmN1bGFyIHBhY2thZ2UgZGVwZW5kZW5jeSwgY29waWVkIHRvIGNvZGUgaGVyZS4gSWYgeW91IHVwZGF0ZSB0aGlzIHBsZWFzZSB1cGRhdGUgc2FtZSBmdW5jdGlvbiBpbiBgcmVzcG9uc2VfZXJyb3JzLnRzYFxuZXhwb3J0IGNvbnN0IGlzUmVzcG9uc2VXaXRoRXJyb3IgPSAocmVzcG9uc2UpID0+ICFBcnJheS5pc0FycmF5KHJlc3BvbnNlKSAmJlxuICAgIHJlc3BvbnNlLmpzb25ycGMgPT09ICcyLjAnICYmXG4gICAgISFyZXNwb25zZSAmJlxuICAgIGlzTnVsbGlzaChyZXNwb25zZS5yZXN1bHQpICYmXG4gICAgLy8gSlNPTiBSUEMgY29uc2lkZXIgXCJudWxsXCIgYXMgdmFsaWQgcmVzcG9uc2VcbiAgICAnZXJyb3InIGluIHJlc3BvbnNlICYmXG4gICAgKHR5cGVvZiByZXNwb25zZS5pZCA9PT0gJ251bWJlcicgfHwgdHlwZW9mIHJlc3BvbnNlLmlkID09PSAnc3RyaW5nJyk7XG5leHBvcnQgY29uc3QgaXNSZXNwb25zZVdpdGhOb3RpZmljYXRpb24gPSAocmVzcG9uc2UpID0+ICFBcnJheS5pc0FycmF5KHJlc3BvbnNlKSAmJlxuICAgICEhcmVzcG9uc2UgJiZcbiAgICByZXNwb25zZS5qc29ucnBjID09PSAnMi4wJyAmJlxuICAgICFpc051bGxpc2gocmVzcG9uc2UucGFyYW1zKSAmJlxuICAgICFpc051bGxpc2gocmVzcG9uc2UubWV0aG9kKTtcbmV4cG9ydCBjb25zdCBpc1N1YnNjcmlwdGlvblJlc3VsdCA9IChyZXNwb25zZSkgPT4gIUFycmF5LmlzQXJyYXkocmVzcG9uc2UpICYmXG4gICAgISFyZXNwb25zZSAmJlxuICAgIHJlc3BvbnNlLmpzb25ycGMgPT09ICcyLjAnICYmXG4gICAgJ2lkJyBpbiByZXNwb25zZSAmJlxuICAgIC8vIEpTT04gUlBDIGNvbnNpZGVyIFwibnVsbFwiIGFzIHZhbGlkIHJlc3BvbnNlXG4gICAgJ3Jlc3VsdCcgaW4gcmVzcG9uc2U7XG5leHBvcnQgY29uc3QgdmFsaWRhdGVSZXNwb25zZSA9IChyZXNwb25zZSkgPT4gaXNSZXNwb25zZVdpdGhSZXN1bHQocmVzcG9uc2UpIHx8IGlzUmVzcG9uc2VXaXRoRXJyb3IocmVzcG9uc2UpO1xuZXhwb3J0IGNvbnN0IGlzVmFsaWRSZXNwb25zZSA9IChyZXNwb25zZSkgPT4gQXJyYXkuaXNBcnJheShyZXNwb25zZSkgPyByZXNwb25zZS5ldmVyeSh2YWxpZGF0ZVJlc3BvbnNlKSA6IHZhbGlkYXRlUmVzcG9uc2UocmVzcG9uc2UpO1xuZXhwb3J0IGNvbnN0IGlzQmF0Y2hSZXNwb25zZSA9IChyZXNwb25zZSkgPT4gQXJyYXkuaXNBcnJheShyZXNwb25zZSkgJiYgcmVzcG9uc2UubGVuZ3RoID4gMCAmJiBpc1ZhbGlkUmVzcG9uc2UocmVzcG9uc2UpO1xuLy8gaW50ZXJuYWwgb3B0aW9uYWwgdmFyaWFibGUgdG8gaW5jcmVtZW50IGFuZCB1c2UgZm9yIHRoZSBqc29ucnBjIGBpZGBcbmxldCByZXF1ZXN0SWRTZWVkO1xuLyoqXG4gKiBPcHRpb25hbGx5IHVzZSB0byBtYWtlIHRoZSBqc29ucnBjIGBpZGAgc3RhcnQgZnJvbSBhIHNwZWNpZmljIG51bWJlci5cbiAqIFdpdGhvdXQgY2FsbGluZyB0aGlzIGZ1bmN0aW9uLCB0aGUgYGlkYCB3aWxsIGJlIGZpbGxlZCB3aXRoIGEgVXVpZC5cbiAqIEJ1dCBhZnRlciB0aGlzIGJlaW5nIGNhbGxlZCB3aXRoIGEgbnVtYmVyLCB0aGUgYGlkYCB3aWxsIGJlIGEgbnVtYmVyIHN0YXJ0aW5nIGZyb20gdGhlIHByb3ZpZGVkIGBzdGFydGAgdmFyaWFibGUuXG4gKiBIb3dldmVyLCBpZiBgdW5kZWZpbmVkYCB3YXMgcGFzc2VkIHRvIHRoaXMgZnVuY3Rpb24sIHRoZSBgaWRgIHdpbGwgYmUgYSBVdWlkIGFnYWluLlxuICogQHBhcmFtIHN0YXJ0IC0gYSBudW1iZXIgdG8gc3RhcnQgaW5jcmVtZW50aW5nIGZyb20uXG4gKiBcdE9yIGB1bmRlZmluZWRgIHRvIHVzZSBhIG5ldyBVdWlkICh0aGlzIGlzIHRoZSBkZWZhdWx0IGJlaGF2aW9yKVxuICovXG5leHBvcnQgY29uc3Qgc2V0UmVxdWVzdElkU3RhcnQgPSAoc3RhcnQpID0+IHtcbiAgICByZXF1ZXN0SWRTZWVkID0gc3RhcnQ7XG59O1xuZXhwb3J0IGNvbnN0IHRvUGF5bG9hZCA9IChyZXF1ZXN0KSA9PiB7XG4gICAgdmFyIF9hLCBfYiwgX2MsIF9kO1xuICAgIGlmICh0eXBlb2YgcmVxdWVzdElkU2VlZCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgcmVxdWVzdElkU2VlZCArPSAxO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICBqc29ucnBjOiAoX2EgPSByZXF1ZXN0Lmpzb25ycGMpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6ICcyLjAnLFxuICAgICAgICBpZDogKF9jID0gKF9iID0gcmVxdWVzdC5pZCkgIT09IG51bGwgJiYgX2IgIT09IHZvaWQgMCA/IF9iIDogcmVxdWVzdElkU2VlZCkgIT09IG51bGwgJiYgX2MgIT09IHZvaWQgMCA/IF9jIDogdXVpZFY0KCksXG4gICAgICAgIG1ldGhvZDogcmVxdWVzdC5tZXRob2QsXG4gICAgICAgIHBhcmFtczogKF9kID0gcmVxdWVzdC5wYXJhbXMpICE9PSBudWxsICYmIF9kICE9PSB2b2lkIDAgPyBfZCA6IHVuZGVmaW5lZCxcbiAgICB9O1xufTtcbmV4cG9ydCBjb25zdCB0b0JhdGNoUGF5bG9hZCA9IChyZXF1ZXN0cykgPT4gcmVxdWVzdHMubWFwKHJlcXVlc3QgPT4gdG9QYXlsb2FkKHJlcXVlc3QpKTtcbmV4cG9ydCBjb25zdCBpc0JhdGNoUmVxdWVzdCA9IChyZXF1ZXN0KSA9PiBBcnJheS5pc0FycmF5KHJlcXVlc3QpICYmIHJlcXVlc3QubGVuZ3RoID4gMDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWpzb25fcnBjLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-utils/lib/esm/json_rpc.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-utils/lib/esm/objects.js":
/*!****************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/objects.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mergeDeep: () => (/* binding */ mergeDeep)\n/* harmony export */ });\n/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-types */ \"(ssr)/./node_modules/web3-types/lib/esm/index.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\nconst isIterable = (item) => typeof item === 'object' &&\n    !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(item) &&\n    !Array.isArray(item) &&\n    !(item instanceof web3_types__WEBPACK_IMPORTED_MODULE_0__.TypedArray);\n// The following code is a derivative work of the code from the \"LiskHQ/lisk-sdk\" project,\n// which is licensed under Apache version 2.\n/**\n * Deep merge two objects.\n * @param destination - The destination object.\n * @param sources - An array of source objects.\n * @returns - The merged object.\n */\nconst mergeDeep = (destination, ...sources) => {\n    if (!isIterable(destination)) {\n        return destination;\n    }\n    const result = Object.assign({}, destination); // clone deep here\n    for (const src of sources) {\n        // const src = { ..._src };\n        // eslint-disable-next-line no-restricted-syntax\n        for (const key in src) {\n            if (isIterable(src[key])) {\n                if (!result[key]) {\n                    result[key] = {};\n                }\n                result[key] = mergeDeep(result[key], src[key]);\n            }\n            else if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(src[key]) && Object.hasOwnProperty.call(src, key)) {\n                if (Array.isArray(src[key]) || src[key] instanceof web3_types__WEBPACK_IMPORTED_MODULE_0__.TypedArray) {\n                    result[key] = src[key].slice(0);\n                }\n                else {\n                    result[key] = src[key];\n                }\n            }\n        }\n    }\n    return result;\n};\n//# sourceMappingURL=objects.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy11dGlscy9saWIvZXNtL29iamVjdHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUN3QztBQUNHO0FBQzNDO0FBQ0EsS0FBSyx5REFBUztBQUNkO0FBQ0Esc0JBQXNCLGtEQUFVO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxnQkFBZ0I7QUFDbkQ7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQix5REFBUztBQUMvQixtRUFBbUUsa0RBQVU7QUFDN0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL21vcnBoLXBheS1zZGsvLi9ub2RlX21vZHVsZXMvd2ViMy11dGlscy9saWIvZXNtL29iamVjdHMuanM/MWQxYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuVGhpcyBmaWxlIGlzIHBhcnQgb2Ygd2ViMy5qcy5cblxud2ViMy5qcyBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG5pdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbnRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4oYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuXG53ZWIzLmpzIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG5idXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG5cbllvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuYWxvbmcgd2l0aCB3ZWIzLmpzLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuKi9cbmltcG9ydCB7IFR5cGVkQXJyYXkgfSBmcm9tICd3ZWIzLXR5cGVzJztcbmltcG9ydCB7IGlzTnVsbGlzaCB9IGZyb20gJ3dlYjMtdmFsaWRhdG9yJztcbmNvbnN0IGlzSXRlcmFibGUgPSAoaXRlbSkgPT4gdHlwZW9mIGl0ZW0gPT09ICdvYmplY3QnICYmXG4gICAgIWlzTnVsbGlzaChpdGVtKSAmJlxuICAgICFBcnJheS5pc0FycmF5KGl0ZW0pICYmXG4gICAgIShpdGVtIGluc3RhbmNlb2YgVHlwZWRBcnJheSk7XG4vLyBUaGUgZm9sbG93aW5nIGNvZGUgaXMgYSBkZXJpdmF0aXZlIHdvcmsgb2YgdGhlIGNvZGUgZnJvbSB0aGUgXCJMaXNrSFEvbGlzay1zZGtcIiBwcm9qZWN0LFxuLy8gd2hpY2ggaXMgbGljZW5zZWQgdW5kZXIgQXBhY2hlIHZlcnNpb24gMi5cbi8qKlxuICogRGVlcCBtZXJnZSB0d28gb2JqZWN0cy5cbiAqIEBwYXJhbSBkZXN0aW5hdGlvbiAtIFRoZSBkZXN0aW5hdGlvbiBvYmplY3QuXG4gKiBAcGFyYW0gc291cmNlcyAtIEFuIGFycmF5IG9mIHNvdXJjZSBvYmplY3RzLlxuICogQHJldHVybnMgLSBUaGUgbWVyZ2VkIG9iamVjdC5cbiAqL1xuZXhwb3J0IGNvbnN0IG1lcmdlRGVlcCA9IChkZXN0aW5hdGlvbiwgLi4uc291cmNlcykgPT4ge1xuICAgIGlmICghaXNJdGVyYWJsZShkZXN0aW5hdGlvbikpIHtcbiAgICAgICAgcmV0dXJuIGRlc3RpbmF0aW9uO1xuICAgIH1cbiAgICBjb25zdCByZXN1bHQgPSBPYmplY3QuYXNzaWduKHt9LCBkZXN0aW5hdGlvbik7IC8vIGNsb25lIGRlZXAgaGVyZVxuICAgIGZvciAoY29uc3Qgc3JjIG9mIHNvdXJjZXMpIHtcbiAgICAgICAgLy8gY29uc3Qgc3JjID0geyAuLi5fc3JjIH07XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1yZXN0cmljdGVkLXN5bnRheFxuICAgICAgICBmb3IgKGNvbnN0IGtleSBpbiBzcmMpIHtcbiAgICAgICAgICAgIGlmIChpc0l0ZXJhYmxlKHNyY1trZXldKSkge1xuICAgICAgICAgICAgICAgIGlmICghcmVzdWx0W2tleV0pIHtcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0W2tleV0gPSB7fTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmVzdWx0W2tleV0gPSBtZXJnZURlZXAocmVzdWx0W2tleV0sIHNyY1trZXldKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKCFpc051bGxpc2goc3JjW2tleV0pICYmIE9iamVjdC5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNyYywga2V5KSkge1xuICAgICAgICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KHNyY1trZXldKSB8fCBzcmNba2V5XSBpbnN0YW5jZW9mIFR5cGVkQXJyYXkpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0W2tleV0gPSBzcmNba2V5XS5zbGljZSgwKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHJlc3VsdFtrZXldID0gc3JjW2tleV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9b2JqZWN0cy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-utils/lib/esm/objects.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-utils/lib/esm/promise_helpers.js":
/*!************************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/promise_helpers.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isPromise: () => (/* binding */ isPromise),\n/* harmony export */   pollTillDefined: () => (/* binding */ pollTillDefined),\n/* harmony export */   pollTillDefinedAndReturnIntervalId: () => (/* binding */ pollTillDefinedAndReturnIntervalId),\n/* harmony export */   rejectIfConditionAtInterval: () => (/* binding */ rejectIfConditionAtInterval),\n/* harmony export */   rejectIfTimeout: () => (/* binding */ rejectIfTimeout),\n/* harmony export */   waitWithTimeout: () => (/* binding */ waitWithTimeout)\n/* harmony export */ });\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n/**\n * An alternative to the node function `isPromise` that exists in `util/types` because it is not available on the browser.\n * @param object - to check if it is a `Promise`\n * @returns `true` if it is an `object` or a `function` that has a `then` function. And returns `false` otherwise.\n */\nfunction isPromise(object) {\n    return ((typeof object === 'object' || typeof object === 'function') &&\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        typeof object.then === 'function');\n}\n/**\n * Wait for a promise but interrupt it if it did not resolve within a given timeout.\n * If the timeout reached, before the promise code resolve, either throw an error if an error object was provided, or return `undefined`.\n * @param awaitable - The promise or function to wait for.\n * @param timeout - The timeout in milliseconds.\n * @param error - (Optional) The error to throw if the timeout reached.\n */\nfunction waitWithTimeout(awaitable, timeout, error) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let timeoutId;\n        const result = yield Promise.race([\n            awaitable instanceof Promise ? awaitable : awaitable(),\n            new Promise((resolve, reject) => {\n                timeoutId = setTimeout(() => (error ? reject(error) : resolve(undefined)), timeout);\n            }),\n        ]);\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        if (result instanceof Error) {\n            throw result;\n        }\n        return result;\n    });\n}\n/**\n * Repeatedly calls an async function with a given interval until the result of the function is defined (not undefined or null),\n * or until a timeout is reached. It returns promise and intervalId.\n * @param func - The function to call.\n * @param interval - The interval in milliseconds.\n */\nfunction pollTillDefinedAndReturnIntervalId(func, interval) {\n    let intervalId;\n    const polledRes = new Promise((resolve, reject) => {\n        intervalId = setInterval((function intervalCallbackFunc() {\n            (() => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const res = yield waitWithTimeout(func, interval);\n                    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_0__.isNullish)(res)) {\n                        clearInterval(intervalId);\n                        resolve(res);\n                    }\n                }\n                catch (error) {\n                    clearInterval(intervalId);\n                    reject(error);\n                }\n            }))();\n            return intervalCallbackFunc;\n        })(), // this will immediate invoke first call\n        interval);\n    });\n    return [polledRes, intervalId];\n}\n/**\n * Repeatedly calls an async function with a given interval until the result of the function is defined (not undefined or null),\n * or until a timeout is reached.\n * pollTillDefinedAndReturnIntervalId() function should be used instead of pollTillDefined if you need IntervalId in result.\n * This function will be deprecated in next major release so use pollTillDefinedAndReturnIntervalId().\n * @param func - The function to call.\n * @param interval - The interval in milliseconds.\n */\nfunction pollTillDefined(func, interval) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return pollTillDefinedAndReturnIntervalId(func, interval)[0];\n    });\n}\n/**\n * Enforce a timeout on a promise, so that it can be rejected if it takes too long to complete\n * @param timeout - The timeout to enforced in milliseconds.\n * @param error - The error to throw if the timeout is reached.\n * @returns A tuple of the timeout id and the promise that will be rejected if the timeout is reached.\n *\n * @example\n * ```ts\n * const [timerId, promise] = web3.utils.rejectIfTimeout(100, new Error('time out'));\n * ```\n */\nfunction rejectIfTimeout(timeout, error) {\n    let timeoutId;\n    const rejectOnTimeout = new Promise((_, reject) => {\n        timeoutId = setTimeout(() => {\n            reject(error);\n        }, timeout);\n    });\n    return [timeoutId, rejectOnTimeout];\n}\n/**\n * Sets an interval that repeatedly executes the given cond function with the specified interval between each call.\n * If the condition is met, the interval is cleared and a Promise that rejects with the returned value is returned.\n * @param cond - The function/condition to call.\n * @param interval - The interval in milliseconds.\n * @returns - an array with the interval ID and the Promise.\n */\nfunction rejectIfConditionAtInterval(cond, interval) {\n    let intervalId;\n    const rejectIfCondition = new Promise((_, reject) => {\n        intervalId = setInterval(() => {\n            (() => __awaiter(this, void 0, void 0, function* () {\n                const error = yield cond();\n                if (error) {\n                    clearInterval(intervalId);\n                    reject(error);\n                }\n            }))();\n        }, interval);\n    });\n    return [intervalId, rejectIfCondition];\n}\n//# sourceMappingURL=promise_helpers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-utils/lib/esm/promise_helpers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-utils/lib/esm/random.js":
/*!***************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/random.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   randomBytes: () => (/* binding */ randomBytes),\n/* harmony export */   randomHex: () => (/* binding */ randomHex)\n/* harmony export */ });\n/* harmony import */ var ethereum_cryptography_random_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ethereum-cryptography/random.js */ \"(ssr)/./node_modules/ethereum-cryptography/esm/random.js\");\n/* harmony import */ var _converters_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./converters.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/converters.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @module Utils\n */\n\n\n/**\n * Returns a random byte array by the given bytes size\n * @param size - The size of the random byte array returned\n * @returns - random byte array\n *\n * @example\n * ```ts\n * console.log(web3.utils.randomBytes(32));\n * > Uint8Array(32) [\n *       93, 172, 226,  32,  33, 176, 156, 156,\n *       182,  30, 240,   2,  69,  96, 174, 197,\n *       33, 136, 194, 241, 197, 156, 110, 111,\n *       66,  87,  17,  88,  67,  48, 245, 183\n *    ]\n * ```\n */\nconst randomBytes = (size) => (0,ethereum_cryptography_random_js__WEBPACK_IMPORTED_MODULE_0__.getRandomBytesSync)(size);\n/**\n * Returns a random hex string by the given bytes size\n * @param byteSize - The size of the random hex string returned\n * @returns - random hex string\n *\n * ```ts\n * console.log(web3.utils.randomHex(32));\n * > 0x139f5b88b72a25eab053d3b57fe1f8a9dbc62a526b1cb1774d0d7db1c3e7ce9e\n * ```\n */\nconst randomHex = (byteSize) => (0,_converters_js__WEBPACK_IMPORTED_MODULE_1__.bytesToHex)(randomBytes(byteSize));\n//# sourceMappingURL=random.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy11dGlscy9saWIvZXNtL3JhbmRvbS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNxRTtBQUN4QjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLDhCQUE4QixtRkFBa0I7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxnQ0FBZ0MsMERBQVU7QUFDakQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tb3JwaC1wYXktc2RrLy4vbm9kZV9tb2R1bGVzL3dlYjMtdXRpbHMvbGliL2VzbS9yYW5kb20uanM/Zjg1ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuVGhpcyBmaWxlIGlzIHBhcnQgb2Ygd2ViMy5qcy5cblxud2ViMy5qcyBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG5pdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbnRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4oYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuXG53ZWIzLmpzIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG5idXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG5cbllvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuYWxvbmcgd2l0aCB3ZWIzLmpzLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuKi9cbi8qKlxuICogQG1vZHVsZSBVdGlsc1xuICovXG5pbXBvcnQgeyBnZXRSYW5kb21CeXRlc1N5bmMgfSBmcm9tICdldGhlcmV1bS1jcnlwdG9ncmFwaHkvcmFuZG9tLmpzJztcbmltcG9ydCB7IGJ5dGVzVG9IZXggfSBmcm9tICcuL2NvbnZlcnRlcnMuanMnO1xuLyoqXG4gKiBSZXR1cm5zIGEgcmFuZG9tIGJ5dGUgYXJyYXkgYnkgdGhlIGdpdmVuIGJ5dGVzIHNpemVcbiAqIEBwYXJhbSBzaXplIC0gVGhlIHNpemUgb2YgdGhlIHJhbmRvbSBieXRlIGFycmF5IHJldHVybmVkXG4gKiBAcmV0dXJucyAtIHJhbmRvbSBieXRlIGFycmF5XG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYHRzXG4gKiBjb25zb2xlLmxvZyh3ZWIzLnV0aWxzLnJhbmRvbUJ5dGVzKDMyKSk7XG4gKiA+IFVpbnQ4QXJyYXkoMzIpIFtcbiAqICAgICAgIDkzLCAxNzIsIDIyNiwgIDMyLCAgMzMsIDE3NiwgMTU2LCAxNTYsXG4gKiAgICAgICAxODIsICAzMCwgMjQwLCAgIDIsICA2OSwgIDk2LCAxNzQsIDE5NyxcbiAqICAgICAgIDMzLCAxMzYsIDE5NCwgMjQxLCAxOTcsIDE1NiwgMTEwLCAxMTEsXG4gKiAgICAgICA2NiwgIDg3LCAgMTcsICA4OCwgIDY3LCAgNDgsIDI0NSwgMTgzXG4gKiAgICBdXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGNvbnN0IHJhbmRvbUJ5dGVzID0gKHNpemUpID0+IGdldFJhbmRvbUJ5dGVzU3luYyhzaXplKTtcbi8qKlxuICogUmV0dXJucyBhIHJhbmRvbSBoZXggc3RyaW5nIGJ5IHRoZSBnaXZlbiBieXRlcyBzaXplXG4gKiBAcGFyYW0gYnl0ZVNpemUgLSBUaGUgc2l6ZSBvZiB0aGUgcmFuZG9tIGhleCBzdHJpbmcgcmV0dXJuZWRcbiAqIEByZXR1cm5zIC0gcmFuZG9tIGhleCBzdHJpbmdcbiAqXG4gKiBgYGB0c1xuICogY29uc29sZS5sb2cod2ViMy51dGlscy5yYW5kb21IZXgoMzIpKTtcbiAqID4gMHgxMzlmNWI4OGI3MmEyNWVhYjA1M2QzYjU3ZmUxZjhhOWRiYzYyYTUyNmIxY2IxNzc0ZDBkN2RiMWMzZTdjZTllXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGNvbnN0IHJhbmRvbUhleCA9IChieXRlU2l6ZSkgPT4gYnl0ZXNUb0hleChyYW5kb21CeXRlcyhieXRlU2l6ZSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmFuZG9tLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-utils/lib/esm/random.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-utils/lib/esm/socket_provider.js":
/*!************************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/socket_provider.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SocketProvider: () => (/* binding */ SocketProvider)\n/* harmony export */ });\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var _web3_eip1193_provider_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./web3_eip1193_provider.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/web3_eip1193_provider.js\");\n/* harmony import */ var _chunk_response_parser_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk_response_parser.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/chunk_response_parser.js\");\n/* harmony import */ var _validation_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./validation.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/validation.js\");\n/* harmony import */ var _web3_deferred_promise_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./web3_deferred_promise.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/web3_deferred_promise.js\");\n/* harmony import */ var _json_rpc_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./json_rpc.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/json_rpc.js\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n\n\n\nconst DEFAULT_RECONNECTION_OPTIONS = {\n    autoReconnect: true,\n    delay: 5000,\n    maxAttempts: 5,\n};\nconst NORMAL_CLOSE_CODE = 1000; // https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/close\nclass SocketProvider extends _web3_eip1193_provider_js__WEBPACK_IMPORTED_MODULE_1__.Eip1193Provider {\n    get SocketConnection() {\n        return this._socketConnection;\n    }\n    /**\n     * This is an abstract class for implementing a socket provider (e.g. WebSocket, IPC). It extends the EIP-1193 provider {@link EIP1193Provider}.\n     * @param socketPath - The path to the socket (e.g. /ipc/path or ws://localhost:8546)\n     * @param socketOptions - The options for the socket connection. Its type is supposed to be specified in the inherited classes.\n     * @param reconnectOptions - The options for the socket reconnection {@link ReconnectOptions}\n     */\n    constructor(socketPath, socketOptions, reconnectOptions) {\n        super();\n        this._connectionStatus = 'connecting';\n        // Message handlers. Due to bounding of `this` and removing the listeners we have to keep it's reference.\n        this._onMessageHandler = this._onMessage.bind(this);\n        this._onOpenHandler = this._onConnect.bind(this);\n        this._onCloseHandler = this._onCloseEvent.bind(this);\n        this._onErrorHandler = this._onError.bind(this);\n        if (!this._validateProviderPath(socketPath))\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.InvalidClientError(socketPath);\n        this._socketPath = socketPath;\n        this._socketOptions = socketOptions;\n        this._reconnectOptions = Object.assign(Object.assign({}, DEFAULT_RECONNECTION_OPTIONS), (reconnectOptions !== null && reconnectOptions !== void 0 ? reconnectOptions : {}));\n        this._pendingRequestsQueue = new Map();\n        this._sentRequestsQueue = new Map();\n        this._init();\n        this.connect();\n        this.chunkResponseParser = new _chunk_response_parser_js__WEBPACK_IMPORTED_MODULE_2__.ChunkResponseParser(this._eventEmitter, this._reconnectOptions.autoReconnect);\n        this.chunkResponseParser.onError(() => {\n            this._clearQueues();\n        });\n        this.isReconnecting = false;\n    }\n    _init() {\n        this._reconnectAttempts = 0;\n    }\n    /**\n     * Try to establish a connection to the socket\n     */\n    connect() {\n        try {\n            this._openSocketConnection();\n            this._connectionStatus = 'connecting';\n            this._addSocketListeners();\n        }\n        catch (e) {\n            if (!this.isReconnecting) {\n                this._connectionStatus = 'disconnected';\n                if (e && e.message) {\n                    throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.ConnectionError(`Error while connecting to ${this._socketPath}. Reason: ${e.message}`);\n                }\n                else {\n                    throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.InvalidClientError(this._socketPath);\n                }\n            }\n            else {\n                setImmediate(() => {\n                    this._reconnect();\n                });\n            }\n        }\n    }\n    // eslint-disable-next-line class-methods-use-this\n    _validateProviderPath(path) {\n        return !!path;\n    }\n    /**\n     *\n     * @returns the pendingRequestQueue size\n     */\n    // eslint-disable-next-line class-methods-use-this\n    getPendingRequestQueueSize() {\n        return this._pendingRequestsQueue.size;\n    }\n    /**\n     *\n     * @returns the sendPendingRequests size\n     */\n    // eslint-disable-next-line class-methods-use-this\n    getSentRequestsQueueSize() {\n        return this._sentRequestsQueue.size;\n    }\n    /**\n     *\n     * @returns `true` if the socket supports subscriptions\n     */\n    // eslint-disable-next-line class-methods-use-this\n    supportsSubscriptions() {\n        return true;\n    }\n    on(type, listener) {\n        this._eventEmitter.on(type, listener);\n    }\n    once(type, listener) {\n        this._eventEmitter.once(type, listener);\n    }\n    removeListener(type, listener) {\n        this._eventEmitter.removeListener(type, listener);\n    }\n    _onDisconnect(code, data) {\n        this._connectionStatus = 'disconnected';\n        super._onDisconnect(code, data);\n    }\n    /**\n     * Disconnects the socket\n     * @param code - The code to be sent to the server\n     * @param data - The data to be sent to the server\n     */\n    disconnect(code, data) {\n        const disconnectCode = code !== null && code !== void 0 ? code : NORMAL_CLOSE_CODE;\n        this._removeSocketListeners();\n        if (this.getStatus() !== 'disconnected') {\n            this._closeSocketConnection(disconnectCode, data);\n        }\n        this._onDisconnect(disconnectCode, data);\n    }\n    /**\n     * Safely disconnects the socket, async and waits for request size to be 0 before disconnecting\n     * @param forceDisconnect - If true, will clear queue after 5 attempts of waiting for both pending and sent queue to be 0\n     * @param ms - Determines the ms of setInterval\n     * @param code - The code to be sent to the server\n     * @param data - The data to be sent to the server\n     */\n    safeDisconnect(code_1, data_1) {\n        return __awaiter(this, arguments, void 0, function* (code, data, forceDisconnect = false, ms = 1000) {\n            let retryAttempt = 0;\n            const checkQueue = () => __awaiter(this, void 0, void 0, function* () {\n                return new Promise(resolve => {\n                    const interval = setInterval(() => {\n                        if (forceDisconnect && retryAttempt >= 5) {\n                            this.clearQueues();\n                        }\n                        if (this.getPendingRequestQueueSize() === 0 &&\n                            this.getSentRequestsQueueSize() === 0) {\n                            clearInterval(interval);\n                            resolve(true);\n                        }\n                        retryAttempt += 1;\n                    }, ms);\n                });\n            });\n            yield checkQueue();\n            this.disconnect(code, data);\n        });\n    }\n    /**\n     * Removes all listeners for the specified event type.\n     * @param type - The event type to remove the listeners for\n     */\n    removeAllListeners(type) {\n        this._eventEmitter.removeAllListeners(type);\n    }\n    _onError(event) {\n        // do not emit error while trying to reconnect\n        if (this.isReconnecting) {\n            this._reconnect();\n        }\n        else {\n            this._eventEmitter.emit('error', event);\n        }\n    }\n    /**\n     * Resets the socket, removing all listeners and pending requests\n     */\n    reset() {\n        this._sentRequestsQueue.clear();\n        this._pendingRequestsQueue.clear();\n        this._init();\n        this._removeSocketListeners();\n        this._addSocketListeners();\n    }\n    _reconnect() {\n        if (this.isReconnecting) {\n            return;\n        }\n        this.isReconnecting = true;\n        if (this._sentRequestsQueue.size > 0) {\n            this._sentRequestsQueue.forEach((request, key) => {\n                request.deferredPromise.reject(new web3_errors__WEBPACK_IMPORTED_MODULE_0__.PendingRequestsOnReconnectingError());\n                this._sentRequestsQueue.delete(key);\n            });\n        }\n        if (this._reconnectAttempts < this._reconnectOptions.maxAttempts) {\n            this._reconnectAttempts += 1;\n            setTimeout(() => {\n                this._removeSocketListeners();\n                this.connect(); // this can error out\n                this.isReconnecting = false;\n            }, this._reconnectOptions.delay);\n        }\n        else {\n            this.isReconnecting = false;\n            this._clearQueues();\n            this._removeSocketListeners();\n            this._eventEmitter.emit('error', new web3_errors__WEBPACK_IMPORTED_MODULE_0__.MaxAttemptsReachedOnReconnectingError(this._reconnectOptions.maxAttempts));\n        }\n    }\n    /**\n     *  Creates a request object to be sent to the server\n     */\n    request(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if ((0,_validation_js__WEBPACK_IMPORTED_MODULE_3__.isNullish)(this._socketConnection)) {\n                throw new Error('Connection is undefined');\n            }\n            // if socket disconnected - open connection\n            if (this.getStatus() === 'disconnected') {\n                this.connect();\n            }\n            const requestId = _json_rpc_js__WEBPACK_IMPORTED_MODULE_5__.isBatchRequest(request)\n                ? request[0].id\n                : request.id;\n            if (!requestId) {\n                throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.Web3WSProviderError('Request Id not defined');\n            }\n            if (this._sentRequestsQueue.has(requestId)) {\n                throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.RequestAlreadySentError(requestId);\n            }\n            const deferredPromise = new _web3_deferred_promise_js__WEBPACK_IMPORTED_MODULE_4__.Web3DeferredPromise();\n            deferredPromise.catch(error => {\n                this._eventEmitter.emit('error', error);\n            });\n            const reqItem = {\n                payload: request,\n                deferredPromise,\n            };\n            if (this.getStatus() === 'connecting') {\n                this._pendingRequestsQueue.set(requestId, reqItem);\n                return reqItem.deferredPromise;\n            }\n            this._sentRequestsQueue.set(requestId, reqItem);\n            try {\n                this._sendToSocket(reqItem.payload);\n            }\n            catch (error) {\n                this._sentRequestsQueue.delete(requestId);\n                this._eventEmitter.emit('error', error);\n            }\n            return deferredPromise;\n        });\n    }\n    _onConnect() {\n        this._connectionStatus = 'connected';\n        this._reconnectAttempts = 0;\n        super._onConnect();\n        this._sendPendingRequests();\n    }\n    _sendPendingRequests() {\n        for (const [id, value] of this._pendingRequestsQueue.entries()) {\n            try {\n                this._sendToSocket(value.payload);\n                this._pendingRequestsQueue.delete(id);\n                this._sentRequestsQueue.set(id, value);\n            }\n            catch (error) {\n                // catches if sendTosocket fails\n                this._pendingRequestsQueue.delete(id);\n                this._eventEmitter.emit('error', error);\n            }\n        }\n    }\n    _onMessage(event) {\n        const responses = this._parseResponses(event);\n        if ((0,_validation_js__WEBPACK_IMPORTED_MODULE_3__.isNullish)(responses) || responses.length === 0) {\n            return;\n        }\n        for (const response of responses) {\n            if (_json_rpc_js__WEBPACK_IMPORTED_MODULE_5__.isResponseWithNotification(response) &&\n                response.method.endsWith('_subscription')) {\n                this._eventEmitter.emit('message', response);\n                return;\n            }\n            const requestId = _json_rpc_js__WEBPACK_IMPORTED_MODULE_5__.isBatchResponse(response)\n                ? response[0].id\n                : response.id;\n            const requestItem = this._sentRequestsQueue.get(requestId);\n            if (!requestItem) {\n                return;\n            }\n            if (_json_rpc_js__WEBPACK_IMPORTED_MODULE_5__.isBatchResponse(response) ||\n                _json_rpc_js__WEBPACK_IMPORTED_MODULE_5__.isResponseWithResult(response) ||\n                _json_rpc_js__WEBPACK_IMPORTED_MODULE_5__.isResponseWithError(response)) {\n                this._eventEmitter.emit('message', response);\n                requestItem.deferredPromise.resolve(response);\n            }\n            this._sentRequestsQueue.delete(requestId);\n        }\n    }\n    clearQueues(event) {\n        this._clearQueues(event);\n    }\n    _clearQueues(event) {\n        if (this._pendingRequestsQueue.size > 0) {\n            this._pendingRequestsQueue.forEach((request, key) => {\n                request.deferredPromise.reject(new web3_errors__WEBPACK_IMPORTED_MODULE_0__.ConnectionNotOpenError(event));\n                this._pendingRequestsQueue.delete(key);\n            });\n        }\n        if (this._sentRequestsQueue.size > 0) {\n            this._sentRequestsQueue.forEach((request, key) => {\n                request.deferredPromise.reject(new web3_errors__WEBPACK_IMPORTED_MODULE_0__.ConnectionNotOpenError(event));\n                this._sentRequestsQueue.delete(key);\n            });\n        }\n        this._removeSocketListeners();\n    }\n}\n//# sourceMappingURL=socket_provider.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy11dGlscy9saWIvZXNtL3NvY2tldF9wcm92aWRlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUEsaUJBQWlCLFNBQUksSUFBSSxTQUFJO0FBQzdCLDRCQUE0QiwrREFBK0QsaUJBQWlCO0FBQzVHO0FBQ0Esb0NBQW9DLE1BQU0sK0JBQStCLFlBQVk7QUFDckYsbUNBQW1DLE1BQU0sbUNBQW1DLFlBQVk7QUFDeEYsZ0NBQWdDO0FBQ2hDO0FBQ0EsS0FBSztBQUNMO0FBQ29OO0FBQ3ZKO0FBQ0k7QUFDckI7QUFDcUI7QUFDeEI7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQztBQUN6Qiw2QkFBNkIsc0VBQWU7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2SEFBNkgsc0JBQXNCO0FBQ25KO0FBQ0E7QUFDQSwwRUFBMEU7QUFDMUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsMkRBQWtCO0FBQ3hDO0FBQ0E7QUFDQSwrREFBK0Qsa0hBQWtIO0FBQ2pMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLDBFQUFtQjtBQUMxRDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4Qix3REFBZSw4QkFBOEIsaUJBQWlCLFlBQVksVUFBVTtBQUNsSDtBQUNBO0FBQ0EsOEJBQThCLDJEQUFrQjtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCLGlCQUFpQjtBQUNqQixhQUFhO0FBQ2I7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1EQUFtRCwyRUFBa0M7QUFDckY7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQztBQUNoQztBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaURBQWlELDhFQUFxQztBQUN0RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQix5REFBUztBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsd0RBQXNCO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQiw0REFBbUI7QUFDN0M7QUFDQTtBQUNBLDBCQUEwQixnRUFBdUI7QUFDakQ7QUFDQSx3Q0FBd0MsMEVBQW1CO0FBQzNEO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSx5REFBUztBQUNyQjtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0Isb0VBQWtDO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLHlEQUF1QjtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IseURBQXVCO0FBQ3ZDLGdCQUFnQiw4REFBNEI7QUFDNUMsZ0JBQWdCLDZEQUEyQjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtREFBbUQsK0RBQXNCO0FBQ3pFO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLG1EQUFtRCwrREFBc0I7QUFDekU7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL21vcnBoLXBheS1zZGsvLi9ub2RlX21vZHVsZXMvd2ViMy11dGlscy9saWIvZXNtL3NvY2tldF9wcm92aWRlci5qcz9hNGJkIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBfX2F3YWl0ZXIgPSAodGhpcyAmJiB0aGlzLl9fYXdhaXRlcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikge1xuICAgIGZ1bmN0aW9uIGFkb3B0KHZhbHVlKSB7IHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFAgPyB2YWx1ZSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUodmFsdWUpOyB9KTsgfVxuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICBmdW5jdGlvbiBmdWxmaWxsZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IGFkb3B0KHJlc3VsdC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxuICAgICAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cyB8fCBbXSkpLm5leHQoKSk7XG4gICAgfSk7XG59O1xuaW1wb3J0IHsgQ29ubmVjdGlvbkVycm9yLCBDb25uZWN0aW9uTm90T3BlbkVycm9yLCBJbnZhbGlkQ2xpZW50RXJyb3IsIE1heEF0dGVtcHRzUmVhY2hlZE9uUmVjb25uZWN0aW5nRXJyb3IsIFBlbmRpbmdSZXF1ZXN0c09uUmVjb25uZWN0aW5nRXJyb3IsIFJlcXVlc3RBbHJlYWR5U2VudEVycm9yLCBXZWIzV1NQcm92aWRlckVycm9yLCB9IGZyb20gJ3dlYjMtZXJyb3JzJztcbmltcG9ydCB7IEVpcDExOTNQcm92aWRlciB9IGZyb20gJy4vd2ViM19laXAxMTkzX3Byb3ZpZGVyLmpzJztcbmltcG9ydCB7IENodW5rUmVzcG9uc2VQYXJzZXIgfSBmcm9tICcuL2NodW5rX3Jlc3BvbnNlX3BhcnNlci5qcyc7XG5pbXBvcnQgeyBpc051bGxpc2ggfSBmcm9tICcuL3ZhbGlkYXRpb24uanMnO1xuaW1wb3J0IHsgV2ViM0RlZmVycmVkUHJvbWlzZSB9IGZyb20gJy4vd2ViM19kZWZlcnJlZF9wcm9taXNlLmpzJztcbmltcG9ydCAqIGFzIGpzb25ScGMgZnJvbSAnLi9qc29uX3JwYy5qcyc7XG5jb25zdCBERUZBVUxUX1JFQ09OTkVDVElPTl9PUFRJT05TID0ge1xuICAgIGF1dG9SZWNvbm5lY3Q6IHRydWUsXG4gICAgZGVsYXk6IDUwMDAsXG4gICAgbWF4QXR0ZW1wdHM6IDUsXG59O1xuY29uc3QgTk9STUFMX0NMT1NFX0NPREUgPSAxMDAwOyAvLyBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9BUEkvV2ViU29ja2V0L2Nsb3NlXG5leHBvcnQgY2xhc3MgU29ja2V0UHJvdmlkZXIgZXh0ZW5kcyBFaXAxMTkzUHJvdmlkZXIge1xuICAgIGdldCBTb2NrZXRDb25uZWN0aW9uKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fc29ja2V0Q29ubmVjdGlvbjtcbiAgICB9XG4gICAgLyoqXG4gICAgICogVGhpcyBpcyBhbiBhYnN0cmFjdCBjbGFzcyBmb3IgaW1wbGVtZW50aW5nIGEgc29ja2V0IHByb3ZpZGVyIChlLmcuIFdlYlNvY2tldCwgSVBDKS4gSXQgZXh0ZW5kcyB0aGUgRUlQLTExOTMgcHJvdmlkZXIge0BsaW5rIEVJUDExOTNQcm92aWRlcn0uXG4gICAgICogQHBhcmFtIHNvY2tldFBhdGggLSBUaGUgcGF0aCB0byB0aGUgc29ja2V0IChlLmcuIC9pcGMvcGF0aCBvciB3czovL2xvY2FsaG9zdDo4NTQ2KVxuICAgICAqIEBwYXJhbSBzb2NrZXRPcHRpb25zIC0gVGhlIG9wdGlvbnMgZm9yIHRoZSBzb2NrZXQgY29ubmVjdGlvbi4gSXRzIHR5cGUgaXMgc3VwcG9zZWQgdG8gYmUgc3BlY2lmaWVkIGluIHRoZSBpbmhlcml0ZWQgY2xhc3Nlcy5cbiAgICAgKiBAcGFyYW0gcmVjb25uZWN0T3B0aW9ucyAtIFRoZSBvcHRpb25zIGZvciB0aGUgc29ja2V0IHJlY29ubmVjdGlvbiB7QGxpbmsgUmVjb25uZWN0T3B0aW9uc31cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3Rvcihzb2NrZXRQYXRoLCBzb2NrZXRPcHRpb25zLCByZWNvbm5lY3RPcHRpb25zKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMuX2Nvbm5lY3Rpb25TdGF0dXMgPSAnY29ubmVjdGluZyc7XG4gICAgICAgIC8vIE1lc3NhZ2UgaGFuZGxlcnMuIER1ZSB0byBib3VuZGluZyBvZiBgdGhpc2AgYW5kIHJlbW92aW5nIHRoZSBsaXN0ZW5lcnMgd2UgaGF2ZSB0byBrZWVwIGl0J3MgcmVmZXJlbmNlLlxuICAgICAgICB0aGlzLl9vbk1lc3NhZ2VIYW5kbGVyID0gdGhpcy5fb25NZXNzYWdlLmJpbmQodGhpcyk7XG4gICAgICAgIHRoaXMuX29uT3BlbkhhbmRsZXIgPSB0aGlzLl9vbkNvbm5lY3QuYmluZCh0aGlzKTtcbiAgICAgICAgdGhpcy5fb25DbG9zZUhhbmRsZXIgPSB0aGlzLl9vbkNsb3NlRXZlbnQuYmluZCh0aGlzKTtcbiAgICAgICAgdGhpcy5fb25FcnJvckhhbmRsZXIgPSB0aGlzLl9vbkVycm9yLmJpbmQodGhpcyk7XG4gICAgICAgIGlmICghdGhpcy5fdmFsaWRhdGVQcm92aWRlclBhdGgoc29ja2V0UGF0aCkpXG4gICAgICAgICAgICB0aHJvdyBuZXcgSW52YWxpZENsaWVudEVycm9yKHNvY2tldFBhdGgpO1xuICAgICAgICB0aGlzLl9zb2NrZXRQYXRoID0gc29ja2V0UGF0aDtcbiAgICAgICAgdGhpcy5fc29ja2V0T3B0aW9ucyA9IHNvY2tldE9wdGlvbnM7XG4gICAgICAgIHRoaXMuX3JlY29ubmVjdE9wdGlvbnMgPSBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIERFRkFVTFRfUkVDT05ORUNUSU9OX09QVElPTlMpLCAocmVjb25uZWN0T3B0aW9ucyAhPT0gbnVsbCAmJiByZWNvbm5lY3RPcHRpb25zICE9PSB2b2lkIDAgPyByZWNvbm5lY3RPcHRpb25zIDoge30pKTtcbiAgICAgICAgdGhpcy5fcGVuZGluZ1JlcXVlc3RzUXVldWUgPSBuZXcgTWFwKCk7XG4gICAgICAgIHRoaXMuX3NlbnRSZXF1ZXN0c1F1ZXVlID0gbmV3IE1hcCgpO1xuICAgICAgICB0aGlzLl9pbml0KCk7XG4gICAgICAgIHRoaXMuY29ubmVjdCgpO1xuICAgICAgICB0aGlzLmNodW5rUmVzcG9uc2VQYXJzZXIgPSBuZXcgQ2h1bmtSZXNwb25zZVBhcnNlcih0aGlzLl9ldmVudEVtaXR0ZXIsIHRoaXMuX3JlY29ubmVjdE9wdGlvbnMuYXV0b1JlY29ubmVjdCk7XG4gICAgICAgIHRoaXMuY2h1bmtSZXNwb25zZVBhcnNlci5vbkVycm9yKCgpID0+IHtcbiAgICAgICAgICAgIHRoaXMuX2NsZWFyUXVldWVzKCk7XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmlzUmVjb25uZWN0aW5nID0gZmFsc2U7XG4gICAgfVxuICAgIF9pbml0KCkge1xuICAgICAgICB0aGlzLl9yZWNvbm5lY3RBdHRlbXB0cyA9IDA7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFRyeSB0byBlc3RhYmxpc2ggYSBjb25uZWN0aW9uIHRvIHRoZSBzb2NrZXRcbiAgICAgKi9cbiAgICBjb25uZWN0KCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgdGhpcy5fb3BlblNvY2tldENvbm5lY3Rpb24oKTtcbiAgICAgICAgICAgIHRoaXMuX2Nvbm5lY3Rpb25TdGF0dXMgPSAnY29ubmVjdGluZyc7XG4gICAgICAgICAgICB0aGlzLl9hZGRTb2NrZXRMaXN0ZW5lcnMoKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgaWYgKCF0aGlzLmlzUmVjb25uZWN0aW5nKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fY29ubmVjdGlvblN0YXR1cyA9ICdkaXNjb25uZWN0ZWQnO1xuICAgICAgICAgICAgICAgIGlmIChlICYmIGUubWVzc2FnZSkge1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgQ29ubmVjdGlvbkVycm9yKGBFcnJvciB3aGlsZSBjb25uZWN0aW5nIHRvICR7dGhpcy5fc29ja2V0UGF0aH0uIFJlYXNvbjogJHtlLm1lc3NhZ2V9YCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgSW52YWxpZENsaWVudEVycm9yKHRoaXMuX3NvY2tldFBhdGgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHNldEltbWVkaWF0ZSgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX3JlY29ubmVjdCgpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBjbGFzcy1tZXRob2RzLXVzZS10aGlzXG4gICAgX3ZhbGlkYXRlUHJvdmlkZXJQYXRoKHBhdGgpIHtcbiAgICAgICAgcmV0dXJuICEhcGF0aDtcbiAgICB9XG4gICAgLyoqXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyB0aGUgcGVuZGluZ1JlcXVlc3RRdWV1ZSBzaXplXG4gICAgICovXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGNsYXNzLW1ldGhvZHMtdXNlLXRoaXNcbiAgICBnZXRQZW5kaW5nUmVxdWVzdFF1ZXVlU2l6ZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3BlbmRpbmdSZXF1ZXN0c1F1ZXVlLnNpemU7XG4gICAgfVxuICAgIC8qKlxuICAgICAqXG4gICAgICogQHJldHVybnMgdGhlIHNlbmRQZW5kaW5nUmVxdWVzdHMgc2l6ZVxuICAgICAqL1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBjbGFzcy1tZXRob2RzLXVzZS10aGlzXG4gICAgZ2V0U2VudFJlcXVlc3RzUXVldWVTaXplKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fc2VudFJlcXVlc3RzUXVldWUuc2l6ZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyBgdHJ1ZWAgaWYgdGhlIHNvY2tldCBzdXBwb3J0cyBzdWJzY3JpcHRpb25zXG4gICAgICovXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGNsYXNzLW1ldGhvZHMtdXNlLXRoaXNcbiAgICBzdXBwb3J0c1N1YnNjcmlwdGlvbnMoKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBvbih0eXBlLCBsaXN0ZW5lcikge1xuICAgICAgICB0aGlzLl9ldmVudEVtaXR0ZXIub24odHlwZSwgbGlzdGVuZXIpO1xuICAgIH1cbiAgICBvbmNlKHR5cGUsIGxpc3RlbmVyKSB7XG4gICAgICAgIHRoaXMuX2V2ZW50RW1pdHRlci5vbmNlKHR5cGUsIGxpc3RlbmVyKTtcbiAgICB9XG4gICAgcmVtb3ZlTGlzdGVuZXIodHlwZSwgbGlzdGVuZXIpIHtcbiAgICAgICAgdGhpcy5fZXZlbnRFbWl0dGVyLnJlbW92ZUxpc3RlbmVyKHR5cGUsIGxpc3RlbmVyKTtcbiAgICB9XG4gICAgX29uRGlzY29ubmVjdChjb2RlLCBkYXRhKSB7XG4gICAgICAgIHRoaXMuX2Nvbm5lY3Rpb25TdGF0dXMgPSAnZGlzY29ubmVjdGVkJztcbiAgICAgICAgc3VwZXIuX29uRGlzY29ubmVjdChjb2RlLCBkYXRhKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogRGlzY29ubmVjdHMgdGhlIHNvY2tldFxuICAgICAqIEBwYXJhbSBjb2RlIC0gVGhlIGNvZGUgdG8gYmUgc2VudCB0byB0aGUgc2VydmVyXG4gICAgICogQHBhcmFtIGRhdGEgLSBUaGUgZGF0YSB0byBiZSBzZW50IHRvIHRoZSBzZXJ2ZXJcbiAgICAgKi9cbiAgICBkaXNjb25uZWN0KGNvZGUsIGRhdGEpIHtcbiAgICAgICAgY29uc3QgZGlzY29ubmVjdENvZGUgPSBjb2RlICE9PSBudWxsICYmIGNvZGUgIT09IHZvaWQgMCA/IGNvZGUgOiBOT1JNQUxfQ0xPU0VfQ09ERTtcbiAgICAgICAgdGhpcy5fcmVtb3ZlU29ja2V0TGlzdGVuZXJzKCk7XG4gICAgICAgIGlmICh0aGlzLmdldFN0YXR1cygpICE9PSAnZGlzY29ubmVjdGVkJykge1xuICAgICAgICAgICAgdGhpcy5fY2xvc2VTb2NrZXRDb25uZWN0aW9uKGRpc2Nvbm5lY3RDb2RlLCBkYXRhKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9vbkRpc2Nvbm5lY3QoZGlzY29ubmVjdENvZGUsIGRhdGEpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTYWZlbHkgZGlzY29ubmVjdHMgdGhlIHNvY2tldCwgYXN5bmMgYW5kIHdhaXRzIGZvciByZXF1ZXN0IHNpemUgdG8gYmUgMCBiZWZvcmUgZGlzY29ubmVjdGluZ1xuICAgICAqIEBwYXJhbSBmb3JjZURpc2Nvbm5lY3QgLSBJZiB0cnVlLCB3aWxsIGNsZWFyIHF1ZXVlIGFmdGVyIDUgYXR0ZW1wdHMgb2Ygd2FpdGluZyBmb3IgYm90aCBwZW5kaW5nIGFuZCBzZW50IHF1ZXVlIHRvIGJlIDBcbiAgICAgKiBAcGFyYW0gbXMgLSBEZXRlcm1pbmVzIHRoZSBtcyBvZiBzZXRJbnRlcnZhbFxuICAgICAqIEBwYXJhbSBjb2RlIC0gVGhlIGNvZGUgdG8gYmUgc2VudCB0byB0aGUgc2VydmVyXG4gICAgICogQHBhcmFtIGRhdGEgLSBUaGUgZGF0YSB0byBiZSBzZW50IHRvIHRoZSBzZXJ2ZXJcbiAgICAgKi9cbiAgICBzYWZlRGlzY29ubmVjdChjb2RlXzEsIGRhdGFfMSkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIGFyZ3VtZW50cywgdm9pZCAwLCBmdW5jdGlvbiogKGNvZGUsIGRhdGEsIGZvcmNlRGlzY29ubmVjdCA9IGZhbHNlLCBtcyA9IDEwMDApIHtcbiAgICAgICAgICAgIGxldCByZXRyeUF0dGVtcHQgPSAwO1xuICAgICAgICAgICAgY29uc3QgY2hlY2tRdWV1ZSA9ICgpID0+IF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGludGVydmFsID0gc2V0SW50ZXJ2YWwoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGZvcmNlRGlzY29ubmVjdCAmJiByZXRyeUF0dGVtcHQgPj0gNSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY2xlYXJRdWV1ZXMoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLmdldFBlbmRpbmdSZXF1ZXN0UXVldWVTaXplKCkgPT09IDAgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmdldFNlbnRSZXF1ZXN0c1F1ZXVlU2l6ZSgpID09PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xlYXJJbnRlcnZhbChpbnRlcnZhbCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZSh0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHJ5QXR0ZW1wdCArPSAxO1xuICAgICAgICAgICAgICAgICAgICB9LCBtcyk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHlpZWxkIGNoZWNrUXVldWUoKTtcbiAgICAgICAgICAgIHRoaXMuZGlzY29ubmVjdChjb2RlLCBkYXRhKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJlbW92ZXMgYWxsIGxpc3RlbmVycyBmb3IgdGhlIHNwZWNpZmllZCBldmVudCB0eXBlLlxuICAgICAqIEBwYXJhbSB0eXBlIC0gVGhlIGV2ZW50IHR5cGUgdG8gcmVtb3ZlIHRoZSBsaXN0ZW5lcnMgZm9yXG4gICAgICovXG4gICAgcmVtb3ZlQWxsTGlzdGVuZXJzKHR5cGUpIHtcbiAgICAgICAgdGhpcy5fZXZlbnRFbWl0dGVyLnJlbW92ZUFsbExpc3RlbmVycyh0eXBlKTtcbiAgICB9XG4gICAgX29uRXJyb3IoZXZlbnQpIHtcbiAgICAgICAgLy8gZG8gbm90IGVtaXQgZXJyb3Igd2hpbGUgdHJ5aW5nIHRvIHJlY29ubmVjdFxuICAgICAgICBpZiAodGhpcy5pc1JlY29ubmVjdGluZykge1xuICAgICAgICAgICAgdGhpcy5fcmVjb25uZWN0KCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLl9ldmVudEVtaXR0ZXIuZW1pdCgnZXJyb3InLCBldmVudCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogUmVzZXRzIHRoZSBzb2NrZXQsIHJlbW92aW5nIGFsbCBsaXN0ZW5lcnMgYW5kIHBlbmRpbmcgcmVxdWVzdHNcbiAgICAgKi9cbiAgICByZXNldCgpIHtcbiAgICAgICAgdGhpcy5fc2VudFJlcXVlc3RzUXVldWUuY2xlYXIoKTtcbiAgICAgICAgdGhpcy5fcGVuZGluZ1JlcXVlc3RzUXVldWUuY2xlYXIoKTtcbiAgICAgICAgdGhpcy5faW5pdCgpO1xuICAgICAgICB0aGlzLl9yZW1vdmVTb2NrZXRMaXN0ZW5lcnMoKTtcbiAgICAgICAgdGhpcy5fYWRkU29ja2V0TGlzdGVuZXJzKCk7XG4gICAgfVxuICAgIF9yZWNvbm5lY3QoKSB7XG4gICAgICAgIGlmICh0aGlzLmlzUmVjb25uZWN0aW5nKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5pc1JlY29ubmVjdGluZyA9IHRydWU7XG4gICAgICAgIGlmICh0aGlzLl9zZW50UmVxdWVzdHNRdWV1ZS5zaXplID4gMCkge1xuICAgICAgICAgICAgdGhpcy5fc2VudFJlcXVlc3RzUXVldWUuZm9yRWFjaCgocmVxdWVzdCwga2V5KSA9PiB7XG4gICAgICAgICAgICAgICAgcmVxdWVzdC5kZWZlcnJlZFByb21pc2UucmVqZWN0KG5ldyBQZW5kaW5nUmVxdWVzdHNPblJlY29ubmVjdGluZ0Vycm9yKCkpO1xuICAgICAgICAgICAgICAgIHRoaXMuX3NlbnRSZXF1ZXN0c1F1ZXVlLmRlbGV0ZShrZXkpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuX3JlY29ubmVjdEF0dGVtcHRzIDwgdGhpcy5fcmVjb25uZWN0T3B0aW9ucy5tYXhBdHRlbXB0cykge1xuICAgICAgICAgICAgdGhpcy5fcmVjb25uZWN0QXR0ZW1wdHMgKz0gMTtcbiAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuX3JlbW92ZVNvY2tldExpc3RlbmVycygpO1xuICAgICAgICAgICAgICAgIHRoaXMuY29ubmVjdCgpOyAvLyB0aGlzIGNhbiBlcnJvciBvdXRcbiAgICAgICAgICAgICAgICB0aGlzLmlzUmVjb25uZWN0aW5nID0gZmFsc2U7XG4gICAgICAgICAgICB9LCB0aGlzLl9yZWNvbm5lY3RPcHRpb25zLmRlbGF5KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuaXNSZWNvbm5lY3RpbmcgPSBmYWxzZTtcbiAgICAgICAgICAgIHRoaXMuX2NsZWFyUXVldWVzKCk7XG4gICAgICAgICAgICB0aGlzLl9yZW1vdmVTb2NrZXRMaXN0ZW5lcnMoKTtcbiAgICAgICAgICAgIHRoaXMuX2V2ZW50RW1pdHRlci5lbWl0KCdlcnJvcicsIG5ldyBNYXhBdHRlbXB0c1JlYWNoZWRPblJlY29ubmVjdGluZ0Vycm9yKHRoaXMuX3JlY29ubmVjdE9wdGlvbnMubWF4QXR0ZW1wdHMpKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiAgQ3JlYXRlcyBhIHJlcXVlc3Qgb2JqZWN0IHRvIGJlIHNlbnQgdG8gdGhlIHNlcnZlclxuICAgICAqL1xuICAgIHJlcXVlc3QocmVxdWVzdCkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgaWYgKGlzTnVsbGlzaCh0aGlzLl9zb2NrZXRDb25uZWN0aW9uKSkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignQ29ubmVjdGlvbiBpcyB1bmRlZmluZWQnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIGlmIHNvY2tldCBkaXNjb25uZWN0ZWQgLSBvcGVuIGNvbm5lY3Rpb25cbiAgICAgICAgICAgIGlmICh0aGlzLmdldFN0YXR1cygpID09PSAnZGlzY29ubmVjdGVkJykge1xuICAgICAgICAgICAgICAgIHRoaXMuY29ubmVjdCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgcmVxdWVzdElkID0ganNvblJwYy5pc0JhdGNoUmVxdWVzdChyZXF1ZXN0KVxuICAgICAgICAgICAgICAgID8gcmVxdWVzdFswXS5pZFxuICAgICAgICAgICAgICAgIDogcmVxdWVzdC5pZDtcbiAgICAgICAgICAgIGlmICghcmVxdWVzdElkKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IFdlYjNXU1Byb3ZpZGVyRXJyb3IoJ1JlcXVlc3QgSWQgbm90IGRlZmluZWQnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0aGlzLl9zZW50UmVxdWVzdHNRdWV1ZS5oYXMocmVxdWVzdElkKSkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBSZXF1ZXN0QWxyZWFkeVNlbnRFcnJvcihyZXF1ZXN0SWQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgZGVmZXJyZWRQcm9taXNlID0gbmV3IFdlYjNEZWZlcnJlZFByb21pc2UoKTtcbiAgICAgICAgICAgIGRlZmVycmVkUHJvbWlzZS5jYXRjaChlcnJvciA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5fZXZlbnRFbWl0dGVyLmVtaXQoJ2Vycm9yJywgZXJyb3IpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBjb25zdCByZXFJdGVtID0ge1xuICAgICAgICAgICAgICAgIHBheWxvYWQ6IHJlcXVlc3QsXG4gICAgICAgICAgICAgICAgZGVmZXJyZWRQcm9taXNlLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGlmICh0aGlzLmdldFN0YXR1cygpID09PSAnY29ubmVjdGluZycpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9wZW5kaW5nUmVxdWVzdHNRdWV1ZS5zZXQocmVxdWVzdElkLCByZXFJdGVtKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVxSXRlbS5kZWZlcnJlZFByb21pc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLl9zZW50UmVxdWVzdHNRdWV1ZS5zZXQocmVxdWVzdElkLCByZXFJdGVtKTtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fc2VuZFRvU29ja2V0KHJlcUl0ZW0ucGF5bG9hZCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9zZW50UmVxdWVzdHNRdWV1ZS5kZWxldGUocmVxdWVzdElkKTtcbiAgICAgICAgICAgICAgICB0aGlzLl9ldmVudEVtaXR0ZXIuZW1pdCgnZXJyb3InLCBlcnJvcik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gZGVmZXJyZWRQcm9taXNlO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgX29uQ29ubmVjdCgpIHtcbiAgICAgICAgdGhpcy5fY29ubmVjdGlvblN0YXR1cyA9ICdjb25uZWN0ZWQnO1xuICAgICAgICB0aGlzLl9yZWNvbm5lY3RBdHRlbXB0cyA9IDA7XG4gICAgICAgIHN1cGVyLl9vbkNvbm5lY3QoKTtcbiAgICAgICAgdGhpcy5fc2VuZFBlbmRpbmdSZXF1ZXN0cygpO1xuICAgIH1cbiAgICBfc2VuZFBlbmRpbmdSZXF1ZXN0cygpIHtcbiAgICAgICAgZm9yIChjb25zdCBbaWQsIHZhbHVlXSBvZiB0aGlzLl9wZW5kaW5nUmVxdWVzdHNRdWV1ZS5lbnRyaWVzKCkpIHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fc2VuZFRvU29ja2V0KHZhbHVlLnBheWxvYWQpO1xuICAgICAgICAgICAgICAgIHRoaXMuX3BlbmRpbmdSZXF1ZXN0c1F1ZXVlLmRlbGV0ZShpZCk7XG4gICAgICAgICAgICAgICAgdGhpcy5fc2VudFJlcXVlc3RzUXVldWUuc2V0KGlkLCB2YWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICAvLyBjYXRjaGVzIGlmIHNlbmRUb3NvY2tldCBmYWlsc1xuICAgICAgICAgICAgICAgIHRoaXMuX3BlbmRpbmdSZXF1ZXN0c1F1ZXVlLmRlbGV0ZShpZCk7XG4gICAgICAgICAgICAgICAgdGhpcy5fZXZlbnRFbWl0dGVyLmVtaXQoJ2Vycm9yJywgZXJyb3IpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIF9vbk1lc3NhZ2UoZXZlbnQpIHtcbiAgICAgICAgY29uc3QgcmVzcG9uc2VzID0gdGhpcy5fcGFyc2VSZXNwb25zZXMoZXZlbnQpO1xuICAgICAgICBpZiAoaXNOdWxsaXNoKHJlc3BvbnNlcykgfHwgcmVzcG9uc2VzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGZvciAoY29uc3QgcmVzcG9uc2Ugb2YgcmVzcG9uc2VzKSB7XG4gICAgICAgICAgICBpZiAoanNvblJwYy5pc1Jlc3BvbnNlV2l0aE5vdGlmaWNhdGlvbihyZXNwb25zZSkgJiZcbiAgICAgICAgICAgICAgICByZXNwb25zZS5tZXRob2QuZW5kc1dpdGgoJ19zdWJzY3JpcHRpb24nKSkge1xuICAgICAgICAgICAgICAgIHRoaXMuX2V2ZW50RW1pdHRlci5lbWl0KCdtZXNzYWdlJywgcmVzcG9uc2UpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IHJlcXVlc3RJZCA9IGpzb25ScGMuaXNCYXRjaFJlc3BvbnNlKHJlc3BvbnNlKVxuICAgICAgICAgICAgICAgID8gcmVzcG9uc2VbMF0uaWRcbiAgICAgICAgICAgICAgICA6IHJlc3BvbnNlLmlkO1xuICAgICAgICAgICAgY29uc3QgcmVxdWVzdEl0ZW0gPSB0aGlzLl9zZW50UmVxdWVzdHNRdWV1ZS5nZXQocmVxdWVzdElkKTtcbiAgICAgICAgICAgIGlmICghcmVxdWVzdEl0ZW0pIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoanNvblJwYy5pc0JhdGNoUmVzcG9uc2UocmVzcG9uc2UpIHx8XG4gICAgICAgICAgICAgICAganNvblJwYy5pc1Jlc3BvbnNlV2l0aFJlc3VsdChyZXNwb25zZSkgfHxcbiAgICAgICAgICAgICAgICBqc29uUnBjLmlzUmVzcG9uc2VXaXRoRXJyb3IocmVzcG9uc2UpKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fZXZlbnRFbWl0dGVyLmVtaXQoJ21lc3NhZ2UnLCByZXNwb25zZSk7XG4gICAgICAgICAgICAgICAgcmVxdWVzdEl0ZW0uZGVmZXJyZWRQcm9taXNlLnJlc29sdmUocmVzcG9uc2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5fc2VudFJlcXVlc3RzUXVldWUuZGVsZXRlKHJlcXVlc3RJZCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgY2xlYXJRdWV1ZXMoZXZlbnQpIHtcbiAgICAgICAgdGhpcy5fY2xlYXJRdWV1ZXMoZXZlbnQpO1xuICAgIH1cbiAgICBfY2xlYXJRdWV1ZXMoZXZlbnQpIHtcbiAgICAgICAgaWYgKHRoaXMuX3BlbmRpbmdSZXF1ZXN0c1F1ZXVlLnNpemUgPiAwKSB7XG4gICAgICAgICAgICB0aGlzLl9wZW5kaW5nUmVxdWVzdHNRdWV1ZS5mb3JFYWNoKChyZXF1ZXN0LCBrZXkpID0+IHtcbiAgICAgICAgICAgICAgICByZXF1ZXN0LmRlZmVycmVkUHJvbWlzZS5yZWplY3QobmV3IENvbm5lY3Rpb25Ob3RPcGVuRXJyb3IoZXZlbnQpKTtcbiAgICAgICAgICAgICAgICB0aGlzLl9wZW5kaW5nUmVxdWVzdHNRdWV1ZS5kZWxldGUoa2V5KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLl9zZW50UmVxdWVzdHNRdWV1ZS5zaXplID4gMCkge1xuICAgICAgICAgICAgdGhpcy5fc2VudFJlcXVlc3RzUXVldWUuZm9yRWFjaCgocmVxdWVzdCwga2V5KSA9PiB7XG4gICAgICAgICAgICAgICAgcmVxdWVzdC5kZWZlcnJlZFByb21pc2UucmVqZWN0KG5ldyBDb25uZWN0aW9uTm90T3BlbkVycm9yKGV2ZW50KSk7XG4gICAgICAgICAgICAgICAgdGhpcy5fc2VudFJlcXVlc3RzUXVldWUuZGVsZXRlKGtleSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9yZW1vdmVTb2NrZXRMaXN0ZW5lcnMoKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zb2NrZXRfcHJvdmlkZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-utils/lib/esm/socket_provider.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-utils/lib/esm/string_manipulation.js":
/*!****************************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/string_manipulation.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fromTwosComplement: () => (/* binding */ fromTwosComplement),\n/* harmony export */   leftPad: () => (/* binding */ leftPad),\n/* harmony export */   padLeft: () => (/* binding */ padLeft),\n/* harmony export */   padRight: () => (/* binding */ padRight),\n/* harmony export */   rightPad: () => (/* binding */ rightPad),\n/* harmony export */   toTwosComplement: () => (/* binding */ toTwosComplement)\n/* harmony export */ });\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var _converters_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./converters.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/converters.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\n\n/**\n * Adds a padding on the left of a string, if value is a integer or bigInt will be converted to a hex string.\n * @param value - The value to be padded.\n * @param characterAmount - The amount of characters the string should have.\n * @param sign - The sign to be added (default is 0).\n * @returns The padded string.\n *\n * @example\n * ```ts\n *\n * console.log(web3.utils.padLeft('0x123', 10));\n * >0x0000000123\n * ```\n */\nconst padLeft = (value, characterAmount, sign = '0') => {\n    // To avoid duplicate code and circular dependency we will\n    // use `padLeft` implementation from `web3-validator`\n    if (typeof value === 'string') {\n        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value)) {\n            return value.padStart(characterAmount, sign);\n        }\n        return web3_validator__WEBPACK_IMPORTED_MODULE_1__.utils.padLeft(value, characterAmount, sign);\n    }\n    web3_validator__WEBPACK_IMPORTED_MODULE_1__.validator.validate(['int'], [value]);\n    return web3_validator__WEBPACK_IMPORTED_MODULE_1__.utils.padLeft(value, characterAmount, sign);\n};\n/**\n * Adds a padding on the right of a string, if value is a integer or bigInt will be converted to a hex string.\n * @param value - The value to be padded.\n * @param characterAmount - The amount of characters the string should have.\n * @param sign - The sign to be added (default is 0).\n * @returns The padded string.\n *\n * @example\n * ```ts\n * console.log(web3.utils.padRight('0x123', 10));\n * > 0x1230000000\n *\n * console.log(web3.utils.padRight('0x123', 10, '1'));\n * > 0x1231111111\n * ```\n */\nconst padRight = (value, characterAmount, sign = '0') => {\n    if (typeof value === 'string' && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value)) {\n        return value.padEnd(characterAmount, sign);\n    }\n    const hexString = typeof value === 'string' && (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value) ? value : (0,_converters_js__WEBPACK_IMPORTED_MODULE_2__.numberToHex)(value);\n    const prefixLength = hexString.startsWith('-') ? 3 : 2;\n    web3_validator__WEBPACK_IMPORTED_MODULE_1__.validator.validate([hexString.startsWith('-') ? 'int' : 'uint'], [value]);\n    return hexString.padEnd(characterAmount + prefixLength, sign);\n};\n/**\n * Adds a padding on the right of a string, if value is a integer or bigInt will be converted to a hex string. @alias `padRight`\n */\nconst rightPad = padRight;\n/**\n * Adds a padding on the left of a string, if value is a integer or bigInt will be converted to a hex string. @alias `padLeft`\n */\nconst leftPad = padLeft;\n/**\n * Converts a negative number into the two’s complement and return a hexstring of 64 nibbles.\n * @param value - The value to be converted.\n * @param nibbleWidth - The nibble width of the hex string (default is 64).\n *\n * @returns The hex string of the two’s complement.\n *\n * @example\n * ```ts\n * console.log(web3.utils.toTwosComplement(13, 32));\n * > 0x0000000000000000000000000000000d\n *\n * console.log(web3.utils.toTwosComplement('-0x1', 32));\n * > 0xffffffffffffffffffffffffffffffff\n *\n * console.log(web3.utils.toTwosComplement(BigInt('9007199254740992'), 32));\n * > 0x00000000000000000020000000000000\n * ```\n */\nconst toTwosComplement = (value, nibbleWidth = 64) => {\n    web3_validator__WEBPACK_IMPORTED_MODULE_1__.validator.validate(['int'], [value]);\n    const val = (0,_converters_js__WEBPACK_IMPORTED_MODULE_2__.toNumber)(value);\n    if (val >= 0)\n        return padLeft((0,_converters_js__WEBPACK_IMPORTED_MODULE_2__.toHex)(val), nibbleWidth);\n    const largestBit = (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.bigintPower)(BigInt(2), BigInt(nibbleWidth * 4));\n    if (-val >= largestBit) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.NibbleWidthError(`value: ${value}, nibbleWidth: ${nibbleWidth}`);\n    }\n    const updatedVal = BigInt(val);\n    const complement = updatedVal + largestBit;\n    return padLeft((0,_converters_js__WEBPACK_IMPORTED_MODULE_2__.numberToHex)(complement), nibbleWidth);\n};\n/**\n * Converts the twos complement into a decimal number or big int.\n * @param value - The value to be converted.\n * @param nibbleWidth - The nibble width of the hex string (default is 64).\n * @returns The decimal number or big int.\n *\n * @example\n * ```ts\n * console.log(web3.utils.fromTwosComplement('0x0000000000000000000000000000000d', 32'));\n * > 13\n *\n * console.log(web3.utils.fromTwosComplement('0x00000000000000000020000000000000', 32));\n * > 9007199254740992n\n * ```\n */\nconst fromTwosComplement = (value, nibbleWidth = 64) => {\n    web3_validator__WEBPACK_IMPORTED_MODULE_1__.validator.validate(['int'], [value]);\n    const val = (0,_converters_js__WEBPACK_IMPORTED_MODULE_2__.toNumber)(value);\n    if (val < 0)\n        return val;\n    const largestBit = Math.ceil(Math.log(Number(val)) / Math.log(2));\n    if (largestBit > nibbleWidth * 4)\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.NibbleWidthError(`value: \"${value}\", nibbleWidth: \"${nibbleWidth}\"`);\n    // check the largest bit to see if negative\n    if (nibbleWidth * 4 !== largestBit)\n        return val;\n    const complement = (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.bigintPower)(BigInt(2), BigInt(nibbleWidth) * BigInt(4));\n    return (0,_converters_js__WEBPACK_IMPORTED_MODULE_2__.toNumber)(BigInt(val) - complement);\n};\n//# sourceMappingURL=string_manipulation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-utils/lib/esm/string_manipulation.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-utils/lib/esm/uint8array.js":
/*!*******************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/uint8array.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isUint8Array: () => (/* binding */ isUint8Array),\n/* harmony export */   uint8ArrayConcat: () => (/* binding */ uint8ArrayConcat),\n/* harmony export */   uint8ArrayEquals: () => (/* binding */ uint8ArrayEquals)\n/* harmony export */ });\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nfunction isUint8Array(data) {\n    var _a, _b;\n    return (data instanceof Uint8Array ||\n        ((_a = data === null || data === void 0 ? void 0 : data.constructor) === null || _a === void 0 ? void 0 : _a.name) === 'Uint8Array' ||\n        ((_b = data === null || data === void 0 ? void 0 : data.constructor) === null || _b === void 0 ? void 0 : _b.name) === 'Buffer');\n}\nfunction uint8ArrayConcat(...parts) {\n    const length = parts.reduce((prev, part) => {\n        const agg = prev + part.length;\n        return agg;\n    }, 0);\n    const result = new Uint8Array(length);\n    let offset = 0;\n    for (const part of parts) {\n        result.set(part, offset);\n        offset += part.length;\n    }\n    return result;\n}\n/**\n * Returns true if the two passed Uint8Arrays have the same content\n */\nfunction uint8ArrayEquals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (a.byteLength !== b.byteLength) {\n        return false;\n    }\n    for (let i = 0; i < a.byteLength; i += 1) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n//# sourceMappingURL=uint8array.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy11dGlscy9saWIvZXNtL3VpbnQ4YXJyYXkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixrQkFBa0I7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tb3JwaC1wYXktc2RrLy4vbm9kZV9tb2R1bGVzL3dlYjMtdXRpbHMvbGliL2VzbS91aW50OGFycmF5LmpzP2U0ZTkiXSwic291cmNlc0NvbnRlbnQiOlsiLypcblRoaXMgZmlsZSBpcyBwYXJ0IG9mIHdlYjMuanMuXG5cbndlYjMuanMgaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG50aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cblxud2ViMy5qcyBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2Zcbk1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbkdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuXG5Zb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbmFsb25nIHdpdGggd2ViMy5qcy4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiovXG5leHBvcnQgZnVuY3Rpb24gaXNVaW50OEFycmF5KGRhdGEpIHtcbiAgICB2YXIgX2EsIF9iO1xuICAgIHJldHVybiAoZGF0YSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkgfHxcbiAgICAgICAgKChfYSA9IGRhdGEgPT09IG51bGwgfHwgZGF0YSA9PT0gdm9pZCAwID8gdm9pZCAwIDogZGF0YS5jb25zdHJ1Y3RvcikgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLm5hbWUpID09PSAnVWludDhBcnJheScgfHxcbiAgICAgICAgKChfYiA9IGRhdGEgPT09IG51bGwgfHwgZGF0YSA9PT0gdm9pZCAwID8gdm9pZCAwIDogZGF0YS5jb25zdHJ1Y3RvcikgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLm5hbWUpID09PSAnQnVmZmVyJyk7XG59XG5leHBvcnQgZnVuY3Rpb24gdWludDhBcnJheUNvbmNhdCguLi5wYXJ0cykge1xuICAgIGNvbnN0IGxlbmd0aCA9IHBhcnRzLnJlZHVjZSgocHJldiwgcGFydCkgPT4ge1xuICAgICAgICBjb25zdCBhZ2cgPSBwcmV2ICsgcGFydC5sZW5ndGg7XG4gICAgICAgIHJldHVybiBhZ2c7XG4gICAgfSwgMCk7XG4gICAgY29uc3QgcmVzdWx0ID0gbmV3IFVpbnQ4QXJyYXkobGVuZ3RoKTtcbiAgICBsZXQgb2Zmc2V0ID0gMDtcbiAgICBmb3IgKGNvbnN0IHBhcnQgb2YgcGFydHMpIHtcbiAgICAgICAgcmVzdWx0LnNldChwYXJ0LCBvZmZzZXQpO1xuICAgICAgICBvZmZzZXQgKz0gcGFydC5sZW5ndGg7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG59XG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiB0aGUgdHdvIHBhc3NlZCBVaW50OEFycmF5cyBoYXZlIHRoZSBzYW1lIGNvbnRlbnRcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHVpbnQ4QXJyYXlFcXVhbHMoYSwgYikge1xuICAgIGlmIChhID09PSBiKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBpZiAoYS5ieXRlTGVuZ3RoICE9PSBiLmJ5dGVMZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGEuYnl0ZUxlbmd0aDsgaSArPSAxKSB7XG4gICAgICAgIGlmIChhW2ldICE9PSBiW2ldKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD11aW50OGFycmF5LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-utils/lib/esm/uint8array.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-utils/lib/esm/uuid.js":
/*!*************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/uuid.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   uuidV4: () => (/* binding */ uuidV4)\n/* harmony export */ });\n/* harmony import */ var _converters_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./converters.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/converters.js\");\n/* harmony import */ var _random_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./random.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/random.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @module Utils\n */\n\n\n/**\n * Generate a version 4 (random) uuid\n * https://github.com/uuidjs/uuid/blob/main/src/v4.js#L5\n * @returns - A version 4 uuid of the form xxxxxxxx-xxxx-4xxx-xxxx-xxxxxxxxxxxx\n * @example\n * ```ts\n * console.log(web3.utils.uuidV4());\n * > \"1b9d6bcd-bbfd-4b2d-9b5d-ab8dfbbd4bed\"\n * ```\n */\nconst uuidV4 = () => {\n    const bytes = (0,_random_js__WEBPACK_IMPORTED_MODULE_1__.randomBytes)(16);\n    // https://github.com/ethers-io/ethers.js/blob/ce8f1e4015c0f27bf178238770b1325136e3351a/packages/json-wallets/src.ts/utils.ts#L54\n    // Section: 4.1.3:\n    // - time_hi_and_version[12:16] = 0b0100\n    /* eslint-disable-next-line */\n    bytes[6] = (bytes[6] & 0x0f) | 0x40;\n    // Section 4.4\n    // - clock_seq_hi_and_reserved[6] = 0b0\n    // - clock_seq_hi_and_reserved[7] = 0b1\n    /* eslint-disable-next-line */\n    bytes[8] = (bytes[8] & 0x3f) | 0x80;\n    const hexString = (0,_converters_js__WEBPACK_IMPORTED_MODULE_0__.bytesToHex)(bytes);\n    return [\n        hexString.substring(2, 10),\n        hexString.substring(10, 14),\n        hexString.substring(14, 18),\n        hexString.substring(18, 22),\n        hexString.substring(22, 34),\n    ].join('-');\n};\n//# sourceMappingURL=uuid.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy11dGlscy9saWIvZXNtL3V1aWQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUM2QztBQUNIO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxrQkFBa0IsdURBQVc7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsMERBQVU7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbW9ycGgtcGF5LXNkay8uL25vZGVfbW9kdWxlcy93ZWIzLXV0aWxzL2xpYi9lc20vdXVpZC5qcz85YjY3Il0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5UaGlzIGZpbGUgaXMgcGFydCBvZiB3ZWIzLmpzLlxuXG53ZWIzLmpzIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbml0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxudGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbihhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG5cbndlYjMuanMgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbmJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG5NRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG5HTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cblxuWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG5hbG9uZyB3aXRoIHdlYjMuanMuICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4qL1xuLyoqXG4gKiBAbW9kdWxlIFV0aWxzXG4gKi9cbmltcG9ydCB7IGJ5dGVzVG9IZXggfSBmcm9tICcuL2NvbnZlcnRlcnMuanMnO1xuaW1wb3J0IHsgcmFuZG9tQnl0ZXMgfSBmcm9tICcuL3JhbmRvbS5qcyc7XG4vKipcbiAqIEdlbmVyYXRlIGEgdmVyc2lvbiA0IChyYW5kb20pIHV1aWRcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS91dWlkanMvdXVpZC9ibG9iL21haW4vc3JjL3Y0LmpzI0w1XG4gKiBAcmV0dXJucyAtIEEgdmVyc2lvbiA0IHV1aWQgb2YgdGhlIGZvcm0geHh4eHh4eHgteHh4eC00eHh4LXh4eHgteHh4eHh4eHh4eHh4XG4gKiBAZXhhbXBsZVxuICogYGBgdHNcbiAqIGNvbnNvbGUubG9nKHdlYjMudXRpbHMudXVpZFY0KCkpO1xuICogPiBcIjFiOWQ2YmNkLWJiZmQtNGIyZC05YjVkLWFiOGRmYmJkNGJlZFwiXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGNvbnN0IHV1aWRWNCA9ICgpID0+IHtcbiAgICBjb25zdCBieXRlcyA9IHJhbmRvbUJ5dGVzKDE2KTtcbiAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vZXRoZXJzLWlvL2V0aGVycy5qcy9ibG9iL2NlOGYxZTQwMTVjMGYyN2JmMTc4MjM4NzcwYjEzMjUxMzZlMzM1MWEvcGFja2FnZXMvanNvbi13YWxsZXRzL3NyYy50cy91dGlscy50cyNMNTRcbiAgICAvLyBTZWN0aW9uOiA0LjEuMzpcbiAgICAvLyAtIHRpbWVfaGlfYW5kX3ZlcnNpb25bMTI6MTZdID0gMGIwMTAwXG4gICAgLyogZXNsaW50LWRpc2FibGUtbmV4dC1saW5lICovXG4gICAgYnl0ZXNbNl0gPSAoYnl0ZXNbNl0gJiAweDBmKSB8IDB4NDA7XG4gICAgLy8gU2VjdGlvbiA0LjRcbiAgICAvLyAtIGNsb2NrX3NlcV9oaV9hbmRfcmVzZXJ2ZWRbNl0gPSAwYjBcbiAgICAvLyAtIGNsb2NrX3NlcV9oaV9hbmRfcmVzZXJ2ZWRbN10gPSAwYjFcbiAgICAvKiBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgKi9cbiAgICBieXRlc1s4XSA9IChieXRlc1s4XSAmIDB4M2YpIHwgMHg4MDtcbiAgICBjb25zdCBoZXhTdHJpbmcgPSBieXRlc1RvSGV4KGJ5dGVzKTtcbiAgICByZXR1cm4gW1xuICAgICAgICBoZXhTdHJpbmcuc3Vic3RyaW5nKDIsIDEwKSxcbiAgICAgICAgaGV4U3RyaW5nLnN1YnN0cmluZygxMCwgMTQpLFxuICAgICAgICBoZXhTdHJpbmcuc3Vic3RyaW5nKDE0LCAxOCksXG4gICAgICAgIGhleFN0cmluZy5zdWJzdHJpbmcoMTgsIDIyKSxcbiAgICAgICAgaGV4U3RyaW5nLnN1YnN0cmluZygyMiwgMzQpLFxuICAgIF0uam9pbignLScpO1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXV1aWQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-utils/lib/esm/uuid.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-utils/lib/esm/validation.js":
/*!*******************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/validation.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkAddressCheckSum: () => (/* binding */ checkAddressCheckSum),\n/* harmony export */   compareBlockNumbers: () => (/* binding */ compareBlockNumbers),\n/* harmony export */   isAddress: () => (/* binding */ isAddress),\n/* harmony export */   isBloom: () => (/* binding */ isBloom),\n/* harmony export */   isContractAddressInBloom: () => (/* binding */ isContractAddressInBloom),\n/* harmony export */   isContractInitOptions: () => (/* binding */ isContractInitOptions),\n/* harmony export */   isHex: () => (/* binding */ isHex),\n/* harmony export */   isHexStrict: () => (/* binding */ isHexStrict),\n/* harmony export */   isInBloom: () => (/* binding */ isInBloom),\n/* harmony export */   isNullish: () => (/* binding */ isNullish),\n/* harmony export */   isTopic: () => (/* binding */ isTopic),\n/* harmony export */   isTopicInBloom: () => (/* binding */ isTopicInBloom),\n/* harmony export */   isUserEthereumAddressInBloom: () => (/* binding */ isUserEthereumAddressInBloom)\n/* harmony export */ });\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-types */ \"(ssr)/./node_modules/web3-types/lib/esm/index.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @module Utils\n */\n\n\n\n/**\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */\nconst isHexStrict = web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict;\n/**\n * returns true if input is a hexstring, number or bigint\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */\nconst isHex = web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHex;\n/**\n * Checks the checksum of a given address. Will also return false on non-checksum addresses.\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */\nconst checkAddressCheckSum = web3_validator__WEBPACK_IMPORTED_MODULE_1__.checkAddressCheckSum;\n/**\n * Checks if a given string is a valid Ethereum address. It will also check the checksum, if the address has upper and lowercase letters.\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */\nconst isAddress = web3_validator__WEBPACK_IMPORTED_MODULE_1__.isAddress;\n/**\n * Returns true if the bloom is a valid bloom\n * https://github.com/joshstevens19/ethereum-bloom-filters/blob/fbeb47b70b46243c3963fe1c2988d7461ef17236/src/index.ts#L7\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */\nconst isBloom = web3_validator__WEBPACK_IMPORTED_MODULE_1__.isBloom;\n/**\n * Returns true if the value is part of the given bloom\n * note: false positives are possible.\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */\nconst isInBloom = web3_validator__WEBPACK_IMPORTED_MODULE_1__.isInBloom;\n/**\n * Returns true if the ethereum users address is part of the given bloom note: false positives are possible.\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */\nconst isUserEthereumAddressInBloom = web3_validator__WEBPACK_IMPORTED_MODULE_1__.isUserEthereumAddressInBloom;\n/**\n * Returns true if the contract address is part of the given bloom.\n * note: false positives are possible.\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */\nconst isContractAddressInBloom = web3_validator__WEBPACK_IMPORTED_MODULE_1__.isContractAddressInBloom;\n/**\n * Checks if its a valid topic\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */\nconst isTopic = web3_validator__WEBPACK_IMPORTED_MODULE_1__.isTopic;\n/**\n * Returns true if the topic is part of the given bloom.\n * note: false positives are possible.\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */\nconst isTopicInBloom = web3_validator__WEBPACK_IMPORTED_MODULE_1__.isTopicInBloom;\n/**\n * Compares between block A and block B\n * @param blockA - Block number or string\n * @param blockB - Block number or string\n *\n * @returns - Returns -1 if a \\< b, returns 1 if a \\> b and returns 0 if a == b\n *\n * @example\n * ```ts\n * console.log(web3.utils.compareBlockNumbers('latest', 'pending'));\n * > -1\n *\n * console.log(web3.utils.compareBlockNumbers(12, 11));\n * > 1\n * ```\n */\nconst compareBlockNumbers = (blockA, blockB) => {\n    const isABlockTag = typeof blockA === 'string' && (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isBlockTag)(blockA);\n    const isBBlockTag = typeof blockB === 'string' && (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isBlockTag)(blockB);\n    if (blockA === blockB ||\n        ((blockA === 'earliest' || blockA === 0) && (blockB === 'earliest' || blockB === 0)) // only exception compare blocktag with number\n    ) {\n        return 0;\n    }\n    if (blockA === 'earliest') {\n        return -1;\n    }\n    if (blockB === 'earliest') {\n        return 1;\n    }\n    if (isABlockTag && isBBlockTag) {\n        // Increasing order:  earliest, finalized , safe, latest, pending\n        const tagsOrder = {\n            [web3_types__WEBPACK_IMPORTED_MODULE_2__.BlockTags.EARLIEST]: 1,\n            [web3_types__WEBPACK_IMPORTED_MODULE_2__.BlockTags.FINALIZED]: 2,\n            [web3_types__WEBPACK_IMPORTED_MODULE_2__.BlockTags.SAFE]: 3,\n            [web3_types__WEBPACK_IMPORTED_MODULE_2__.BlockTags.LATEST]: 4,\n            [web3_types__WEBPACK_IMPORTED_MODULE_2__.BlockTags.PENDING]: 5,\n        };\n        if (tagsOrder[blockA] < tagsOrder[blockB]) {\n            return -1;\n        }\n        return 1;\n    }\n    if ((isABlockTag && !isBBlockTag) || (!isABlockTag && isBBlockTag)) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.InvalidBlockError('Cannot compare blocktag with provided non-blocktag input.');\n    }\n    const bigIntA = BigInt(blockA);\n    const bigIntB = BigInt(blockB);\n    if (bigIntA < bigIntB) {\n        return -1;\n    }\n    if (bigIntA === bigIntB) {\n        return 0;\n    }\n    return 1;\n};\nconst isContractInitOptions = (options) => typeof options === 'object' &&\n    !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(options) &&\n    Object.keys(options).length !== 0 &&\n    [\n        'input',\n        'data',\n        'from',\n        'gas',\n        'gasPrice',\n        'gasLimit',\n        'address',\n        'jsonInterface',\n        'syncWithContext',\n        'dataInputFill',\n    ].some(key => key in options);\nconst isNullish = web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish;\n//# sourceMappingURL=validation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-utils/lib/esm/validation.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-utils/lib/esm/web3_deferred_promise.js":
/*!******************************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/web3_deferred_promise.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Web3DeferredPromise: () => (/* binding */ Web3DeferredPromise)\n/* harmony export */ });\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar _a;\n\n/**\n * The class is a simple implementation of a deferred promise with optional timeout functionality,\n * which can be useful when dealing with asynchronous tasks.\n *\n */\nclass Web3DeferredPromise {\n    /**\n     *\n     * @param timeout - (optional) The timeout in milliseconds.\n     * @param eagerStart - (optional) If true, the timer starts as soon as the promise is created.\n     * @param timeoutMessage - (optional) The message to include in the timeout erro that is thrown when the promise times out.\n     */\n    constructor({ timeout, eagerStart, timeoutMessage, } = {\n        timeout: 0,\n        eagerStart: false,\n        timeoutMessage: 'DeferredPromise timed out',\n    }) {\n        // public tag to treat object as promise by different libs\n        // eslint-disable-next-line @typescript-eslint/prefer-as-const\n        this[_a] = 'Promise';\n        this._state = 'pending';\n        this._promise = new Promise((resolve, reject) => {\n            this._resolve = resolve;\n            this._reject = reject;\n        });\n        this._timeoutMessage = timeoutMessage;\n        this._timeoutInterval = timeout;\n        if (eagerStart) {\n            this.startTimer();\n        }\n    }\n    /**\n     * Returns the current state of the promise.\n     * @returns 'pending' | 'fulfilled' | 'rejected'\n     */\n    get state() {\n        return this._state;\n    }\n    /**\n     *\n     * @param onfulfilled - (optional) The callback to execute when the promise is fulfilled.\n     * @param onrejected  - (optional) The callback to execute when the promise is rejected.\n     * @returns\n     */\n    then(onfulfilled, onrejected) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._promise.then(onfulfilled, onrejected);\n        });\n    }\n    /**\n     *\n     * @param onrejected - (optional) The callback to execute when the promise is rejected.\n     * @returns\n     */\n    catch(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    onrejected) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._promise.catch(onrejected);\n        });\n    }\n    /**\n     *\n     * @param onfinally - (optional) The callback to execute when the promise is settled (fulfilled or rejected).\n     * @returns\n     */\n    finally(onfinally) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._promise.finally(onfinally);\n        });\n    }\n    /**\n     * Resolves the current promise.\n     * @param value - The value to resolve the promise with.\n     */\n    resolve(value) {\n        this._resolve(value);\n        this._state = 'fulfilled';\n        this._clearTimeout();\n    }\n    /**\n     * Rejects the current promise.\n     * @param reason - The reason to reject the promise with.\n     */\n    reject(reason) {\n        this._reject(reason);\n        this._state = 'rejected';\n        this._clearTimeout();\n    }\n    /**\n     * Starts the timeout timer for the promise.\n     */\n    startTimer() {\n        if (this._timeoutInterval && this._timeoutInterval > 0) {\n            this._timeoutId = setTimeout(this._checkTimeout.bind(this), this._timeoutInterval);\n        }\n    }\n    _checkTimeout() {\n        if (this._state === 'pending' && this._timeoutId) {\n            this.reject(new web3_errors__WEBPACK_IMPORTED_MODULE_0__.OperationTimeoutError(this._timeoutMessage));\n        }\n    }\n    _clearTimeout() {\n        if (this._timeoutId) {\n            clearTimeout(this._timeoutId);\n        }\n    }\n}\n_a = Symbol.toStringTag;\n//# sourceMappingURL=web3_deferred_promise.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-utils/lib/esm/web3_deferred_promise.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-utils/lib/esm/web3_eip1193_provider.js":
/*!******************************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/web3_eip1193_provider.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Eip1193Provider: () => (/* binding */ Eip1193Provider)\n/* harmony export */ });\n/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-types */ \"(ssr)/./node_modules/web3-types/lib/esm/index.js\");\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! eventemitter3 */ \"(ssr)/./node_modules/eventemitter3/index.mjs\");\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var _json_rpc_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./json_rpc.js */ \"(ssr)/./node_modules/web3-utils/lib/esm/json_rpc.js\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\n\n\n/**\n * This is an abstract class, which extends {@link Web3BaseProvider} class. This class is used to implement a provider that adheres to the EIP-1193 standard for Ethereum providers.\n */\nclass Eip1193Provider extends web3_types__WEBPACK_IMPORTED_MODULE_0__.Web3BaseProvider {\n    constructor() {\n        super(...arguments);\n        this._eventEmitter = new eventemitter3__WEBPACK_IMPORTED_MODULE_1__.EventEmitter();\n        this._chainId = '';\n        this._accounts = [];\n    }\n    _getChainId() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            const data = yield this.request((0,_json_rpc_js__WEBPACK_IMPORTED_MODULE_3__.toPayload)({\n                method: 'eth_chainId',\n                params: [],\n            }));\n            return (_a = data === null || data === void 0 ? void 0 : data.result) !== null && _a !== void 0 ? _a : '';\n        });\n    }\n    _getAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            const data = yield this.request((0,_json_rpc_js__WEBPACK_IMPORTED_MODULE_3__.toPayload)({\n                method: 'eth_accounts',\n                params: [],\n            }));\n            return (_a = data === null || data === void 0 ? void 0 : data.result) !== null && _a !== void 0 ? _a : [];\n        });\n    }\n    _onConnect() {\n        Promise.all([\n            this._getChainId()\n                .then(chainId => {\n                if (chainId !== this._chainId) {\n                    this._chainId = chainId;\n                    this._eventEmitter.emit('chainChanged', this._chainId);\n                }\n            })\n                .catch(err => {\n                // todo: add error handler\n                console.error(err);\n            }),\n            this._getAccounts()\n                .then(accounts => {\n                if (!(this._accounts.length === accounts.length &&\n                    accounts.every(v => accounts.includes(v)))) {\n                    this._accounts = accounts;\n                    this._onAccountsChanged();\n                }\n            })\n                .catch(err => {\n                // todo: add error handler\n                // eslint-disable-next-line no-console\n                console.error(err);\n            }),\n        ])\n            .then(() => this._eventEmitter.emit('connect', {\n            chainId: this._chainId,\n        }))\n            .catch(err => {\n            // todo: add error handler\n            // eslint-disable-next-line no-console\n            console.error(err);\n        });\n    }\n    // todo this must be ProvideRpcError with a message too\n    _onDisconnect(code, data) {\n        this._eventEmitter.emit('disconnect', new web3_errors__WEBPACK_IMPORTED_MODULE_2__.EIP1193ProviderRpcError(code, data));\n    }\n    _onAccountsChanged() {\n        // get chainId and safe to local\n        this._eventEmitter.emit('accountsChanged', this._accounts);\n    }\n}\n//# sourceMappingURL=web3_eip1193_provider.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy11dGlscy9saWIvZXNtL3dlYjNfZWlwMTE5M19wcm92aWRlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBLGlCQUFpQixTQUFJLElBQUksU0FBSTtBQUM3Qiw0QkFBNEIsK0RBQStELGlCQUFpQjtBQUM1RztBQUNBLG9DQUFvQyxNQUFNLCtCQUErQixZQUFZO0FBQ3JGLG1DQUFtQyxNQUFNLG1DQUFtQyxZQUFZO0FBQ3hGLGdDQUFnQztBQUNoQztBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSwwQkFBMEI7QUFDMUI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDK0M7QUFDRjtBQUNTO0FBQ1o7QUFDMUM7QUFDQSw2Q0FBNkMsd0JBQXdCO0FBQ3JFO0FBQ08sOEJBQThCLHdEQUFnQjtBQUNyRDtBQUNBO0FBQ0EsaUNBQWlDLHVEQUFZO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRDQUE0Qyx1REFBUztBQUNyRDtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNENBQTRDLHVEQUFTO0FBQ3JEO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0Esa0RBQWtELGdFQUF1QjtBQUN6RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL21vcnBoLXBheS1zZGsvLi9ub2RlX21vZHVsZXMvd2ViMy11dGlscy9saWIvZXNtL3dlYjNfZWlwMTE5M19wcm92aWRlci5qcz80YTRjIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBfX2F3YWl0ZXIgPSAodGhpcyAmJiB0aGlzLl9fYXdhaXRlcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikge1xuICAgIGZ1bmN0aW9uIGFkb3B0KHZhbHVlKSB7IHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFAgPyB2YWx1ZSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUodmFsdWUpOyB9KTsgfVxuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICBmdW5jdGlvbiBmdWxmaWxsZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IGFkb3B0KHJlc3VsdC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxuICAgICAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cyB8fCBbXSkpLm5leHQoKSk7XG4gICAgfSk7XG59O1xuLypcblRoaXMgZmlsZSBpcyBwYXJ0IG9mIHdlYjMuanMuXG5cbndlYjMuanMgaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG50aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cblxud2ViMy5qcyBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2Zcbk1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbkdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuXG5Zb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbmFsb25nIHdpdGggd2ViMy5qcy4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiovXG5pbXBvcnQgeyBXZWIzQmFzZVByb3ZpZGVyLCB9IGZyb20gJ3dlYjMtdHlwZXMnO1xuaW1wb3J0IHsgRXZlbnRFbWl0dGVyIH0gZnJvbSAnZXZlbnRlbWl0dGVyMyc7XG5pbXBvcnQgeyBFSVAxMTkzUHJvdmlkZXJScGNFcnJvciB9IGZyb20gJ3dlYjMtZXJyb3JzJztcbmltcG9ydCB7IHRvUGF5bG9hZCB9IGZyb20gJy4vanNvbl9ycGMuanMnO1xuLyoqXG4gKiBUaGlzIGlzIGFuIGFic3RyYWN0IGNsYXNzLCB3aGljaCBleHRlbmRzIHtAbGluayBXZWIzQmFzZVByb3ZpZGVyfSBjbGFzcy4gVGhpcyBjbGFzcyBpcyB1c2VkIHRvIGltcGxlbWVudCBhIHByb3ZpZGVyIHRoYXQgYWRoZXJlcyB0byB0aGUgRUlQLTExOTMgc3RhbmRhcmQgZm9yIEV0aGVyZXVtIHByb3ZpZGVycy5cbiAqL1xuZXhwb3J0IGNsYXNzIEVpcDExOTNQcm92aWRlciBleHRlbmRzIFdlYjNCYXNlUHJvdmlkZXIge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLl9ldmVudEVtaXR0ZXIgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gICAgICAgIHRoaXMuX2NoYWluSWQgPSAnJztcbiAgICAgICAgdGhpcy5fYWNjb3VudHMgPSBbXTtcbiAgICB9XG4gICAgX2dldENoYWluSWQoKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICB2YXIgX2E7XG4gICAgICAgICAgICBjb25zdCBkYXRhID0geWllbGQgdGhpcy5yZXF1ZXN0KHRvUGF5bG9hZCh7XG4gICAgICAgICAgICAgICAgbWV0aG9kOiAnZXRoX2NoYWluSWQnLFxuICAgICAgICAgICAgICAgIHBhcmFtczogW10sXG4gICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICByZXR1cm4gKF9hID0gZGF0YSA9PT0gbnVsbCB8fCBkYXRhID09PSB2b2lkIDAgPyB2b2lkIDAgOiBkYXRhLnJlc3VsdCkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogJyc7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBfZ2V0QWNjb3VudHMoKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICB2YXIgX2E7XG4gICAgICAgICAgICBjb25zdCBkYXRhID0geWllbGQgdGhpcy5yZXF1ZXN0KHRvUGF5bG9hZCh7XG4gICAgICAgICAgICAgICAgbWV0aG9kOiAnZXRoX2FjY291bnRzJyxcbiAgICAgICAgICAgICAgICBwYXJhbXM6IFtdLFxuICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgcmV0dXJuIChfYSA9IGRhdGEgPT09IG51bGwgfHwgZGF0YSA9PT0gdm9pZCAwID8gdm9pZCAwIDogZGF0YS5yZXN1bHQpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IFtdO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgX29uQ29ubmVjdCgpIHtcbiAgICAgICAgUHJvbWlzZS5hbGwoW1xuICAgICAgICAgICAgdGhpcy5fZ2V0Q2hhaW5JZCgpXG4gICAgICAgICAgICAgICAgLnRoZW4oY2hhaW5JZCA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKGNoYWluSWQgIT09IHRoaXMuX2NoYWluSWQpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fY2hhaW5JZCA9IGNoYWluSWQ7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2V2ZW50RW1pdHRlci5lbWl0KCdjaGFpbkNoYW5nZWQnLCB0aGlzLl9jaGFpbklkKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIC5jYXRjaChlcnIgPT4ge1xuICAgICAgICAgICAgICAgIC8vIHRvZG86IGFkZCBlcnJvciBoYW5kbGVyXG4gICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihlcnIpO1xuICAgICAgICAgICAgfSksXG4gICAgICAgICAgICB0aGlzLl9nZXRBY2NvdW50cygpXG4gICAgICAgICAgICAgICAgLnRoZW4oYWNjb3VudHMgPT4ge1xuICAgICAgICAgICAgICAgIGlmICghKHRoaXMuX2FjY291bnRzLmxlbmd0aCA9PT0gYWNjb3VudHMubGVuZ3RoICYmXG4gICAgICAgICAgICAgICAgICAgIGFjY291bnRzLmV2ZXJ5KHYgPT4gYWNjb3VudHMuaW5jbHVkZXModikpKSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9hY2NvdW50cyA9IGFjY291bnRzO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9vbkFjY291bnRzQ2hhbmdlZCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgLmNhdGNoKGVyciA9PiB7XG4gICAgICAgICAgICAgICAgLy8gdG9kbzogYWRkIGVycm9yIGhhbmRsZXJcbiAgICAgICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgICAgICAgICAgIH0pLFxuICAgICAgICBdKVxuICAgICAgICAgICAgLnRoZW4oKCkgPT4gdGhpcy5fZXZlbnRFbWl0dGVyLmVtaXQoJ2Nvbm5lY3QnLCB7XG4gICAgICAgICAgICBjaGFpbklkOiB0aGlzLl9jaGFpbklkLFxuICAgICAgICB9KSlcbiAgICAgICAgICAgIC5jYXRjaChlcnIgPT4ge1xuICAgICAgICAgICAgLy8gdG9kbzogYWRkIGVycm9yIGhhbmRsZXJcbiAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKGVycik7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvLyB0b2RvIHRoaXMgbXVzdCBiZSBQcm92aWRlUnBjRXJyb3Igd2l0aCBhIG1lc3NhZ2UgdG9vXG4gICAgX29uRGlzY29ubmVjdChjb2RlLCBkYXRhKSB7XG4gICAgICAgIHRoaXMuX2V2ZW50RW1pdHRlci5lbWl0KCdkaXNjb25uZWN0JywgbmV3IEVJUDExOTNQcm92aWRlclJwY0Vycm9yKGNvZGUsIGRhdGEpKTtcbiAgICB9XG4gICAgX29uQWNjb3VudHNDaGFuZ2VkKCkge1xuICAgICAgICAvLyBnZXQgY2hhaW5JZCBhbmQgc2FmZSB0byBsb2NhbFxuICAgICAgICB0aGlzLl9ldmVudEVtaXR0ZXIuZW1pdCgnYWNjb3VudHNDaGFuZ2VkJywgdGhpcy5fYWNjb3VudHMpO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXdlYjNfZWlwMTE5M19wcm92aWRlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-utils/lib/esm/web3_eip1193_provider.js\n");

/***/ })

};
;