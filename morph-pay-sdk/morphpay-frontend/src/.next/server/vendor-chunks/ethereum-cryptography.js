"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/ethereum-cryptography";
exports.ids = ["vendor-chunks/ethereum-cryptography"];
exports.modules = {

/***/ "(ssr)/./node_modules/ethereum-cryptography/esm/aes.js":
/*!*******************************************************!*\
  !*** ./node_modules/ethereum-cryptography/esm/aes.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decrypt: () => (/* binding */ decrypt),\n/* harmony export */   encrypt: () => (/* binding */ encrypt)\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @noble/hashes/crypto */ \"(ssr)/./node_modules/@noble/hashes/esm/cryptoNode.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/ethereum-cryptography/esm/utils.js\");\n\n\nconst crypto = { web: _noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_1__.crypto };\nfunction validateOpt(key, iv, mode) {\n    if (!mode.startsWith(\"aes-\")) {\n        throw new Error(`AES submodule doesn't support mode ${mode}`);\n    }\n    if (iv.length !== 16) {\n        throw new Error(\"AES: wrong IV length\");\n    }\n    if ((mode.startsWith(\"aes-128\") && key.length !== 16) ||\n        (mode.startsWith(\"aes-256\") && key.length !== 32)) {\n        throw new Error(\"AES: wrong key length\");\n    }\n}\nasync function getBrowserKey(mode, key, iv) {\n    if (!crypto.web) {\n        throw new Error(\"Browser crypto not available.\");\n    }\n    let keyMode;\n    if ([\"aes-128-cbc\", \"aes-256-cbc\"].includes(mode)) {\n        keyMode = \"cbc\";\n    }\n    if ([\"aes-128-ctr\", \"aes-256-ctr\"].includes(mode)) {\n        keyMode = \"ctr\";\n    }\n    if (!keyMode) {\n        throw new Error(\"AES: unsupported mode\");\n    }\n    const wKey = await crypto.web.subtle.importKey(\"raw\", key, { name: `AES-${keyMode.toUpperCase()}`, length: key.length * 8 }, true, [\"encrypt\", \"decrypt\"]);\n    // node.js uses whole 128 bit as a counter, without nonce, instead of 64 bit\n    // recommended by NIST SP800-38A\n    return [wKey, { name: `aes-${keyMode}`, iv, counter: iv, length: 128 }];\n}\nasync function encrypt(msg, key, iv, mode = \"aes-128-ctr\", pkcs7PaddingEnabled = true) {\n    validateOpt(key, iv, mode);\n    if (crypto.web) {\n        const [wKey, wOpt] = await getBrowserKey(mode, key, iv);\n        const cipher = await crypto.web.subtle.encrypt(wOpt, wKey, msg);\n        // Remove PKCS7 padding on cbc mode by stripping end of message\n        let res = new Uint8Array(cipher);\n        if (!pkcs7PaddingEnabled && wOpt.name === \"aes-cbc\" && !(msg.length % 16)) {\n            res = res.slice(0, -16);\n        }\n        return res;\n    }\n    else if (crypto.node) {\n        const cipher = crypto.node.createCipheriv(mode, key, iv);\n        cipher.setAutoPadding(pkcs7PaddingEnabled);\n        return (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.concatBytes)(cipher.update(msg), cipher.final());\n    }\n    else {\n        throw new Error(\"The environment doesn't have AES module\");\n    }\n}\nasync function getPadding(cypherText, key, iv, mode) {\n    const lastBlock = cypherText.slice(-16);\n    for (let i = 0; i < 16; i++) {\n        // Undo xor of iv and fill with lastBlock ^ padding (16)\n        lastBlock[i] ^= iv[i] ^ 16;\n    }\n    const res = await encrypt(lastBlock, key, iv, mode);\n    return res.slice(0, 16);\n}\nasync function decrypt(cypherText, key, iv, mode = \"aes-128-ctr\", pkcs7PaddingEnabled = true) {\n    validateOpt(key, iv, mode);\n    if (crypto.web) {\n        const [wKey, wOpt] = await getBrowserKey(mode, key, iv);\n        // Add empty padding so Chrome will correctly decrypt message\n        if (!pkcs7PaddingEnabled && wOpt.name === \"aes-cbc\") {\n            const padding = await getPadding(cypherText, key, iv, mode);\n            cypherText = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.concatBytes)(cypherText, padding);\n        }\n        const msg = await crypto.web.subtle.decrypt(wOpt, wKey, cypherText);\n        const msgBytes = new Uint8Array(msg);\n        // Safari always ignores padding (if no padding -> broken message)\n        if (wOpt.name === \"aes-cbc\") {\n            const encrypted = await encrypt(msgBytes, key, iv, mode);\n            if (!(0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.equalsBytes)(encrypted, cypherText)) {\n                throw new Error(\"AES: wrong padding\");\n            }\n        }\n        return msgBytes;\n    }\n    else if (crypto.node) {\n        const decipher = crypto.node.createDecipheriv(mode, key, iv);\n        decipher.setAutoPadding(pkcs7PaddingEnabled);\n        return (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.concatBytes)(decipher.update(cypherText), decipher.final());\n    }\n    else {\n        throw new Error(\"The environment doesn't have AES module\");\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvZXRoZXJldW0tY3J5cHRvZ3JhcGh5L2VzbS9hZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFvRDtBQUNFO0FBQ3RELGlCQUFpQixLQUFLLHdEQUFFO0FBQ3hCO0FBQ0E7QUFDQSw4REFBOEQsS0FBSztBQUNuRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUVBQWlFLGFBQWEsc0JBQXNCLDJCQUEyQjtBQUMvSDtBQUNBO0FBQ0Esb0JBQW9CLGFBQWEsUUFBUSxpQ0FBaUM7QUFDMUU7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLHNEQUFXO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLFFBQVE7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsc0RBQVc7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLHNEQUFXO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLHNEQUFXO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tb3JwaC1wYXktc2RrLy4vbm9kZV9tb2R1bGVzL2V0aGVyZXVtLWNyeXB0b2dyYXBoeS9lc20vYWVzLmpzPzI0OTkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3J5cHRvIGFzIGNyIH0gZnJvbSBcIkBub2JsZS9oYXNoZXMvY3J5cHRvXCI7XG5pbXBvcnQgeyBjb25jYXRCeXRlcywgZXF1YWxzQnl0ZXMgfSBmcm9tIFwiLi91dGlscy5qc1wiO1xuY29uc3QgY3J5cHRvID0geyB3ZWI6IGNyIH07XG5mdW5jdGlvbiB2YWxpZGF0ZU9wdChrZXksIGl2LCBtb2RlKSB7XG4gICAgaWYgKCFtb2RlLnN0YXJ0c1dpdGgoXCJhZXMtXCIpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgQUVTIHN1Ym1vZHVsZSBkb2Vzbid0IHN1cHBvcnQgbW9kZSAke21vZGV9YCk7XG4gICAgfVxuICAgIGlmIChpdi5sZW5ndGggIT09IDE2KSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkFFUzogd3JvbmcgSVYgbGVuZ3RoXCIpO1xuICAgIH1cbiAgICBpZiAoKG1vZGUuc3RhcnRzV2l0aChcImFlcy0xMjhcIikgJiYga2V5Lmxlbmd0aCAhPT0gMTYpIHx8XG4gICAgICAgIChtb2RlLnN0YXJ0c1dpdGgoXCJhZXMtMjU2XCIpICYmIGtleS5sZW5ndGggIT09IDMyKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJBRVM6IHdyb25nIGtleSBsZW5ndGhcIik7XG4gICAgfVxufVxuYXN5bmMgZnVuY3Rpb24gZ2V0QnJvd3NlcktleShtb2RlLCBrZXksIGl2KSB7XG4gICAgaWYgKCFjcnlwdG8ud2ViKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkJyb3dzZXIgY3J5cHRvIG5vdCBhdmFpbGFibGUuXCIpO1xuICAgIH1cbiAgICBsZXQga2V5TW9kZTtcbiAgICBpZiAoW1wiYWVzLTEyOC1jYmNcIiwgXCJhZXMtMjU2LWNiY1wiXS5pbmNsdWRlcyhtb2RlKSkge1xuICAgICAgICBrZXlNb2RlID0gXCJjYmNcIjtcbiAgICB9XG4gICAgaWYgKFtcImFlcy0xMjgtY3RyXCIsIFwiYWVzLTI1Ni1jdHJcIl0uaW5jbHVkZXMobW9kZSkpIHtcbiAgICAgICAga2V5TW9kZSA9IFwiY3RyXCI7XG4gICAgfVxuICAgIGlmICgha2V5TW9kZSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJBRVM6IHVuc3VwcG9ydGVkIG1vZGVcIik7XG4gICAgfVxuICAgIGNvbnN0IHdLZXkgPSBhd2FpdCBjcnlwdG8ud2ViLnN1YnRsZS5pbXBvcnRLZXkoXCJyYXdcIiwga2V5LCB7IG5hbWU6IGBBRVMtJHtrZXlNb2RlLnRvVXBwZXJDYXNlKCl9YCwgbGVuZ3RoOiBrZXkubGVuZ3RoICogOCB9LCB0cnVlLCBbXCJlbmNyeXB0XCIsIFwiZGVjcnlwdFwiXSk7XG4gICAgLy8gbm9kZS5qcyB1c2VzIHdob2xlIDEyOCBiaXQgYXMgYSBjb3VudGVyLCB3aXRob3V0IG5vbmNlLCBpbnN0ZWFkIG9mIDY0IGJpdFxuICAgIC8vIHJlY29tbWVuZGVkIGJ5IE5JU1QgU1A4MDAtMzhBXG4gICAgcmV0dXJuIFt3S2V5LCB7IG5hbWU6IGBhZXMtJHtrZXlNb2RlfWAsIGl2LCBjb3VudGVyOiBpdiwgbGVuZ3RoOiAxMjggfV07XG59XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZW5jcnlwdChtc2csIGtleSwgaXYsIG1vZGUgPSBcImFlcy0xMjgtY3RyXCIsIHBrY3M3UGFkZGluZ0VuYWJsZWQgPSB0cnVlKSB7XG4gICAgdmFsaWRhdGVPcHQoa2V5LCBpdiwgbW9kZSk7XG4gICAgaWYgKGNyeXB0by53ZWIpIHtcbiAgICAgICAgY29uc3QgW3dLZXksIHdPcHRdID0gYXdhaXQgZ2V0QnJvd3NlcktleShtb2RlLCBrZXksIGl2KTtcbiAgICAgICAgY29uc3QgY2lwaGVyID0gYXdhaXQgY3J5cHRvLndlYi5zdWJ0bGUuZW5jcnlwdCh3T3B0LCB3S2V5LCBtc2cpO1xuICAgICAgICAvLyBSZW1vdmUgUEtDUzcgcGFkZGluZyBvbiBjYmMgbW9kZSBieSBzdHJpcHBpbmcgZW5kIG9mIG1lc3NhZ2VcbiAgICAgICAgbGV0IHJlcyA9IG5ldyBVaW50OEFycmF5KGNpcGhlcik7XG4gICAgICAgIGlmICghcGtjczdQYWRkaW5nRW5hYmxlZCAmJiB3T3B0Lm5hbWUgPT09IFwiYWVzLWNiY1wiICYmICEobXNnLmxlbmd0aCAlIDE2KSkge1xuICAgICAgICAgICAgcmVzID0gcmVzLnNsaWNlKDAsIC0xNik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlcztcbiAgICB9XG4gICAgZWxzZSBpZiAoY3J5cHRvLm5vZGUpIHtcbiAgICAgICAgY29uc3QgY2lwaGVyID0gY3J5cHRvLm5vZGUuY3JlYXRlQ2lwaGVyaXYobW9kZSwga2V5LCBpdik7XG4gICAgICAgIGNpcGhlci5zZXRBdXRvUGFkZGluZyhwa2NzN1BhZGRpbmdFbmFibGVkKTtcbiAgICAgICAgcmV0dXJuIGNvbmNhdEJ5dGVzKGNpcGhlci51cGRhdGUobXNnKSwgY2lwaGVyLmZpbmFsKCkpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVGhlIGVudmlyb25tZW50IGRvZXNuJ3QgaGF2ZSBBRVMgbW9kdWxlXCIpO1xuICAgIH1cbn1cbmFzeW5jIGZ1bmN0aW9uIGdldFBhZGRpbmcoY3lwaGVyVGV4dCwga2V5LCBpdiwgbW9kZSkge1xuICAgIGNvbnN0IGxhc3RCbG9jayA9IGN5cGhlclRleHQuc2xpY2UoLTE2KTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IDE2OyBpKyspIHtcbiAgICAgICAgLy8gVW5kbyB4b3Igb2YgaXYgYW5kIGZpbGwgd2l0aCBsYXN0QmxvY2sgXiBwYWRkaW5nICgxNilcbiAgICAgICAgbGFzdEJsb2NrW2ldIF49IGl2W2ldIF4gMTY7XG4gICAgfVxuICAgIGNvbnN0IHJlcyA9IGF3YWl0IGVuY3J5cHQobGFzdEJsb2NrLCBrZXksIGl2LCBtb2RlKTtcbiAgICByZXR1cm4gcmVzLnNsaWNlKDAsIDE2KTtcbn1cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBkZWNyeXB0KGN5cGhlclRleHQsIGtleSwgaXYsIG1vZGUgPSBcImFlcy0xMjgtY3RyXCIsIHBrY3M3UGFkZGluZ0VuYWJsZWQgPSB0cnVlKSB7XG4gICAgdmFsaWRhdGVPcHQoa2V5LCBpdiwgbW9kZSk7XG4gICAgaWYgKGNyeXB0by53ZWIpIHtcbiAgICAgICAgY29uc3QgW3dLZXksIHdPcHRdID0gYXdhaXQgZ2V0QnJvd3NlcktleShtb2RlLCBrZXksIGl2KTtcbiAgICAgICAgLy8gQWRkIGVtcHR5IHBhZGRpbmcgc28gQ2hyb21lIHdpbGwgY29ycmVjdGx5IGRlY3J5cHQgbWVzc2FnZVxuICAgICAgICBpZiAoIXBrY3M3UGFkZGluZ0VuYWJsZWQgJiYgd09wdC5uYW1lID09PSBcImFlcy1jYmNcIikge1xuICAgICAgICAgICAgY29uc3QgcGFkZGluZyA9IGF3YWl0IGdldFBhZGRpbmcoY3lwaGVyVGV4dCwga2V5LCBpdiwgbW9kZSk7XG4gICAgICAgICAgICBjeXBoZXJUZXh0ID0gY29uY2F0Qnl0ZXMoY3lwaGVyVGV4dCwgcGFkZGluZyk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgbXNnID0gYXdhaXQgY3J5cHRvLndlYi5zdWJ0bGUuZGVjcnlwdCh3T3B0LCB3S2V5LCBjeXBoZXJUZXh0KTtcbiAgICAgICAgY29uc3QgbXNnQnl0ZXMgPSBuZXcgVWludDhBcnJheShtc2cpO1xuICAgICAgICAvLyBTYWZhcmkgYWx3YXlzIGlnbm9yZXMgcGFkZGluZyAoaWYgbm8gcGFkZGluZyAtPiBicm9rZW4gbWVzc2FnZSlcbiAgICAgICAgaWYgKHdPcHQubmFtZSA9PT0gXCJhZXMtY2JjXCIpIHtcbiAgICAgICAgICAgIGNvbnN0IGVuY3J5cHRlZCA9IGF3YWl0IGVuY3J5cHQobXNnQnl0ZXMsIGtleSwgaXYsIG1vZGUpO1xuICAgICAgICAgICAgaWYgKCFlcXVhbHNCeXRlcyhlbmNyeXB0ZWQsIGN5cGhlclRleHQpKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQUVTOiB3cm9uZyBwYWRkaW5nXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBtc2dCeXRlcztcbiAgICB9XG4gICAgZWxzZSBpZiAoY3J5cHRvLm5vZGUpIHtcbiAgICAgICAgY29uc3QgZGVjaXBoZXIgPSBjcnlwdG8ubm9kZS5jcmVhdGVEZWNpcGhlcml2KG1vZGUsIGtleSwgaXYpO1xuICAgICAgICBkZWNpcGhlci5zZXRBdXRvUGFkZGluZyhwa2NzN1BhZGRpbmdFbmFibGVkKTtcbiAgICAgICAgcmV0dXJuIGNvbmNhdEJ5dGVzKGRlY2lwaGVyLnVwZGF0ZShjeXBoZXJUZXh0KSwgZGVjaXBoZXIuZmluYWwoKSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJUaGUgZW52aXJvbm1lbnQgZG9lc24ndCBoYXZlIEFFUyBtb2R1bGVcIik7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ethereum-cryptography/esm/aes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ethereum-cryptography/esm/keccak.js":
/*!**********************************************************!*\
  !*** ./node_modules/ethereum-cryptography/esm/keccak.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   keccak224: () => (/* binding */ keccak224),\n/* harmony export */   keccak256: () => (/* binding */ keccak256),\n/* harmony export */   keccak384: () => (/* binding */ keccak384),\n/* harmony export */   keccak512: () => (/* binding */ keccak512)\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @noble/hashes/sha3 */ \"(ssr)/./node_modules/@noble/hashes/esm/sha3.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/ethereum-cryptography/esm/utils.js\");\n\n\nconst keccak224 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.wrapHash)(_noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_1__.keccak_224);\nconst keccak256 = (() => {\n    const k = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.wrapHash)(_noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_1__.keccak_256);\n    k.create = _noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_1__.keccak_256.create;\n    return k;\n})();\nconst keccak384 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.wrapHash)(_noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_1__.keccak_384);\nconst keccak512 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.wrapHash)(_noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_1__.keccak_512);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvZXRoZXJldW0tY3J5cHRvZ3JhcGh5L2VzbS9rZWNjYWsuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQW9GO0FBQzlDO0FBQy9CLGtCQUFrQixtREFBUSxDQUFDLDBEQUFVO0FBQ3JDO0FBQ1AsY0FBYyxtREFBUSxDQUFDLDBEQUFVO0FBQ2pDLGVBQWUsMERBQVU7QUFDekI7QUFDQSxDQUFDO0FBQ00sa0JBQWtCLG1EQUFRLENBQUMsMERBQVU7QUFDckMsa0JBQWtCLG1EQUFRLENBQUMsMERBQVUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tb3JwaC1wYXktc2RrLy4vbm9kZV9tb2R1bGVzL2V0aGVyZXVtLWNyeXB0b2dyYXBoeS9lc20va2VjY2FrLmpzPzgyNjkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsga2VjY2FrXzIyNCwga2VjY2FrXzI1Niwga2VjY2FrXzM4NCwga2VjY2FrXzUxMiB9IGZyb20gXCJAbm9ibGUvaGFzaGVzL3NoYTNcIjtcbmltcG9ydCB7IHdyYXBIYXNoIH0gZnJvbSBcIi4vdXRpbHMuanNcIjtcbmV4cG9ydCBjb25zdCBrZWNjYWsyMjQgPSB3cmFwSGFzaChrZWNjYWtfMjI0KTtcbmV4cG9ydCBjb25zdCBrZWNjYWsyNTYgPSAoKCkgPT4ge1xuICAgIGNvbnN0IGsgPSB3cmFwSGFzaChrZWNjYWtfMjU2KTtcbiAgICBrLmNyZWF0ZSA9IGtlY2Nha18yNTYuY3JlYXRlO1xuICAgIHJldHVybiBrO1xufSkoKTtcbmV4cG9ydCBjb25zdCBrZWNjYWszODQgPSB3cmFwSGFzaChrZWNjYWtfMzg0KTtcbmV4cG9ydCBjb25zdCBrZWNjYWs1MTIgPSB3cmFwSGFzaChrZWNjYWtfNTEyKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ethereum-cryptography/esm/keccak.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ethereum-cryptography/esm/pbkdf2.js":
/*!**********************************************************!*\
  !*** ./node_modules/ethereum-cryptography/esm/pbkdf2.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   pbkdf2: () => (/* binding */ pbkdf2),\n/* harmony export */   pbkdf2Sync: () => (/* binding */ pbkdf2Sync)\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_pbkdf2__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @noble/hashes/pbkdf2 */ \"(ssr)/./node_modules/@noble/hashes/esm/pbkdf2.js\");\n/* harmony import */ var _noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @noble/hashes/sha256 */ \"(ssr)/./node_modules/@noble/hashes/esm/sha256.js\");\n/* harmony import */ var _noble_hashes_sha512__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @noble/hashes/sha512 */ \"(ssr)/./node_modules/@noble/hashes/esm/sha512.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/ethereum-cryptography/esm/utils.js\");\n\n\n\n\nasync function pbkdf2(password, salt, iterations, keylen, digest) {\n    if (![\"sha256\", \"sha512\"].includes(digest)) {\n        throw new Error(\"Only sha256 and sha512 are supported\");\n    }\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.assertBytes)(password);\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.assertBytes)(salt);\n    return (0,_noble_hashes_pbkdf2__WEBPACK_IMPORTED_MODULE_1__.pbkdf2Async)(digest === \"sha256\" ? _noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_2__.sha256 : _noble_hashes_sha512__WEBPACK_IMPORTED_MODULE_3__.sha512, password, salt, {\n        c: iterations,\n        dkLen: keylen\n    });\n}\nfunction pbkdf2Sync(password, salt, iterations, keylen, digest) {\n    if (![\"sha256\", \"sha512\"].includes(digest)) {\n        throw new Error(\"Only sha256 and sha512 are supported\");\n    }\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.assertBytes)(password);\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.assertBytes)(salt);\n    return (0,_noble_hashes_pbkdf2__WEBPACK_IMPORTED_MODULE_1__.pbkdf2)(digest === \"sha256\" ? _noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_2__.sha256 : _noble_hashes_sha512__WEBPACK_IMPORTED_MODULE_3__.sha512, password, salt, {\n        c: iterations,\n        dkLen: keylen\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvZXRoZXJldW0tY3J5cHRvZ3JhcGh5L2VzbS9wYmtkZjIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQXNGO0FBQ3hDO0FBQ0E7QUFDTDtBQUNsQztBQUNQO0FBQ0E7QUFDQTtBQUNBLElBQUksc0RBQVc7QUFDZixJQUFJLHNEQUFXO0FBQ2YsV0FBVyxpRUFBWSx1QkFBdUIsd0RBQU0sR0FBRyx3REFBTTtBQUM3RDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxJQUFJLHNEQUFXO0FBQ2YsSUFBSSxzREFBVztBQUNmLFdBQVcsNERBQU8sdUJBQXVCLHdEQUFNLEdBQUcsd0RBQU07QUFDeEQ7QUFDQTtBQUNBLEtBQUs7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL21vcnBoLXBheS1zZGsvLi9ub2RlX21vZHVsZXMvZXRoZXJldW0tY3J5cHRvZ3JhcGh5L2VzbS9wYmtkZjIuanM/ZTZjYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwYmtkZjIgYXMgX3Bia2RmMiwgcGJrZGYyQXN5bmMgYXMgX3Bia2RmMkFzeW5jIH0gZnJvbSBcIkBub2JsZS9oYXNoZXMvcGJrZGYyXCI7XG5pbXBvcnQgeyBzaGEyNTYgfSBmcm9tIFwiQG5vYmxlL2hhc2hlcy9zaGEyNTZcIjtcbmltcG9ydCB7IHNoYTUxMiB9IGZyb20gXCJAbm9ibGUvaGFzaGVzL3NoYTUxMlwiO1xuaW1wb3J0IHsgYXNzZXJ0Qnl0ZXMgfSBmcm9tIFwiLi91dGlscy5qc1wiO1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHBia2RmMihwYXNzd29yZCwgc2FsdCwgaXRlcmF0aW9ucywga2V5bGVuLCBkaWdlc3QpIHtcbiAgICBpZiAoIVtcInNoYTI1NlwiLCBcInNoYTUxMlwiXS5pbmNsdWRlcyhkaWdlc3QpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIk9ubHkgc2hhMjU2IGFuZCBzaGE1MTIgYXJlIHN1cHBvcnRlZFwiKTtcbiAgICB9XG4gICAgYXNzZXJ0Qnl0ZXMocGFzc3dvcmQpO1xuICAgIGFzc2VydEJ5dGVzKHNhbHQpO1xuICAgIHJldHVybiBfcGJrZGYyQXN5bmMoZGlnZXN0ID09PSBcInNoYTI1NlwiID8gc2hhMjU2IDogc2hhNTEyLCBwYXNzd29yZCwgc2FsdCwge1xuICAgICAgICBjOiBpdGVyYXRpb25zLFxuICAgICAgICBka0xlbjoga2V5bGVuXG4gICAgfSk7XG59XG5leHBvcnQgZnVuY3Rpb24gcGJrZGYyU3luYyhwYXNzd29yZCwgc2FsdCwgaXRlcmF0aW9ucywga2V5bGVuLCBkaWdlc3QpIHtcbiAgICBpZiAoIVtcInNoYTI1NlwiLCBcInNoYTUxMlwiXS5pbmNsdWRlcyhkaWdlc3QpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIk9ubHkgc2hhMjU2IGFuZCBzaGE1MTIgYXJlIHN1cHBvcnRlZFwiKTtcbiAgICB9XG4gICAgYXNzZXJ0Qnl0ZXMocGFzc3dvcmQpO1xuICAgIGFzc2VydEJ5dGVzKHNhbHQpO1xuICAgIHJldHVybiBfcGJrZGYyKGRpZ2VzdCA9PT0gXCJzaGEyNTZcIiA/IHNoYTI1NiA6IHNoYTUxMiwgcGFzc3dvcmQsIHNhbHQsIHtcbiAgICAgICAgYzogaXRlcmF0aW9ucyxcbiAgICAgICAgZGtMZW46IGtleWxlblxuICAgIH0pO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ethereum-cryptography/esm/pbkdf2.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ethereum-cryptography/esm/random.js":
/*!**********************************************************!*\
  !*** ./node_modules/ethereum-cryptography/esm/random.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getRandomBytes: () => (/* binding */ getRandomBytes),\n/* harmony export */   getRandomBytesSync: () => (/* binding */ getRandomBytesSync)\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/hashes/utils */ \"(ssr)/./node_modules/@noble/hashes/esm/utils.js\");\n\nfunction getRandomBytesSync(bytes) {\n    return (0,_noble_hashes_utils__WEBPACK_IMPORTED_MODULE_0__.randomBytes)(bytes);\n}\nasync function getRandomBytes(bytes) {\n    return (0,_noble_hashes_utils__WEBPACK_IMPORTED_MODULE_0__.randomBytes)(bytes);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvZXRoZXJldW0tY3J5cHRvZ3JhcGh5L2VzbS9yYW5kb20uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWtEO0FBQzNDO0FBQ1AsV0FBVyxnRUFBVztBQUN0QjtBQUNPO0FBQ1AsV0FBVyxnRUFBVztBQUN0QiIsInNvdXJjZXMiOlsid2VicGFjazovL21vcnBoLXBheS1zZGsvLi9ub2RlX21vZHVsZXMvZXRoZXJldW0tY3J5cHRvZ3JhcGh5L2VzbS9yYW5kb20uanM/OTczNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByYW5kb21CeXRlcyB9IGZyb20gXCJAbm9ibGUvaGFzaGVzL3V0aWxzXCI7XG5leHBvcnQgZnVuY3Rpb24gZ2V0UmFuZG9tQnl0ZXNTeW5jKGJ5dGVzKSB7XG4gICAgcmV0dXJuIHJhbmRvbUJ5dGVzKGJ5dGVzKTtcbn1cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRSYW5kb21CeXRlcyhieXRlcykge1xuICAgIHJldHVybiByYW5kb21CeXRlcyhieXRlcyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ethereum-cryptography/esm/random.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ethereum-cryptography/esm/scrypt.js":
/*!**********************************************************!*\
  !*** ./node_modules/ethereum-cryptography/esm/scrypt.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   scrypt: () => (/* binding */ scrypt),\n/* harmony export */   scryptSync: () => (/* binding */ scryptSync)\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_scrypt__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @noble/hashes/scrypt */ \"(ssr)/./node_modules/@noble/hashes/esm/scrypt.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/ethereum-cryptography/esm/utils.js\");\n\n\nasync function scrypt(password, salt, n, p, r, dkLen, onProgress) {\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.assertBytes)(password);\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.assertBytes)(salt);\n    return (0,_noble_hashes_scrypt__WEBPACK_IMPORTED_MODULE_1__.scryptAsync)(password, salt, { N: n, r, p, dkLen, onProgress });\n}\nfunction scryptSync(password, salt, n, p, r, dkLen, onProgress) {\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.assertBytes)(password);\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.assertBytes)(salt);\n    return (0,_noble_hashes_scrypt__WEBPACK_IMPORTED_MODULE_1__.scrypt)(password, salt, { N: n, r, p, dkLen, onProgress });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvZXRoZXJldW0tY3J5cHRvZ3JhcGh5L2VzbS9zY3J5cHQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUE4RTtBQUNyQztBQUNsQztBQUNQLElBQUksc0RBQVc7QUFDZixJQUFJLHNEQUFXO0FBQ2YsV0FBVyxpRUFBTSxtQkFBbUIsK0JBQStCO0FBQ25FO0FBQ087QUFDUCxJQUFJLHNEQUFXO0FBQ2YsSUFBSSxzREFBVztBQUNmLFdBQVcsNERBQUssbUJBQW1CLCtCQUErQjtBQUNsRSIsInNvdXJjZXMiOlsid2VicGFjazovL21vcnBoLXBheS1zZGsvLi9ub2RlX21vZHVsZXMvZXRoZXJldW0tY3J5cHRvZ3JhcGh5L2VzbS9zY3J5cHQuanM/N2U5NyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzY3J5cHQgYXMgX3N5bmMsIHNjcnlwdEFzeW5jIGFzIF9hc3luYyB9IGZyb20gXCJAbm9ibGUvaGFzaGVzL3NjcnlwdFwiO1xuaW1wb3J0IHsgYXNzZXJ0Qnl0ZXMgfSBmcm9tIFwiLi91dGlscy5qc1wiO1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHNjcnlwdChwYXNzd29yZCwgc2FsdCwgbiwgcCwgciwgZGtMZW4sIG9uUHJvZ3Jlc3MpIHtcbiAgICBhc3NlcnRCeXRlcyhwYXNzd29yZCk7XG4gICAgYXNzZXJ0Qnl0ZXMoc2FsdCk7XG4gICAgcmV0dXJuIF9hc3luYyhwYXNzd29yZCwgc2FsdCwgeyBOOiBuLCByLCBwLCBka0xlbiwgb25Qcm9ncmVzcyB9KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBzY3J5cHRTeW5jKHBhc3N3b3JkLCBzYWx0LCBuLCBwLCByLCBka0xlbiwgb25Qcm9ncmVzcykge1xuICAgIGFzc2VydEJ5dGVzKHBhc3N3b3JkKTtcbiAgICBhc3NlcnRCeXRlcyhzYWx0KTtcbiAgICByZXR1cm4gX3N5bmMocGFzc3dvcmQsIHNhbHQsIHsgTjogbiwgciwgcCwgZGtMZW4sIG9uUHJvZ3Jlc3MgfSk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ethereum-cryptography/esm/scrypt.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ethereum-cryptography/esm/secp256k1.js":
/*!*************************************************************!*\
  !*** ./node_modules/ethereum-cryptography/esm/secp256k1.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   secp256k1: () => (/* reexport safe */ _noble_curves_secp256k1__WEBPACK_IMPORTED_MODULE_0__.secp256k1)\n/* harmony export */ });\n/* harmony import */ var _noble_curves_secp256k1__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/curves/secp256k1 */ \"(ssr)/./node_modules/@noble/curves/esm/secp256k1.js\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvZXRoZXJldW0tY3J5cHRvZ3JhcGh5L2VzbS9zZWNwMjU2azEuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBb0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tb3JwaC1wYXktc2RrLy4vbm9kZV9tb2R1bGVzL2V0aGVyZXVtLWNyeXB0b2dyYXBoeS9lc20vc2VjcDI1NmsxLmpzPzVlNjAiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgc2VjcDI1NmsxIH0gZnJvbSBcIkBub2JsZS9jdXJ2ZXMvc2VjcDI1NmsxXCI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ethereum-cryptography/esm/secp256k1.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ethereum-cryptography/esm/utils.js":
/*!*********************************************************!*\
  !*** ./node_modules/ethereum-cryptography/esm/utils.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assertBool: () => (/* binding */ assertBool),\n/* harmony export */   assertBytes: () => (/* binding */ assertBytes),\n/* harmony export */   bytesToHex: () => (/* reexport safe */ _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__.bytesToHex),\n/* harmony export */   bytesToUtf8: () => (/* binding */ bytesToUtf8),\n/* harmony export */   concatBytes: () => (/* reexport safe */ _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__.concatBytes),\n/* harmony export */   createView: () => (/* reexport safe */ _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__.createView),\n/* harmony export */   crypto: () => (/* binding */ crypto),\n/* harmony export */   equalsBytes: () => (/* binding */ equalsBytes),\n/* harmony export */   hexToBytes: () => (/* binding */ hexToBytes),\n/* harmony export */   toHex: () => (/* reexport safe */ _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__.bytesToHex),\n/* harmony export */   utf8ToBytes: () => (/* reexport safe */ _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__.utf8ToBytes),\n/* harmony export */   wrapHash: () => (/* binding */ wrapHash)\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/hashes/_assert */ \"(ssr)/./node_modules/@noble/hashes/esm/_assert.js\");\n/* harmony import */ var _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @noble/hashes/utils */ \"(ssr)/./node_modules/@noble/hashes/esm/utils.js\");\n\n\nconst assertBool = _noble_hashes_assert__WEBPACK_IMPORTED_MODULE_0__[\"default\"].bool;\nconst assertBytes = _noble_hashes_assert__WEBPACK_IMPORTED_MODULE_0__[\"default\"].bytes;\n\n\n// buf.toString('utf8') -> bytesToUtf8(buf)\nfunction bytesToUtf8(data) {\n    if (!(data instanceof Uint8Array)) {\n        throw new TypeError(`bytesToUtf8 expected Uint8Array, got ${typeof data}`);\n    }\n    return new TextDecoder().decode(data);\n}\nfunction hexToBytes(data) {\n    const sliced = data.startsWith(\"0x\") ? data.substring(2) : data;\n    return (0,_noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__.hexToBytes)(sliced);\n}\n// buf.equals(buf2) -> equalsBytes(buf, buf2)\nfunction equalsBytes(a, b) {\n    if (a.length !== b.length) {\n        return false;\n    }\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n// Internal utils\nfunction wrapHash(hash) {\n    return (msg) => {\n        _noble_hashes_assert__WEBPACK_IMPORTED_MODULE_0__[\"default\"].bytes(msg);\n        return hash(msg);\n    };\n}\n// TODO(v3): switch away from node crypto, remove this unnecessary variable.\nconst crypto = (() => {\n    const webCrypto = typeof globalThis === \"object\" && \"crypto\" in globalThis ? globalThis.crypto : undefined;\n    const nodeRequire = typeof module !== \"undefined\" &&\n        typeof module.require === \"function\" &&\n        module.require.bind(module);\n    return {\n        node: nodeRequire && !webCrypto ? nodeRequire(\"crypto\") : undefined,\n        web: webCrypto\n    };\n})();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvZXRoZXJldW0tY3J5cHRvZ3JhcGh5L2VzbS91dGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUEyQztBQUNxQjtBQUNoRSxtQkFBbUIsaUVBQVc7QUFDOUIsb0JBQW9CLGtFQUFZO0FBQ0c7QUFDeUU7QUFDNUc7QUFDTztBQUNQO0FBQ0Esb0VBQW9FLFlBQVk7QUFDaEY7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLFdBQVcsK0RBQVc7QUFDdEI7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLGNBQWM7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsUUFBUSxrRUFBWTtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tb3JwaC1wYXktc2RrLy4vbm9kZV9tb2R1bGVzL2V0aGVyZXVtLWNyeXB0b2dyYXBoeS9lc20vdXRpbHMuanM/MTVhOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYXNzZXJ0IGZyb20gXCJAbm9ibGUvaGFzaGVzL19hc3NlcnRcIjtcbmltcG9ydCB7IGhleFRvQnl0ZXMgYXMgX2hleFRvQnl0ZXMgfSBmcm9tIFwiQG5vYmxlL2hhc2hlcy91dGlsc1wiO1xuY29uc3QgYXNzZXJ0Qm9vbCA9IGFzc2VydC5ib29sO1xuY29uc3QgYXNzZXJ0Qnl0ZXMgPSBhc3NlcnQuYnl0ZXM7XG5leHBvcnQgeyBhc3NlcnRCb29sLCBhc3NlcnRCeXRlcyB9O1xuZXhwb3J0IHsgYnl0ZXNUb0hleCwgYnl0ZXNUb0hleCBhcyB0b0hleCwgY29uY2F0Qnl0ZXMsIGNyZWF0ZVZpZXcsIHV0ZjhUb0J5dGVzIH0gZnJvbSBcIkBub2JsZS9oYXNoZXMvdXRpbHNcIjtcbi8vIGJ1Zi50b1N0cmluZygndXRmOCcpIC0+IGJ5dGVzVG9VdGY4KGJ1ZilcbmV4cG9ydCBmdW5jdGlvbiBieXRlc1RvVXRmOChkYXRhKSB7XG4gICAgaWYgKCEoZGF0YSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoYGJ5dGVzVG9VdGY4IGV4cGVjdGVkIFVpbnQ4QXJyYXksIGdvdCAke3R5cGVvZiBkYXRhfWApO1xuICAgIH1cbiAgICByZXR1cm4gbmV3IFRleHREZWNvZGVyKCkuZGVjb2RlKGRhdGEpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGhleFRvQnl0ZXMoZGF0YSkge1xuICAgIGNvbnN0IHNsaWNlZCA9IGRhdGEuc3RhcnRzV2l0aChcIjB4XCIpID8gZGF0YS5zdWJzdHJpbmcoMikgOiBkYXRhO1xuICAgIHJldHVybiBfaGV4VG9CeXRlcyhzbGljZWQpO1xufVxuLy8gYnVmLmVxdWFscyhidWYyKSAtPiBlcXVhbHNCeXRlcyhidWYsIGJ1ZjIpXG5leHBvcnQgZnVuY3Rpb24gZXF1YWxzQnl0ZXMoYSwgYikge1xuICAgIGlmIChhLmxlbmd0aCAhPT0gYi5sZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGEubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWYgKGFbaV0gIT09IGJbaV0pIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbn1cbi8vIEludGVybmFsIHV0aWxzXG5leHBvcnQgZnVuY3Rpb24gd3JhcEhhc2goaGFzaCkge1xuICAgIHJldHVybiAobXNnKSA9PiB7XG4gICAgICAgIGFzc2VydC5ieXRlcyhtc2cpO1xuICAgICAgICByZXR1cm4gaGFzaChtc2cpO1xuICAgIH07XG59XG4vLyBUT0RPKHYzKTogc3dpdGNoIGF3YXkgZnJvbSBub2RlIGNyeXB0bywgcmVtb3ZlIHRoaXMgdW5uZWNlc3NhcnkgdmFyaWFibGUuXG5leHBvcnQgY29uc3QgY3J5cHRvID0gKCgpID0+IHtcbiAgICBjb25zdCB3ZWJDcnlwdG8gPSB0eXBlb2YgZ2xvYmFsVGhpcyA9PT0gXCJvYmplY3RcIiAmJiBcImNyeXB0b1wiIGluIGdsb2JhbFRoaXMgPyBnbG9iYWxUaGlzLmNyeXB0byA6IHVuZGVmaW5lZDtcbiAgICBjb25zdCBub2RlUmVxdWlyZSA9IHR5cGVvZiBtb2R1bGUgIT09IFwidW5kZWZpbmVkXCIgJiZcbiAgICAgICAgdHlwZW9mIG1vZHVsZS5yZXF1aXJlID09PSBcImZ1bmN0aW9uXCIgJiZcbiAgICAgICAgbW9kdWxlLnJlcXVpcmUuYmluZChtb2R1bGUpO1xuICAgIHJldHVybiB7XG4gICAgICAgIG5vZGU6IG5vZGVSZXF1aXJlICYmICF3ZWJDcnlwdG8gPyBub2RlUmVxdWlyZShcImNyeXB0b1wiKSA6IHVuZGVmaW5lZCxcbiAgICAgICAgd2ViOiB3ZWJDcnlwdG9cbiAgICB9O1xufSkoKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ethereum-cryptography/esm/utils.js\n");

/***/ })

};
;