"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/web3-eth-contract";
exports.ids = ["vendor-chunks/web3-eth-contract"];
exports.modules = {

/***/ "(ssr)/./node_modules/web3-eth-contract/lib/esm/contract-deployer-method-class.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/web3-eth-contract/lib/esm/contract-deployer-method-class.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DeployerMethodClass: () => (/* binding */ DeployerMethodClass)\n/* harmony export */ });\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var web3_eth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-eth */ \"(ssr)/./node_modules/web3-eth/lib/esm/index.js\");\n/* harmony import */ var web3_eth_abi__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-eth-abi */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/index.js\");\n/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3-types */ \"(ssr)/./node_modules/web3-types/lib/esm/index.js\");\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var _encoding_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./encoding.js */ \"(ssr)/./node_modules/web3-eth-contract/lib/esm/encoding.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/web3-eth-contract/lib/esm/utils.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n\n\n\n\n\n/*\n * This class is only supposed to be used for the return of `new Contract(...).deploy(...)` method.\n */\nclass DeployerMethodClass {\n    _contractMethodDeploySend(tx) {\n        // eslint-disable-next-line no-use-before-define\n        const returnTxOptions = {\n            transactionResolver: (receipt) => {\n                if (receipt.status === BigInt(0)) {\n                    throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.Web3ContractError(\"code couldn't be stored\", receipt);\n                }\n                const newContract = this.parent.clone();\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                newContract.options.address = receipt.contractAddress;\n                return newContract;\n            },\n            contractAbi: this.parent.options.jsonInterface,\n            // TODO Should make this configurable by the user\n            checkRevertBeforeSending: false,\n        };\n        return (0,web3_validator__WEBPACK_IMPORTED_MODULE_5__.isNullish)(this.parent.getTransactionMiddleware())\n            ? (0,web3_eth__WEBPACK_IMPORTED_MODULE_1__.sendTransaction)(this.parent, tx, this.parent.defaultReturnFormat, returnTxOptions) // not calling this with undefined Middleware because it will not break if Eth package is not updated\n            : (0,web3_eth__WEBPACK_IMPORTED_MODULE_1__.sendTransaction)(this.parent, tx, this.parent.defaultReturnFormat, returnTxOptions, this.parent.getTransactionMiddleware());\n    }\n    constructor(\n    // eslint-disable-next-line no-use-before-define\n    parent, deployOptions) {\n        this.parent = parent;\n        this.deployOptions = deployOptions;\n        const { args, abi, contractOptions, deployData } = this.calculateDeployParams();\n        this.args = args;\n        this.constructorAbi = abi;\n        this.contractOptions = contractOptions;\n        this.deployData = deployData;\n    }\n    send(options) {\n        const modifiedOptions = Object.assign({}, options);\n        const tx = this.populateTransaction(modifiedOptions);\n        return this._contractMethodDeploySend(tx);\n    }\n    populateTransaction(txOptions) {\n        var _a, _b;\n        const modifiedContractOptions = Object.assign(Object.assign({}, this.contractOptions), { from: (_b = (_a = this.contractOptions.from) !== null && _a !== void 0 ? _a : this.parent.defaultAccount) !== null && _b !== void 0 ? _b : undefined });\n        // args, abi, contractOptions, deployData\n        const tx = (0,_utils_js__WEBPACK_IMPORTED_MODULE_7__.getSendTxParams)({\n            abi: this.constructorAbi,\n            params: this.args,\n            options: Object.assign(Object.assign({}, txOptions), { dataInputFill: this.parent.contractDataInputFill }),\n            contractOptions: modifiedContractOptions,\n        });\n        // @ts-expect-error remove unnecessary field\n        if (tx.dataInputFill) {\n            // @ts-expect-error remove unnecessary field\n            delete tx.dataInputFill;\n        }\n        return tx;\n    }\n    calculateDeployParams() {\n        var _a, _b, _c, _d, _e, _f;\n        let abi = this.parent.options.jsonInterface.find(j => j.type === 'constructor');\n        if (!abi) {\n            abi = {\n                type: 'constructor',\n                stateMutability: '',\n            };\n        }\n        const _input = (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.format)({ format: 'bytes' }, (_b = (_a = this.deployOptions) === null || _a === void 0 ? void 0 : _a.input) !== null && _b !== void 0 ? _b : this.parent.options.input, web3_types__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_RETURN_FORMAT);\n        const _data = (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.format)({ format: 'bytes' }, (_d = (_c = this.deployOptions) === null || _c === void 0 ? void 0 : _c.data) !== null && _d !== void 0 ? _d : this.parent.options.data, web3_types__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_RETURN_FORMAT);\n        if ((!_input || _input.trim() === '0x') && (!_data || _data.trim() === '0x')) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.Web3ContractError('contract creation without any data provided.');\n        }\n        const args = (_f = (_e = this.deployOptions) === null || _e === void 0 ? void 0 : _e.arguments) !== null && _f !== void 0 ? _f : [];\n        const contractOptions = Object.assign(Object.assign({}, this.parent.options), { input: _input, data: _data });\n        const deployData = _input !== null && _input !== void 0 ? _input : _data;\n        return { args, abi, contractOptions, deployData };\n    }\n    estimateGas(options_1) {\n        return __awaiter(this, arguments, void 0, function* (options, returnFormat = this.parent.defaultReturnFormat) {\n            const modifiedOptions = Object.assign({}, options);\n            return this.parent.contractMethodEstimateGas({\n                abi: this.constructorAbi,\n                params: this.args,\n                returnFormat,\n                options: modifiedOptions,\n                contractOptions: this.contractOptions,\n            });\n        });\n    }\n    encodeABI() {\n        return (0,_encoding_js__WEBPACK_IMPORTED_MODULE_6__.encodeMethodABI)(this.constructorAbi, this.args, (0,web3_utils__WEBPACK_IMPORTED_MODULE_4__.format)({ format: 'bytes' }, this.deployData, this.parent.defaultReturnFormat));\n    }\n    decodeData(data) {\n        return Object.assign(Object.assign({}, (0,web3_eth_abi__WEBPACK_IMPORTED_MODULE_2__.decodeFunctionCall)(this.constructorAbi, data.replace(this.deployData, ''), false)), { __method__: this.constructorAbi.type });\n    }\n}\n//# sourceMappingURL=contract-deployer-method-class.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-contract/lib/esm/contract-deployer-method-class.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-contract/lib/esm/contract-subscription-manager.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/web3-eth-contract/lib/esm/contract-subscription-manager.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ContractSubscriptionManager: () => (/* binding */ ContractSubscriptionManager)\n/* harmony export */ });\n/* harmony import */ var web3_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-core */ \"(ssr)/./node_modules/web3-core/lib/esm/index.js\");\n/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-types */ \"(ssr)/./node_modules/web3-types/lib/esm/index.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n/**\n * Similar to `Web3SubscriptionManager` but has a reference to the Contract that uses\n */\nclass ContractSubscriptionManager extends web3_core__WEBPACK_IMPORTED_MODULE_0__.Web3SubscriptionManager {\n    /**\n     *\n     * @param - Web3SubscriptionManager\n     * @param - parentContract\n     *\n     * @example\n     * ```ts\n     * const requestManager = new Web3RequestManager(\"ws://localhost:8545\");\n     * const contract = new Contract(...)\n     * const subscriptionManager = new Web3SubscriptionManager(requestManager, {}, contract);\n     * ```\n     */\n    constructor(self, parentContract) {\n        super(self.requestManager, self.registeredSubscriptions);\n        this.parentContract = parentContract;\n    }\n    /**\n     * Will create a new subscription\n     *\n     * @param name - The subscription you want to subscribe to\n     * @param args - Optional additional parameters, depending on the subscription type\n     * @param returnFormat- ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) - Specifies how the return data from the call should be formatted.\n     *\n     * Will subscribe to a specific topic (note: name)\n     * @returns The subscription object\n     */\n    subscribe(name_1, args_1) {\n        const _super = Object.create(null, {\n            subscribe: { get: () => super.subscribe }\n        });\n        return __awaiter(this, arguments, void 0, function* (name, args, returnFormat = web3_types__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_RETURN_FORMAT) {\n            return _super.subscribe.call(this, name, args !== null && args !== void 0 ? args : this.parentContract.options, returnFormat);\n        });\n    }\n}\n//# sourceMappingURL=contract-subscription-manager.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtY29udHJhY3QvbGliL2VzbS9jb250cmFjdC1zdWJzY3JpcHRpb24tbWFuYWdlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLFNBQUksSUFBSSxTQUFJO0FBQzdCLDRCQUE0QiwrREFBK0QsaUJBQWlCO0FBQzVHO0FBQ0Esb0NBQW9DLE1BQU0sK0JBQStCLFlBQVk7QUFDckYsbUNBQW1DLE1BQU0sbUNBQW1DLFlBQVk7QUFDeEYsZ0NBQWdDO0FBQ2hDO0FBQ0EsS0FBSztBQUNMO0FBQ29EO0FBQ0Q7QUFDbkQ7QUFDQTtBQUNBO0FBQ08sMENBQTBDLDhEQUF1QjtBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpRkFBaUY7QUFDakY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixrQkFBa0IsYUFBYSw0QkFBNEI7QUFDekY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCLFNBQVM7QUFDVCx3RkFBd0YsNkRBQXFCO0FBQzdHO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL21vcnBoLXBheS1zZGsvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtY29udHJhY3QvbGliL2VzbS9jb250cmFjdC1zdWJzY3JpcHRpb24tbWFuYWdlci5qcz81YTUwIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5UaGlzIGZpbGUgaXMgcGFydCBvZiB3ZWIzLmpzLlxuXG53ZWIzLmpzIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbml0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxudGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbihhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG5cbndlYjMuanMgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbmJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG5NRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG5HTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cblxuWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG5hbG9uZyB3aXRoIHdlYjMuanMuICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4qL1xudmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XG4gICAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9XG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcbiAgICB9KTtcbn07XG5pbXBvcnQgeyBXZWIzU3Vic2NyaXB0aW9uTWFuYWdlciB9IGZyb20gJ3dlYjMtY29yZSc7XG5pbXBvcnQgeyBERUZBVUxUX1JFVFVSTl9GT1JNQVQgfSBmcm9tICd3ZWIzLXR5cGVzJztcbi8qKlxuICogU2ltaWxhciB0byBgV2ViM1N1YnNjcmlwdGlvbk1hbmFnZXJgIGJ1dCBoYXMgYSByZWZlcmVuY2UgdG8gdGhlIENvbnRyYWN0IHRoYXQgdXNlc1xuICovXG5leHBvcnQgY2xhc3MgQ29udHJhY3RTdWJzY3JpcHRpb25NYW5hZ2VyIGV4dGVuZHMgV2ViM1N1YnNjcmlwdGlvbk1hbmFnZXIge1xuICAgIC8qKlxuICAgICAqXG4gICAgICogQHBhcmFtIC0gV2ViM1N1YnNjcmlwdGlvbk1hbmFnZXJcbiAgICAgKiBAcGFyYW0gLSBwYXJlbnRDb250cmFjdFxuICAgICAqXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGB0c1xuICAgICAqIGNvbnN0IHJlcXVlc3RNYW5hZ2VyID0gbmV3IFdlYjNSZXF1ZXN0TWFuYWdlcihcIndzOi8vbG9jYWxob3N0Ojg1NDVcIik7XG4gICAgICogY29uc3QgY29udHJhY3QgPSBuZXcgQ29udHJhY3QoLi4uKVxuICAgICAqIGNvbnN0IHN1YnNjcmlwdGlvbk1hbmFnZXIgPSBuZXcgV2ViM1N1YnNjcmlwdGlvbk1hbmFnZXIocmVxdWVzdE1hbmFnZXIsIHt9LCBjb250cmFjdCk7XG4gICAgICogYGBgXG4gICAgICovXG4gICAgY29uc3RydWN0b3Ioc2VsZiwgcGFyZW50Q29udHJhY3QpIHtcbiAgICAgICAgc3VwZXIoc2VsZi5yZXF1ZXN0TWFuYWdlciwgc2VsZi5yZWdpc3RlcmVkU3Vic2NyaXB0aW9ucyk7XG4gICAgICAgIHRoaXMucGFyZW50Q29udHJhY3QgPSBwYXJlbnRDb250cmFjdDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogV2lsbCBjcmVhdGUgYSBuZXcgc3Vic2NyaXB0aW9uXG4gICAgICpcbiAgICAgKiBAcGFyYW0gbmFtZSAtIFRoZSBzdWJzY3JpcHRpb24geW91IHdhbnQgdG8gc3Vic2NyaWJlIHRvXG4gICAgICogQHBhcmFtIGFyZ3MgLSBPcHRpb25hbCBhZGRpdGlvbmFsIHBhcmFtZXRlcnMsIGRlcGVuZGluZyBvbiB0aGUgc3Vic2NyaXB0aW9uIHR5cGVcbiAgICAgKiBAcGFyYW0gcmV0dXJuRm9ybWF0LSAoe0BsaW5rIERhdGFGb3JtYXR9IGRlZmF1bHRzIHRvIHtAbGluayBERUZBVUxUX1JFVFVSTl9GT1JNQVR9KSAtIFNwZWNpZmllcyBob3cgdGhlIHJldHVybiBkYXRhIGZyb20gdGhlIGNhbGwgc2hvdWxkIGJlIGZvcm1hdHRlZC5cbiAgICAgKlxuICAgICAqIFdpbGwgc3Vic2NyaWJlIHRvIGEgc3BlY2lmaWMgdG9waWMgKG5vdGU6IG5hbWUpXG4gICAgICogQHJldHVybnMgVGhlIHN1YnNjcmlwdGlvbiBvYmplY3RcbiAgICAgKi9cbiAgICBzdWJzY3JpYmUobmFtZV8xLCBhcmdzXzEpIHtcbiAgICAgICAgY29uc3QgX3N1cGVyID0gT2JqZWN0LmNyZWF0ZShudWxsLCB7XG4gICAgICAgICAgICBzdWJzY3JpYmU6IHsgZ2V0OiAoKSA9PiBzdXBlci5zdWJzY3JpYmUgfVxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCBhcmd1bWVudHMsIHZvaWQgMCwgZnVuY3Rpb24qIChuYW1lLCBhcmdzLCByZXR1cm5Gb3JtYXQgPSBERUZBVUxUX1JFVFVSTl9GT1JNQVQpIHtcbiAgICAgICAgICAgIHJldHVybiBfc3VwZXIuc3Vic2NyaWJlLmNhbGwodGhpcywgbmFtZSwgYXJncyAhPT0gbnVsbCAmJiBhcmdzICE9PSB2b2lkIDAgPyBhcmdzIDogdGhpcy5wYXJlbnRDb250cmFjdC5vcHRpb25zLCByZXR1cm5Gb3JtYXQpO1xuICAgICAgICB9KTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb250cmFjdC1zdWJzY3JpcHRpb24tbWFuYWdlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-contract/lib/esm/contract-subscription-manager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-contract/lib/esm/contract.js":
/*!************************************************************!*\
  !*** ./node_modules/web3-eth-contract/lib/esm/contract.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Contract: () => (/* binding */ Contract)\n/* harmony export */ });\n/* harmony import */ var web3_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-core */ \"(ssr)/./node_modules/web3-core/lib/esm/index.js\");\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var web3_eth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-eth */ \"(ssr)/./node_modules/web3-eth/lib/esm/index.js\");\n/* harmony import */ var web3_eth_abi__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3-eth-abi */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/index.js\");\n/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! web3-types */ \"(ssr)/./node_modules/web3-types/lib/esm/index.js\");\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var _encoding_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./encoding.js */ \"(ssr)/./node_modules/web3-eth-contract/lib/esm/encoding.js\");\n/* harmony import */ var _contract_log_subscription_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./contract_log_subscription.js */ \"(ssr)/./node_modules/web3-eth-contract/lib/esm/contract_log_subscription.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/web3-eth-contract/lib/esm/utils.js\");\n/* harmony import */ var _contract_deployer_method_class_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./contract-deployer-method-class.js */ \"(ssr)/./node_modules/web3-eth-contract/lib/esm/contract-deployer-method-class.js\");\n/* harmony import */ var _contract_subscription_manager_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./contract-subscription-manager.js */ \"(ssr)/./node_modules/web3-eth-contract/lib/esm/contract-subscription-manager.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n\n\n\n\n\n\n\n// eslint-disable-next-line import/no-cycle\n\n// eslint-disable-next-line import/no-cycle\n\nconst contractSubscriptions = {\n    logs: _contract_log_subscription_js__WEBPACK_IMPORTED_MODULE_8__.ContractLogsSubscription,\n    newHeads: web3_eth__WEBPACK_IMPORTED_MODULE_2__.NewHeadsSubscription,\n    newBlockHeaders: web3_eth__WEBPACK_IMPORTED_MODULE_2__.NewHeadsSubscription,\n};\n/**\n * The `web3.eth.Contract` makes it easy to interact with smart contracts on the ethereum blockchain.\n * For using contract package, first install Web3 package using: `npm i web3` or `yarn add web3` based on your package manager, after that contracts features can be used as mentioned in following snippet.\n * ```ts\n *\n * import { Web3 } from 'web3';\n *\n * const web3 = new Web3('https://127.0.0.1:4545');\n * const abi = [...] as const; // your contract ABI\n *\n * let contract = new web3.eth.Contract(abi,'0xdAC17F958D2ee523a2206206994597C13D831ec7');\n * await contract.methods.balanceOf('0xdAC17F958D2ee523a2206206994597C13D831ec7').call();\n * ```\n * For using individual package install `web3-eth-contract` and `web3-core` packages using: `npm i web3-eth-contract web3-core` or `yarn add web3-eth-contract web3-core`. This is more efficient approach for building lightweight applications.\n * ```ts\n *\n * import { Web3Context } from 'web3-core';\n * import { Contract } from 'web3-eth-contract';\n *\n * const abi = [...] as const; // your contract ABI\n *\n * let contract = new web3.eth.Contract(\n * \tabi,\n * \t'0xdAC17F958D2ee523a2206206994597C13D831ec7'\n * \t new Web3Context('http://127.0.0.1:8545'));\n *\n * await contract.methods.balanceOf('0xdAC17F958D2ee523a2206206994597C13D831ec7').call();\n * ```\n * ## Generated Methods\n * Following methods are generated by web3.js contract object for each of contract functions by using its ABI.\n *\n * ### send\n * This is used to send a transaction to the smart contract and execute its method. Note this can alter the smart contract state.\n *\n * #### Parameters\n * options?: PayableTxOptions | NonPayableTxOptions\n *\n * #### Returns\n * [Web3PromiEvent](/api/web3/namespace/core#Web3PromiEvent) : Web3 Promi Event\n *\n * ```ts\n * // using the promise\n * myContract.methods.myMethod(123).send({from: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'})\n * \t.then(function(receipt){\n * \t\t// other parts of code to use receipt\n * \t});\n *\n *\n * // using the event emitter\n * myContract.methods.myMethod(123).send({from: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'})\n * \t.on('transactionHash', function(hash){\n * \t\t// ...\n * \t})\n * \t.on('confirmation', function(confirmationNumber, receipt){\n * \t\t// ...\n * \t})\n * \t.on('receipt', function(receipt){\n * \t\t// ...\n * \t})\n * \t.on('error', function(error, receipt) {\n * \t\t// ...\n * \t});\n *\n * ```\n *\n * ### call\n * This will execute smart contract method in the EVM without sending any transaction. Note calling cannot alter the smart contract state.\n *\n * #### Parameters\n * options?: PayableCallOptions | NonPayableCallOptions,\n * block?: BlockNumberOrTag,\n *\n * #### Returns\n * Promise : having results of call\n *\n * ```ts\n *\n * let myContract = new web3.eth.Contract(abi, address);\n *\n * myContract.methods.myFunction().call()\n * .then(console.log);\n *\n * ```\n * ### estimateGas\n * Returns the amount of gas consumed by executing the method in EVM without creating a new transaction on the blockchain. The returned amount can be used as a gas estimate for executing the transaction publicly. The actual gas used can be different when sending the transaction later, as the state of the smart contract can be different at that time.\n *\n * #### Parameters\n * options?: PayableCallOptions,\n * returnFormat: ReturnFormat = DEFAULT_RETURN_FORMAT as ReturnFormat,\n *\n * #### Returns\n * Promise: The gas amount estimated.\n *\n * ```ts\n * const estimatedGas = await contract.methods.approve('0xdAC17F958D2ee523a2206206994597C13D831ec7', 300)\n *     .estimateGas();\n *\n * ```\n *\n * ### encodeABI\n * Encodes the ABI for this method. The resulting hex string is 32-bit function signature hash plus the passed parameters in Solidity tightly packed format. This can be used to send a transaction, call a method, or pass it into another smart contract’s method as arguments. Set the data field on web3.eth.sendTransaction options as the encodeABI() result and it is the same as calling the contract method with contract.myMethod.send().\n *\n * Some use cases for encodeABI() include: preparing a smart contract transaction for a multisignature wallet, working with offline wallets and cold storage and creating transaction payload for complex smart contract proxy calls.\n *\n * #### Parameters\n * None\n *\n * #### Returns\n * String: The encoded ABI.\n *\n * ```ts\n * const encodedABI = await contract.methods.approve('0xdAC17F958D2ee523a2206206994597C13D831ec7', 300)\n *     .encodeABI();\n *\n * ```\n *\n\n * ### decodeMethodData\n * Decodes the given ABI-encoded data, revealing both the method name and the parameters used in the smart contract call.\n * This function reverses the encoding process happens at the method `encodeABI`.\n * It's particularly useful for debugging and understanding the interactions with and between smart contracts.\n *\n * #### Parameters\n *\n * - `data` **HexString**: The string of ABI-encoded data that needs to be decoded. This should include the method signature and the encoded parameters.\n *\n * #### Returns\n *\n * - **Object**: This object combines both the decoded parameters and the method name in a readable format. Specifically, the returned object contains:\n *   - `__method__` **String**: The name of the contract method, reconstructed from the ABI.\n *   - `__length__` **Number**: The number of parameters decoded.\n *   - Additional properties representing each parameter by name, as well as their position and values.\n *\n * #### Example\n *\n * Given an ABI-encoded string from a transaction, you can decode this data to identify the method called and the parameters passed.\n * Here's a simplified example:\n *\n *\n * ```typescript\n * const GreeterAbi = [\n * \t{\n * \t\tinputs: [\n * \t\t\t{\n * \t\t\t\tinternalType: 'string',\n * \t\t\t\tname: '_greeting',\n * \t\t\t\ttype: 'string',\n * \t\t\t},\n * \t\t],\n * \t\tname: 'setGreeting',\n * \t\toutputs: [],\n * \t\ttype: 'function',\n * \t},\n * ];\n * const contract = new Contract(GreeterAbi); // Initialize with your contract's ABI\n *\n * // The ABI-encoded data string for \"setGreeting('Hello World')\"\n * const encodedData =\n * \t'0xa41368620000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000b48656c6c6f20576f726c64000000000000000000000000000000000000000000';\n *\n * try {\n * \tconst decoded = contract.decodeMethodData(encodedData);\n * \tconsole.log(decoded.__method__); // Outputs: \"setGreeting(string)\"\n * \tconsole.log(decoded); // Outputs the detailed parameter data\n * \t// This tells that the method called was `setGreeting` with a single string parameter \"Hello World\":\n * \t// {\n * \t//   __method__: 'setGreeting(string)',\n * \t//   __length__: 1,\n * \t//   '0': 'Hello World',\n * \t//   _greeting: 'Hello World'\n * \t// }\n * } catch (error) {\n * \tconsole.error(error);\n * }\n * ```\n *\n\n * ### createAccessList\n * This will create an access list a method execution will access when executed in the EVM.\n * Note: You must specify a from address and gas if it’s not specified in options when instantiating parent contract object.\n *\n * #### Parameters\n * options?: PayableCallOptions | NonPayableCallOptions,\n * block?: BlockNumberOrTag,\n *\n * #### Returns\n * Promise: The generated access list for transaction.\n *\n * ```ts\n * const accessList = await contract.methods.approve('0xbEe634C21c16F05B03B704BaE071536121e6cFeA', 300)\n *     .createAccessList({\n *         from: \"0x9992695e1053bb737d3cfae4743dcfc4b94f203d\"\n *    });\n * ```\n *\n */\nclass Contract extends web3_core__WEBPACK_IMPORTED_MODULE_0__.Web3Context {\n    get subscriptionManager() {\n        return this._subscriptionManager;\n    }\n    constructor(jsonInterface, addressOrOptionsOrContext, optionsOrContextOrReturnFormat, contextOrReturnFormat, returnFormat) {\n        var _a, _b, _c;\n        // eslint-disable-next-line no-nested-ternary\n        const options = (0,web3_utils__WEBPACK_IMPORTED_MODULE_5__.isContractInitOptions)(addressOrOptionsOrContext)\n            ? addressOrOptionsOrContext\n            : (0,web3_utils__WEBPACK_IMPORTED_MODULE_5__.isContractInitOptions)(optionsOrContextOrReturnFormat)\n                ? optionsOrContextOrReturnFormat\n                : undefined;\n        let contractContext;\n        if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_9__.isWeb3ContractContext)(addressOrOptionsOrContext)) {\n            contractContext = addressOrOptionsOrContext;\n        }\n        else if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_9__.isWeb3ContractContext)(optionsOrContextOrReturnFormat)) {\n            contractContext = optionsOrContextOrReturnFormat;\n        }\n        else {\n            contractContext = contextOrReturnFormat;\n        }\n        let provider;\n        if (typeof addressOrOptionsOrContext === 'object' &&\n            'provider' in addressOrOptionsOrContext) {\n            provider = addressOrOptionsOrContext.provider;\n        }\n        else if (typeof optionsOrContextOrReturnFormat === 'object' &&\n            'provider' in optionsOrContextOrReturnFormat) {\n            provider = optionsOrContextOrReturnFormat.provider;\n        }\n        else if (typeof contextOrReturnFormat === 'object' &&\n            'provider' in contextOrReturnFormat) {\n            provider = contextOrReturnFormat.provider;\n        }\n        else {\n            provider = Contract.givenProvider;\n        }\n        super(Object.assign(Object.assign({}, contractContext), { provider, registeredSubscriptions: contractSubscriptions }));\n        /**\n         * Set to true if you want contracts' defaults to sync with global defaults.\n         */\n        this.syncWithContext = false;\n        this._functions = {};\n        this._subscriptionManager = new _contract_subscription_manager_js__WEBPACK_IMPORTED_MODULE_11__.ContractSubscriptionManager(super.subscriptionManager, this);\n        // Init protected properties\n        if (contractContext === null || contractContext === void 0 ? void 0 : contractContext.wallet) {\n            this._wallet = contractContext.wallet;\n        }\n        if (contractContext === null || contractContext === void 0 ? void 0 : contractContext.accountProvider) {\n            this._accountProvider = contractContext.accountProvider;\n        }\n        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_6__.isNullish)(options) &&\n            !(0,web3_validator__WEBPACK_IMPORTED_MODULE_6__.isNullish)(options.data) &&\n            !(0,web3_validator__WEBPACK_IMPORTED_MODULE_6__.isNullish)(options.input) &&\n            this.config.contractDataInputFill !== 'both')\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_1__.ContractTransactionDataAndInputError({\n                data: options.data,\n                input: options.input,\n            });\n        this._overloadedMethodAbis = new Map();\n        // eslint-disable-next-line no-nested-ternary\n        const returnDataFormat = (0,web3_utils__WEBPACK_IMPORTED_MODULE_5__.isDataFormat)(contextOrReturnFormat)\n            ? contextOrReturnFormat\n            : (0,web3_utils__WEBPACK_IMPORTED_MODULE_5__.isDataFormat)(optionsOrContextOrReturnFormat)\n                ? optionsOrContextOrReturnFormat\n                : returnFormat !== null && returnFormat !== void 0 ? returnFormat : this.defaultReturnFormat;\n        const address = typeof addressOrOptionsOrContext === 'string' ? addressOrOptionsOrContext : undefined;\n        this.config.contractDataInputFill =\n            (_a = options === null || options === void 0 ? void 0 : options.dataInputFill) !== null && _a !== void 0 ? _a : this.config.contractDataInputFill;\n        this._parseAndSetJsonInterface(jsonInterface, returnDataFormat);\n        if (this.defaultReturnFormat !== returnDataFormat) {\n            this.defaultReturnFormat = returnDataFormat;\n        }\n        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_6__.isNullish)(address)) {\n            this._parseAndSetAddress(address, returnDataFormat);\n        }\n        this.options = {\n            address,\n            jsonInterface: this._jsonInterface,\n            gas: (_b = options === null || options === void 0 ? void 0 : options.gas) !== null && _b !== void 0 ? _b : options === null || options === void 0 ? void 0 : options.gasLimit,\n            gasPrice: options === null || options === void 0 ? void 0 : options.gasPrice,\n            from: options === null || options === void 0 ? void 0 : options.from,\n            input: options === null || options === void 0 ? void 0 : options.input,\n            data: options === null || options === void 0 ? void 0 : options.data,\n        };\n        this.syncWithContext = (_c = options === null || options === void 0 ? void 0 : options.syncWithContext) !== null && _c !== void 0 ? _c : false;\n        if (contractContext instanceof web3_core__WEBPACK_IMPORTED_MODULE_0__.Web3Context) {\n            this.subscribeToContextEvents(contractContext);\n        }\n        Object.defineProperty(this.options, 'address', {\n            set: (value) => this._parseAndSetAddress(value, returnDataFormat),\n            get: () => this._address,\n        });\n        Object.defineProperty(this.options, 'jsonInterface', {\n            set: (value) => this._parseAndSetJsonInterface(value, returnDataFormat),\n            get: () => this._jsonInterface,\n        });\n        if (contractContext instanceof web3_core__WEBPACK_IMPORTED_MODULE_0__.Web3Context) {\n            contractContext.on(web3_core__WEBPACK_IMPORTED_MODULE_0__.Web3ConfigEvent.CONFIG_CHANGE, event => {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                this.setConfig({ [event.name]: event.newValue });\n            });\n        }\n    }\n    setTransactionMiddleware(transactionMiddleware) {\n        this.transactionMiddleware = transactionMiddleware;\n    }\n    getTransactionMiddleware() {\n        return this.transactionMiddleware;\n    }\n    /**\n     * Subscribe to an event.\n     *\n     * ```ts\n     * await myContract.events.MyEvent([options])\n     * ```\n     *\n     * There is a special event `allEvents` that can be used to subscribe all events.\n     *\n     * ```ts\n     * await myContract.events.allEvents([options])\n     * ```\n     *\n     * @returns - When individual event is accessed will returns {@link ContractBoundEvent} object\n     */\n    get events() {\n        return this._events;\n    }\n    /**\n     * Creates a transaction object for that method, which then can be `called`, `send`, `estimated`, `createAccessList` , or `ABI encoded`.\n     *\n     * The methods of this smart contract are available through:\n     *\n     * The name: `myContract.methods.myMethod(123)`\n     * The name with parameters: `myContract.methods['myMethod(uint256)'](123)`\n     * The signature `myContract.methods['0x58cf5f10'](123)`\n     *\n     * This allows calling functions with same name but different parameters from the JavaScript contract object.\n     *\n     * \\> The method signature does not provide a type safe interface, so we recommend to use method `name` instead.\n     *\n     * ```ts\n     * // calling a method\n     * const result = await myContract.methods.myMethod(123).call({from: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'});\n     *\n     * // or sending and using a promise\n     * const receipt = await myContract.methods.myMethod(123).send({from: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'});\n     *\n     * // or sending and using the events\n     * const sendObject = myContract.methods.myMethod(123).send({from: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'});\n     * sendObject.on('transactionHash', function(hash){\n     *   ...\n     * });\n     * sendObject.on('receipt', function(receipt){\n     *   ...\n     * });\n     * sendObject.on('confirmation', function(confirmationNumber, receipt){\n     *   ...\n     * });\n     * sendObject.on('error', function(error, receipt) {\n     *   ...\n     * });\n     * ```\n     *\n     * @returns - Either returns {@link PayableMethodObject} or {@link NonPayableMethodObject} based on the definitions of the ABI of that contract.\n     */\n    get methods() {\n        return this._methods;\n    }\n    /**\n     * Clones the current contract instance. This doesn't deploy contract on blockchain and only creates a local clone.\n     *\n     * @returns - The new contract instance.\n     *\n     * ```ts\n     * const contract1 = new web3.eth.Contract(abi, address, {gasPrice: '12345678', from: fromAddress});\n     *\n     * const contract2 = contract1.clone();\n     * contract2.options.address = '0xdAC17F958D2ee523a2206206994597C13D831ec7';\n     *\n     * (contract1.options.address !== contract2.options.address);\n     * > true\n     * ```\n     */\n    clone() {\n        let newContract;\n        if (this.options.address) {\n            newContract = new Contract([...this._jsonInterface, ...this._errorsInterface], this.options.address, {\n                gas: this.options.gas,\n                gasPrice: this.options.gasPrice,\n                from: this.options.from,\n                input: this.options.input,\n                data: this.options.data,\n                provider: this.currentProvider,\n                syncWithContext: this.syncWithContext,\n                dataInputFill: this.config.contractDataInputFill,\n            }, this.getContextObject());\n        }\n        else {\n            newContract = new Contract([...this._jsonInterface, ...this._errorsInterface], {\n                gas: this.options.gas,\n                gasPrice: this.options.gasPrice,\n                from: this.options.from,\n                input: this.options.input,\n                data: this.options.data,\n                provider: this.currentProvider,\n                syncWithContext: this.syncWithContext,\n                dataInputFill: this.config.contractDataInputFill,\n            }, this.getContextObject());\n        }\n        if (this.context)\n            newContract.subscribeToContextEvents(this.context);\n        return newContract;\n    }\n    /**\n     * Call this function to deploy the contract to the blockchain. After successful deployment the promise will resolve with a new contract instance.\n     *\n     * ```ts\n     * myContract.deploy({\n     *   input: '0x12345...', // data keyword can be used, too.\n     *   arguments: [123, 'My String']\n     * })\n     * .send({\n     *   from: '0x1234567890123456789012345678901234567891',\n     *   gas: 1500000,\n     *   gasPrice: '30000000000000'\n     * }, function(error, transactionHash){ ... })\n     * .on('error', function(error){ ... })\n     * .on('transactionHash', function(transactionHash){ ... })\n     * .on('receipt', function(receipt){\n     *  console.log(receipt.contractAddress) // contains the new contract address\n     * })\n     * .on('confirmation', function(confirmationNumber, receipt){ ... })\n     * .then(function(newContractInstance){\n     *   console.log(newContractInstance.options.address) // instance with the new contract address\n     * });\n     *\n     *\n     * // When the data is already set as an option to the contract itself\n     * myContract.options.data = '0x12345...';\n     *\n     * myContract.deploy({\n     *   arguments: [123, 'My String']\n     * })\n     * .send({\n     *   from: '0x1234567890123456789012345678901234567891',\n     *   gas: 1500000,\n     *   gasPrice: '30000000000000'\n     * })\n     * .then(function(newContractInstance){\n     *   console.log(newContractInstance.options.address) // instance with the new contract address\n     * });\n     *\n     *\n     * // Simply encoding\n     * myContract.deploy({\n     *   input: '0x12345...',\n     *   arguments: [123, 'My String']\n     * })\n     * .encodeABI();\n     * > '0x12345...0000012345678765432'\n     *\n     *\n     * // decoding\n     * myContract.deploy({\n     *   input: '0x12345...',\n     *   // arguments: [123, 'My Greeting'] if you just need to decode the data, you can skip the arguments\n     * })\n     * .decodeData('0x12345...0000012345678765432');\n     * > {\n     *      __method__: 'constructor',\n     *      __length__: 2,\n     *      '0': '123',\n     *      _id: '123',\n     *      '1': 'My Greeting',\n     *      _greeting: 'My Greeting',\n     *   }\n     *\n     *\n     * // Gas estimation\n     * myContract.deploy({\n     *   input: '0x12345...',\n     *   arguments: [123, 'My String']\n     * })\n     * .estimateGas(function(err, gas){\n     *   console.log(gas);\n     * });\n     * ```\n     *\n     * @returns - The transaction object\n     */\n    deploy(deployOptions) {\n        return new _contract_deployer_method_class_js__WEBPACK_IMPORTED_MODULE_10__.DeployerMethodClass(this, deployOptions);\n    }\n    getPastEvents(param1, param2, param3) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            const eventName = typeof param1 === 'string' ? param1 : web3_eth__WEBPACK_IMPORTED_MODULE_2__.ALL_EVENTS;\n            const options = \n            // eslint-disable-next-line no-nested-ternary\n            typeof param1 !== 'string' && !(0,web3_utils__WEBPACK_IMPORTED_MODULE_5__.isDataFormat)(param1)\n                ? param1\n                : !(0,web3_utils__WEBPACK_IMPORTED_MODULE_5__.isDataFormat)(param2)\n                    ? param2\n                    : {};\n            // eslint-disable-next-line no-nested-ternary\n            const returnFormat = (0,web3_utils__WEBPACK_IMPORTED_MODULE_5__.isDataFormat)(param1)\n                ? param1\n                : (0,web3_utils__WEBPACK_IMPORTED_MODULE_5__.isDataFormat)(param2)\n                    ? param2\n                    : param3 !== null && param3 !== void 0 ? param3 : this.defaultReturnFormat;\n            const abi = eventName === 'allEvents' || eventName === web3_eth__WEBPACK_IMPORTED_MODULE_2__.ALL_EVENTS\n                ? web3_eth__WEBPACK_IMPORTED_MODULE_2__.ALL_EVENTS_ABI\n                : this._jsonInterface.find(j => 'name' in j && j.name === eventName);\n            if (!abi) {\n                throw new web3_errors__WEBPACK_IMPORTED_MODULE_1__.Web3ContractError(`Event ${String(eventName)} not found.`);\n            }\n            const { fromBlock, toBlock, topics, address } = (0,_encoding_js__WEBPACK_IMPORTED_MODULE_7__.encodeEventABI)(this.options, abi, options !== null && options !== void 0 ? options : {});\n            const logs = yield (0,web3_eth__WEBPACK_IMPORTED_MODULE_2__.getLogs)(this, { fromBlock, toBlock, topics, address }, returnFormat);\n            const decodedLogs = logs\n                ? logs.map(log => typeof log === 'string'\n                    ? log\n                    : (0,web3_eth__WEBPACK_IMPORTED_MODULE_2__.decodeEventABI)(abi, log, this._jsonInterface, returnFormat))\n                : [];\n            const filter = (_a = options === null || options === void 0 ? void 0 : options.filter) !== null && _a !== void 0 ? _a : {};\n            const filterKeys = Object.keys(filter);\n            if (filterKeys.length > 0) {\n                return decodedLogs.filter(log => {\n                    if (typeof log === 'string')\n                        return true;\n                    return filterKeys.every((key) => {\n                        var _a;\n                        if (Array.isArray(filter[key])) {\n                            return filter[key].some((v) => String(log.returnValues[key]).toUpperCase() ===\n                                String(v).toUpperCase());\n                        }\n                        const inputAbi = (_a = abi.inputs) === null || _a === void 0 ? void 0 : _a.filter(input => input.name === key)[0];\n                        if ((inputAbi === null || inputAbi === void 0 ? void 0 : inputAbi.indexed) && inputAbi.type === 'string') {\n                            const hashedIndexedString = (0,web3_utils__WEBPACK_IMPORTED_MODULE_5__.keccak256)(filter[key]);\n                            if (hashedIndexedString === String(log.returnValues[key]))\n                                return true;\n                        }\n                        return (String(log.returnValues[key]).toUpperCase() ===\n                            String(filter[key]).toUpperCase());\n                    });\n                });\n            }\n            return decodedLogs;\n        });\n    }\n    _parseAndSetAddress(value, returnFormat = this.defaultReturnFormat) {\n        this._address = value\n            ? (0,web3_utils__WEBPACK_IMPORTED_MODULE_5__.toChecksumAddress)((0,web3_utils__WEBPACK_IMPORTED_MODULE_5__.format)({ format: 'address' }, value, returnFormat))\n            : value;\n    }\n    decodeMethodData(data) {\n        const methodSignature = data.slice(0, 10);\n        const functionsAbis = this._jsonInterface.filter(j => j.type !== 'error');\n        const abi = functionsAbis.find(a => methodSignature === (0,web3_eth_abi__WEBPACK_IMPORTED_MODULE_3__.encodeFunctionSignature)((0,web3_eth_abi__WEBPACK_IMPORTED_MODULE_3__.jsonInterfaceMethodToString)(a)));\n        if (!abi) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_1__.Web3ContractError(`The ABI for the provided method signature ${methodSignature} was not found.`);\n        }\n        return (0,web3_eth_abi__WEBPACK_IMPORTED_MODULE_3__.decodeFunctionCall)(abi, data);\n    }\n    _parseAndSetJsonInterface(abis, returnFormat = this.defaultReturnFormat) {\n        var _a, _b;\n        this._functions = {};\n        this._methods = {};\n        this._events = {};\n        let result = [];\n        const functionsAbi = abis.filter(abi => abi.type !== 'error');\n        const errorsAbi = abis.filter(abi => (0,web3_eth_abi__WEBPACK_IMPORTED_MODULE_3__.isAbiErrorFragment)(abi));\n        for (const a of functionsAbi) {\n            const abi = Object.assign(Object.assign({}, a), { signature: '' });\n            if ((0,web3_eth_abi__WEBPACK_IMPORTED_MODULE_3__.isAbiFunctionFragment)(abi)) {\n                const methodName = (0,web3_eth_abi__WEBPACK_IMPORTED_MODULE_3__.jsonInterfaceMethodToString)(abi);\n                const methodSignature = (0,web3_eth_abi__WEBPACK_IMPORTED_MODULE_3__.encodeFunctionSignature)(methodName);\n                abi.methodNameWithInputs = methodName;\n                abi.signature = methodSignature;\n                // make constant and payable backwards compatible\n                abi.constant =\n                    abi.stateMutability === 'view' ||\n                        abi.stateMutability === 'pure' ||\n                        abi.constant;\n                abi.payable = abi.stateMutability === 'payable' || abi.payable;\n                this._overloadedMethodAbis.set(abi.name, [\n                    ...((_a = this._overloadedMethodAbis.get(abi.name)) !== null && _a !== void 0 ? _a : []),\n                    abi,\n                ]);\n                const abiFragment = (_b = this._overloadedMethodAbis.get(abi.name)) !== null && _b !== void 0 ? _b : [];\n                const contractMethod = this._createContractMethod(abiFragment, errorsAbi);\n                const exactContractMethod = this._createContractMethod(abiFragment, errorsAbi, true);\n                this._functions[methodName] = {\n                    signature: methodSignature,\n                    method: exactContractMethod,\n                };\n                // We don't know a particular type of the Abi method so can't type check\n                this._methods[abi.name] =\n                    contractMethod;\n                // We don't know a particular type of the Abi method so can't type check\n                this._methods[methodName] =\n                    exactContractMethod;\n                // We don't know a particular type of the Abi method so can't type check\n                this._methods[methodSignature] =\n                    exactContractMethod;\n            }\n            else if ((0,web3_eth_abi__WEBPACK_IMPORTED_MODULE_3__.isAbiEventFragment)(abi)) {\n                const eventName = (0,web3_eth_abi__WEBPACK_IMPORTED_MODULE_3__.jsonInterfaceMethodToString)(abi);\n                const eventSignature = (0,web3_eth_abi__WEBPACK_IMPORTED_MODULE_3__.encodeEventSignature)(eventName);\n                const event = this._createContractEvent(abi, returnFormat);\n                abi.signature = eventSignature;\n                if (!(eventName in this._events) || abi.name === 'bound') {\n                    // It's a private type and we don't want to expose it and no need to check\n                    this._events[eventName] = event;\n                }\n                // It's a private type and we don't want to expose it and no need to check\n                this._events[abi.name] = event;\n                // It's a private type and we don't want to expose it and no need to check\n                this._events[eventSignature] = event;\n            }\n            result = [...result, abi];\n        }\n        this._events.allEvents = this._createContractEvent(web3_eth__WEBPACK_IMPORTED_MODULE_2__.ALL_EVENTS_ABI, returnFormat);\n        this._jsonInterface = [...result];\n        this._errorsInterface = errorsAbi;\n    }\n    // eslint-disable-next-line class-methods-use-this\n    _getAbiParams(abi, params) {\n        var _a;\n        try {\n            return web3_validator__WEBPACK_IMPORTED_MODULE_6__.utils.transformJsonDataToAbiFormat((_a = abi.inputs) !== null && _a !== void 0 ? _a : [], params);\n        }\n        catch (error) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_1__.Web3ContractError(`Invalid parameters for method ${abi.name}: ${error.message}`);\n        }\n    }\n    _createContractMethod(abiArr, errorsAbis, exact = false) {\n        const abi = abiArr[abiArr.length - 1];\n        return (...params) => {\n            var _a, _b, _c;\n            let abiParams;\n            const abis = (_b = (exact\n                ? (_a = this._overloadedMethodAbis\n                    .get(abi.name)) === null || _a === void 0 ? void 0 : _a.filter(_abi => _abi.signature === abi.signature)\n                : this._overloadedMethodAbis.get(abi.name))) !== null && _b !== void 0 ? _b : [];\n            let methodAbi = abis[0];\n            const internalErrorsAbis = errorsAbis;\n            const arrayOfAbis = abis.filter(_abi => { var _a; return ((_a = _abi.inputs) !== null && _a !== void 0 ? _a : []).length === params.length; });\n            if (abis.length === 1 || arrayOfAbis.length === 0) {\n                abiParams = this._getAbiParams(methodAbi, params);\n                web3_validator__WEBPACK_IMPORTED_MODULE_6__.validator.validate((_c = abi.inputs) !== null && _c !== void 0 ? _c : [], abiParams);\n            }\n            else {\n                const errors = [];\n                // all the methods that have is valid for the given inputs\n                const applicableMethodAbi = [];\n                for (const _abi of arrayOfAbis) {\n                    try {\n                        abiParams = this._getAbiParams(_abi, params);\n                        web3_validator__WEBPACK_IMPORTED_MODULE_6__.validator.validate(_abi.inputs, abiParams);\n                        applicableMethodAbi.push(_abi);\n                    }\n                    catch (e) {\n                        errors.push(e);\n                    }\n                }\n                if (applicableMethodAbi.length === 1) {\n                    [methodAbi] = applicableMethodAbi; // take the first item that is the only item in the array\n                }\n                else if (applicableMethodAbi.length > 1) {\n                    [methodAbi] = applicableMethodAbi; // take the first item in the array\n                    console.warn(`Multiple methods found that is compatible with the given inputs.\\n\\tFound ${applicableMethodAbi.length} compatible methods: ${JSON.stringify(applicableMethodAbi.map(m => `${m.methodNameWithInputs} (signature: ${m.signature})`))} \\n\\tThe first one will be used: ${methodAbi.methodNameWithInputs}`);\n                    // TODO: 5.x Should throw a new error with the list of methods found.\n                    // Related issue: https://github.com/web3/web3.js/issues/6923\n                    // This is in order to provide an error message when there is more than one method found that fits the inputs.\n                    // To do that, replace the pervious line of code with something like the following line:\n                    // throw new Web3ValidatorError({ message: 'Multiple methods found',  ... list of applicable methods }));\n                }\n                if (errors.length === arrayOfAbis.length) {\n                    throw new web3_validator__WEBPACK_IMPORTED_MODULE_6__.Web3ValidatorError(errors);\n                }\n            }\n            const methods = {\n                arguments: abiParams,\n                call: (options, block) => __awaiter(this, void 0, void 0, function* () {\n                    return this._contractMethodCall(methodAbi, abiParams, internalErrorsAbis, options, block);\n                }),\n                send: (options) => this._contractMethodSend(methodAbi, abiParams, internalErrorsAbis, options),\n                populateTransaction: (options, contractOptions) => {\n                    var _a, _b;\n                    let modifiedContractOptions = contractOptions !== null && contractOptions !== void 0 ? contractOptions : this.options;\n                    modifiedContractOptions = Object.assign(Object.assign({}, modifiedContractOptions), { input: undefined, from: (_b = (_a = modifiedContractOptions === null || modifiedContractOptions === void 0 ? void 0 : modifiedContractOptions.from) !== null && _a !== void 0 ? _a : this.defaultAccount) !== null && _b !== void 0 ? _b : undefined });\n                    const tx = (0,_utils_js__WEBPACK_IMPORTED_MODULE_9__.getSendTxParams)({\n                        abi,\n                        params,\n                        options: Object.assign(Object.assign({}, options), { dataInputFill: this.config.contractDataInputFill }),\n                        contractOptions: modifiedContractOptions,\n                    });\n                    // @ts-expect-error remove unnecessary field\n                    if (tx.dataInputFill) {\n                        // @ts-expect-error remove unnecessary field\n                        delete tx.dataInputFill;\n                    }\n                    return tx;\n                },\n                estimateGas: (options_1, ...args_1) => __awaiter(this, [options_1, ...args_1], void 0, function* (options, returnFormat = this\n                    .defaultReturnFormat) {\n                    return this.contractMethodEstimateGas({\n                        abi: methodAbi,\n                        params: abiParams,\n                        returnFormat,\n                        options,\n                    });\n                }),\n                encodeABI: () => (0,_encoding_js__WEBPACK_IMPORTED_MODULE_7__.encodeMethodABI)(methodAbi, abiParams),\n                decodeData: (data) => (0,web3_eth_abi__WEBPACK_IMPORTED_MODULE_3__.decodeFunctionCall)(methodAbi, data),\n                createAccessList: (options, block) => __awaiter(this, void 0, void 0, function* () {\n                    return this._contractMethodCreateAccessList(methodAbi, abiParams, internalErrorsAbis, options, block);\n                }),\n            };\n            if (methodAbi.stateMutability === 'payable') {\n                return methods;\n            }\n            return methods;\n        };\n    }\n    _contractMethodCall(abi, params, errorsAbi, options, block) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            const tx = (0,_utils_js__WEBPACK_IMPORTED_MODULE_9__.getEthTxCallParams)({\n                abi,\n                params,\n                options: Object.assign(Object.assign({}, options), { dataInputFill: this.config.contractDataInputFill }),\n                contractOptions: Object.assign(Object.assign({}, this.options), { from: (_a = this.options.from) !== null && _a !== void 0 ? _a : this.config.defaultAccount }),\n            });\n            try {\n                const result = yield (0,web3_eth__WEBPACK_IMPORTED_MODULE_2__.call)(this, tx, block, this.defaultReturnFormat);\n                return (0,web3_eth_abi__WEBPACK_IMPORTED_MODULE_3__.decodeFunctionReturn)(abi, result);\n            }\n            catch (error) {\n                if (error instanceof web3_errors__WEBPACK_IMPORTED_MODULE_1__.ContractExecutionError) {\n                    // this will parse the error data by trying to decode the ABI error inputs according to EIP-838\n                    (0,web3_eth_abi__WEBPACK_IMPORTED_MODULE_3__.decodeContractErrorData)(errorsAbi, error.cause);\n                }\n                throw error;\n            }\n        });\n    }\n    _contractMethodCreateAccessList(abi, params, errorsAbi, options, block) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            const tx = (0,_utils_js__WEBPACK_IMPORTED_MODULE_9__.getCreateAccessListParams)({\n                abi,\n                params,\n                options: Object.assign(Object.assign({}, options), { dataInputFill: this.config.contractDataInputFill }),\n                contractOptions: Object.assign(Object.assign({}, this.options), { from: (_a = this.options.from) !== null && _a !== void 0 ? _a : this.config.defaultAccount }),\n            });\n            try {\n                return (0,web3_eth__WEBPACK_IMPORTED_MODULE_2__.createAccessList)(this, tx, block, this.defaultReturnFormat);\n            }\n            catch (error) {\n                if (error instanceof web3_errors__WEBPACK_IMPORTED_MODULE_1__.ContractExecutionError) {\n                    // this will parse the error data by trying to decode the ABI error inputs according to EIP-838\n                    (0,web3_eth_abi__WEBPACK_IMPORTED_MODULE_3__.decodeContractErrorData)(errorsAbi, error.cause);\n                }\n                throw error;\n            }\n        });\n    }\n    _contractMethodSend(abi, params, errorsAbi, options, contractOptions) {\n        var _a, _b;\n        let modifiedContractOptions = contractOptions !== null && contractOptions !== void 0 ? contractOptions : this.options;\n        modifiedContractOptions = Object.assign(Object.assign({}, modifiedContractOptions), { input: undefined, from: (_b = (_a = modifiedContractOptions.from) !== null && _a !== void 0 ? _a : this.defaultAccount) !== null && _b !== void 0 ? _b : undefined });\n        const tx = (0,_utils_js__WEBPACK_IMPORTED_MODULE_9__.getSendTxParams)({\n            abi,\n            params,\n            options: Object.assign(Object.assign({}, options), { dataInputFill: this.config.contractDataInputFill }),\n            contractOptions: modifiedContractOptions,\n        });\n        const transactionToSend = (0,web3_validator__WEBPACK_IMPORTED_MODULE_6__.isNullish)(this.transactionMiddleware)\n            ? (0,web3_eth__WEBPACK_IMPORTED_MODULE_2__.sendTransaction)(this, tx, this.defaultReturnFormat, {\n                // TODO Should make this configurable by the user\n                checkRevertBeforeSending: false,\n                contractAbi: this._jsonInterface, // explicitly not passing middleware so if some one is using old eth package it will not break\n            })\n            : (0,web3_eth__WEBPACK_IMPORTED_MODULE_2__.sendTransaction)(this, tx, this.defaultReturnFormat, {\n                // TODO Should make this configurable by the user\n                checkRevertBeforeSending: false,\n                contractAbi: this._jsonInterface,\n            }, this.transactionMiddleware);\n        // eslint-disable-next-line no-void\n        void transactionToSend.on('error', (error) => {\n            if (error instanceof web3_errors__WEBPACK_IMPORTED_MODULE_1__.ContractExecutionError) {\n                // this will parse the error data by trying to decode the ABI error inputs according to EIP-838\n                (0,web3_eth_abi__WEBPACK_IMPORTED_MODULE_3__.decodeContractErrorData)(errorsAbi, error.cause);\n            }\n        });\n        return transactionToSend;\n    }\n    contractMethodEstimateGas(_a) {\n        return __awaiter(this, arguments, void 0, function* ({ abi, params, returnFormat, options, contractOptions, }) {\n            const tx = (0,_utils_js__WEBPACK_IMPORTED_MODULE_9__.getEstimateGasParams)({\n                abi,\n                params,\n                options: Object.assign(Object.assign({}, options), { dataInputFill: this.config.contractDataInputFill }),\n                contractOptions: contractOptions !== null && contractOptions !== void 0 ? contractOptions : this.options,\n            });\n            return (0,web3_eth__WEBPACK_IMPORTED_MODULE_2__.estimateGas)(this, tx, web3_types__WEBPACK_IMPORTED_MODULE_4__.BlockTags.LATEST, returnFormat !== null && returnFormat !== void 0 ? returnFormat : this.defaultReturnFormat);\n        });\n    }\n    // eslint-disable-next-line class-methods-use-this\n    _createContractEvent(abi, returnFormat = this.defaultReturnFormat) {\n        return (...params) => {\n            var _a;\n            const { topics, fromBlock } = (0,_encoding_js__WEBPACK_IMPORTED_MODULE_7__.encodeEventABI)(this.options, abi, params[0]);\n            const sub = new _contract_log_subscription_js__WEBPACK_IMPORTED_MODULE_8__.ContractLogsSubscription({\n                address: this.options.address,\n                topics,\n                abi,\n                jsonInterface: this._jsonInterface,\n            }, {\n                subscriptionManager: this.subscriptionManager,\n                returnFormat,\n            });\n            if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_6__.isNullish)(fromBlock)) {\n                // emit past events when fromBlock is defined\n                this.getPastEvents(abi.name, { fromBlock, topics }, returnFormat)\n                    .then(logs => {\n                    if (logs) {\n                        logs.forEach(log => sub.emit('data', log));\n                    }\n                })\n                    .catch((error) => {\n                    sub.emit('error', new web3_errors__WEBPACK_IMPORTED_MODULE_1__.SubscriptionError('Failed to get past events.', error));\n                });\n            }\n            (_a = this.subscriptionManager) === null || _a === void 0 ? void 0 : _a.addSubscription(sub).catch((error) => {\n                sub.emit('error', new web3_errors__WEBPACK_IMPORTED_MODULE_1__.SubscriptionError('Failed to subscribe.', error));\n            });\n            return sub;\n        };\n    }\n    subscribeToContextEvents(context) {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const contractThis = this;\n        this.context = context;\n        if (contractThis.syncWithContext) {\n            context.on(web3_core__WEBPACK_IMPORTED_MODULE_0__.Web3ConfigEvent.CONFIG_CHANGE, event => {\n                contractThis.setConfig({ [event.name]: event.newValue });\n            });\n        }\n    }\n}\n//# sourceMappingURL=contract.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-contract/lib/esm/contract.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-contract/lib/esm/contract_log_subscription.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/web3-eth-contract/lib/esm/contract_log_subscription.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ContractLogsSubscription: () => (/* binding */ ContractLogsSubscription),\n/* harmony export */   LogsSubscription: () => (/* binding */ LogsSubscription)\n/* harmony export */ });\n/* harmony import */ var web3_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-core */ \"(ssr)/./node_modules/web3-core/lib/esm/index.js\");\n/* harmony import */ var web3_eth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-eth */ \"(ssr)/./node_modules/web3-eth/lib/esm/index.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\n/**\n * ContractLogsSubscription to be used to subscribe to events logs.\n *\n * Following events are supported and can be accessed with either {@link ContractLogsSubscription.once} or ${@link ContractLogsSubscription.on} methods.\n *\n * - **connected**: Emitted when the subscription is connected.\n * - **data**: Fires on each incoming event with the event object as argument.\n * - **changed**: Fires on each event which was removed from the blockchain. The event will have the additional property `removed: true`.\n * - **error**: Fires on each error.\n *\n * ```ts\n * const subscription = await myContract.events.MyEvent({\n *   filter: {myIndexedParam: [20,23], myOtherIndexedParam: '0x123456789...'}, // Using an array means OR: e.g. 20 or 23\n *   fromBlock: 0\n * });\n *\n * subscription.on(\"connected\", function(subscriptionId){\n *   console.log(subscriptionId);\n * });\n *\n * subscription.on('data', function(event){\n *   console.log(event); // same results as the optional callback above\n * });\n *\n * subscription.on('changed', function(event){\n *   // remove event from local database\n * })\n *\n * subscription.on('error', function(error, receipt) { // If the transaction was rejected by the network with a receipt, the second parameter will be the receipt.\n *   ...\n * });\n *\n * // event output example\n * > {\n *   returnValues: {\n *       myIndexedParam: 20,\n *       myOtherIndexedParam: '0x123456789...',\n *       myNonIndexParam: 'My String'\n *   },\n *   raw: {\n *       data: '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385',\n *       topics: ['0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7', '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385']\n *   },\n *   event: 'MyEvent',\n *   signature: '0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7',\n *   logIndex: 0,\n *   transactionIndex: 0,\n *   transactionHash: '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385',\n *   blockHash: '0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7',\n *   blockNumber: 1234,\n *   address: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'\n * }\n * ```\n */\nclass ContractLogsSubscription extends web3_core__WEBPACK_IMPORTED_MODULE_0__.Web3Subscription {\n    constructor(args, options) {\n        super(args, options);\n        this.address = args.address;\n        this.topics = args.topics;\n        this.abi = args.abi;\n        this.jsonInterface = args.jsonInterface;\n    }\n    _buildSubscriptionParams() {\n        return ['logs', { address: this.address, topics: this.topics }];\n    }\n    formatSubscriptionResult(data) {\n        return (0,web3_eth__WEBPACK_IMPORTED_MODULE_1__.decodeEventABI)(this.abi, data, this.jsonInterface, super.returnFormat);\n    }\n}\n/**\n * @deprecated LogsSubscription is renamed to ContractLogsSubscription in this package to not be confused with LogsSubscription at 'web3-eth'.\n */\nconst LogsSubscription = ContractLogsSubscription;\n//# sourceMappingURL=contract_log_subscription.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtY29udHJhY3QvbGliL2VzbS9jb250cmFjdF9sb2dfc3Vic2NyaXB0aW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQzZDO0FBQ0g7QUFDMUM7QUFDQTtBQUNBO0FBQ0EsbUVBQW1FLHFDQUFxQyxLQUFLLG1DQUFtQztBQUNoSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYywrREFBK0Q7QUFDN0U7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekIsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBLHVEQUF1RDtBQUN2RDtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLHVDQUF1Qyx1REFBZ0I7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQiw0Q0FBNEM7QUFDdEU7QUFDQTtBQUNBLGVBQWUsd0RBQWM7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tb3JwaC1wYXktc2RrLy4vbm9kZV9tb2R1bGVzL3dlYjMtZXRoLWNvbnRyYWN0L2xpYi9lc20vY29udHJhY3RfbG9nX3N1YnNjcmlwdGlvbi5qcz85MDI0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5UaGlzIGZpbGUgaXMgcGFydCBvZiB3ZWIzLmpzLlxuXG53ZWIzLmpzIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbml0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxudGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbihhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG5cbndlYjMuanMgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbmJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG5NRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG5HTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cblxuWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG5hbG9uZyB3aXRoIHdlYjMuanMuICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4qL1xuaW1wb3J0IHsgV2ViM1N1YnNjcmlwdGlvbiB9IGZyb20gJ3dlYjMtY29yZSc7XG5pbXBvcnQgeyBkZWNvZGVFdmVudEFCSSB9IGZyb20gJ3dlYjMtZXRoJztcbi8qKlxuICogQ29udHJhY3RMb2dzU3Vic2NyaXB0aW9uIHRvIGJlIHVzZWQgdG8gc3Vic2NyaWJlIHRvIGV2ZW50cyBsb2dzLlxuICpcbiAqIEZvbGxvd2luZyBldmVudHMgYXJlIHN1cHBvcnRlZCBhbmQgY2FuIGJlIGFjY2Vzc2VkIHdpdGggZWl0aGVyIHtAbGluayBDb250cmFjdExvZ3NTdWJzY3JpcHRpb24ub25jZX0gb3IgJHtAbGluayBDb250cmFjdExvZ3NTdWJzY3JpcHRpb24ub259IG1ldGhvZHMuXG4gKlxuICogLSAqKmNvbm5lY3RlZCoqOiBFbWl0dGVkIHdoZW4gdGhlIHN1YnNjcmlwdGlvbiBpcyBjb25uZWN0ZWQuXG4gKiAtICoqZGF0YSoqOiBGaXJlcyBvbiBlYWNoIGluY29taW5nIGV2ZW50IHdpdGggdGhlIGV2ZW50IG9iamVjdCBhcyBhcmd1bWVudC5cbiAqIC0gKipjaGFuZ2VkKio6IEZpcmVzIG9uIGVhY2ggZXZlbnQgd2hpY2ggd2FzIHJlbW92ZWQgZnJvbSB0aGUgYmxvY2tjaGFpbi4gVGhlIGV2ZW50IHdpbGwgaGF2ZSB0aGUgYWRkaXRpb25hbCBwcm9wZXJ0eSBgcmVtb3ZlZDogdHJ1ZWAuXG4gKiAtICoqZXJyb3IqKjogRmlyZXMgb24gZWFjaCBlcnJvci5cbiAqXG4gKiBgYGB0c1xuICogY29uc3Qgc3Vic2NyaXB0aW9uID0gYXdhaXQgbXlDb250cmFjdC5ldmVudHMuTXlFdmVudCh7XG4gKiAgIGZpbHRlcjoge215SW5kZXhlZFBhcmFtOiBbMjAsMjNdLCBteU90aGVySW5kZXhlZFBhcmFtOiAnMHgxMjM0NTY3ODkuLi4nfSwgLy8gVXNpbmcgYW4gYXJyYXkgbWVhbnMgT1I6IGUuZy4gMjAgb3IgMjNcbiAqICAgZnJvbUJsb2NrOiAwXG4gKiB9KTtcbiAqXG4gKiBzdWJzY3JpcHRpb24ub24oXCJjb25uZWN0ZWRcIiwgZnVuY3Rpb24oc3Vic2NyaXB0aW9uSWQpe1xuICogICBjb25zb2xlLmxvZyhzdWJzY3JpcHRpb25JZCk7XG4gKiB9KTtcbiAqXG4gKiBzdWJzY3JpcHRpb24ub24oJ2RhdGEnLCBmdW5jdGlvbihldmVudCl7XG4gKiAgIGNvbnNvbGUubG9nKGV2ZW50KTsgLy8gc2FtZSByZXN1bHRzIGFzIHRoZSBvcHRpb25hbCBjYWxsYmFjayBhYm92ZVxuICogfSk7XG4gKlxuICogc3Vic2NyaXB0aW9uLm9uKCdjaGFuZ2VkJywgZnVuY3Rpb24oZXZlbnQpe1xuICogICAvLyByZW1vdmUgZXZlbnQgZnJvbSBsb2NhbCBkYXRhYmFzZVxuICogfSlcbiAqXG4gKiBzdWJzY3JpcHRpb24ub24oJ2Vycm9yJywgZnVuY3Rpb24oZXJyb3IsIHJlY2VpcHQpIHsgLy8gSWYgdGhlIHRyYW5zYWN0aW9uIHdhcyByZWplY3RlZCBieSB0aGUgbmV0d29yayB3aXRoIGEgcmVjZWlwdCwgdGhlIHNlY29uZCBwYXJhbWV0ZXIgd2lsbCBiZSB0aGUgcmVjZWlwdC5cbiAqICAgLi4uXG4gKiB9KTtcbiAqXG4gKiAvLyBldmVudCBvdXRwdXQgZXhhbXBsZVxuICogPiB7XG4gKiAgIHJldHVyblZhbHVlczoge1xuICogICAgICAgbXlJbmRleGVkUGFyYW06IDIwLFxuICogICAgICAgbXlPdGhlckluZGV4ZWRQYXJhbTogJzB4MTIzNDU2Nzg5Li4uJyxcbiAqICAgICAgIG15Tm9uSW5kZXhQYXJhbTogJ015IFN0cmluZydcbiAqICAgfSxcbiAqICAgcmF3OiB7XG4gKiAgICAgICBkYXRhOiAnMHg3ZjlmYWRlMWMwZDU3YTdhZjY2YWI0ZWFkNzlmYWRlMWMwZDU3YTdhZjY2YWI0ZWFkN2MyYzJlYjdiMTFhOTEzODUnLFxuICogICAgICAgdG9waWNzOiBbJzB4ZmQ0M2FkZTFjMDlmYWRlMWMwZDU3YTdhZjY2YWI0ZWFkN2MyYzJlYjdiMTFhOTFmZmRkNTdhN2FmNjZhYjRlYWQ3JywgJzB4N2Y5ZmFkZTFjMGQ1N2E3YWY2NmFiNGVhZDc5ZmFkZTFjMGQ1N2E3YWY2NmFiNGVhZDdjMmMyZWI3YjExYTkxMzg1J11cbiAqICAgfSxcbiAqICAgZXZlbnQ6ICdNeUV2ZW50JyxcbiAqICAgc2lnbmF0dXJlOiAnMHhmZDQzYWRlMWMwOWZhZGUxYzBkNTdhN2FmNjZhYjRlYWQ3YzJjMmViN2IxMWE5MWZmZGQ1N2E3YWY2NmFiNGVhZDcnLFxuICogICBsb2dJbmRleDogMCxcbiAqICAgdHJhbnNhY3Rpb25JbmRleDogMCxcbiAqICAgdHJhbnNhY3Rpb25IYXNoOiAnMHg3ZjlmYWRlMWMwZDU3YTdhZjY2YWI0ZWFkNzlmYWRlMWMwZDU3YTdhZjY2YWI0ZWFkN2MyYzJlYjdiMTFhOTEzODUnLFxuICogICBibG9ja0hhc2g6ICcweGZkNDNhZGUxYzA5ZmFkZTFjMGQ1N2E3YWY2NmFiNGVhZDdjMmMyZWI3YjExYTkxZmZkZDU3YTdhZjY2YWI0ZWFkNycsXG4gKiAgIGJsb2NrTnVtYmVyOiAxMjM0LFxuICogICBhZGRyZXNzOiAnMHhkZTBCMjk1NjY5YTlGRDkzZDVGMjhEOUVjODVFNDBmNGNiNjk3QkFlJ1xuICogfVxuICogYGBgXG4gKi9cbmV4cG9ydCBjbGFzcyBDb250cmFjdExvZ3NTdWJzY3JpcHRpb24gZXh0ZW5kcyBXZWIzU3Vic2NyaXB0aW9uIHtcbiAgICBjb25zdHJ1Y3RvcihhcmdzLCBvcHRpb25zKSB7XG4gICAgICAgIHN1cGVyKGFyZ3MsIG9wdGlvbnMpO1xuICAgICAgICB0aGlzLmFkZHJlc3MgPSBhcmdzLmFkZHJlc3M7XG4gICAgICAgIHRoaXMudG9waWNzID0gYXJncy50b3BpY3M7XG4gICAgICAgIHRoaXMuYWJpID0gYXJncy5hYmk7XG4gICAgICAgIHRoaXMuanNvbkludGVyZmFjZSA9IGFyZ3MuanNvbkludGVyZmFjZTtcbiAgICB9XG4gICAgX2J1aWxkU3Vic2NyaXB0aW9uUGFyYW1zKCkge1xuICAgICAgICByZXR1cm4gWydsb2dzJywgeyBhZGRyZXNzOiB0aGlzLmFkZHJlc3MsIHRvcGljczogdGhpcy50b3BpY3MgfV07XG4gICAgfVxuICAgIGZvcm1hdFN1YnNjcmlwdGlvblJlc3VsdChkYXRhKSB7XG4gICAgICAgIHJldHVybiBkZWNvZGVFdmVudEFCSSh0aGlzLmFiaSwgZGF0YSwgdGhpcy5qc29uSW50ZXJmYWNlLCBzdXBlci5yZXR1cm5Gb3JtYXQpO1xuICAgIH1cbn1cbi8qKlxuICogQGRlcHJlY2F0ZWQgTG9nc1N1YnNjcmlwdGlvbiBpcyByZW5hbWVkIHRvIENvbnRyYWN0TG9nc1N1YnNjcmlwdGlvbiBpbiB0aGlzIHBhY2thZ2UgdG8gbm90IGJlIGNvbmZ1c2VkIHdpdGggTG9nc1N1YnNjcmlwdGlvbiBhdCAnd2ViMy1ldGgnLlxuICovXG5leHBvcnQgY29uc3QgTG9nc1N1YnNjcmlwdGlvbiA9IENvbnRyYWN0TG9nc1N1YnNjcmlwdGlvbjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnRyYWN0X2xvZ19zdWJzY3JpcHRpb24uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-contract/lib/esm/contract_log_subscription.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-contract/lib/esm/encoding.js":
/*!************************************************************!*\
  !*** ./node_modules/web3-eth-contract/lib/esm/encoding.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeEventABI: () => (/* reexport safe */ web3_eth__WEBPACK_IMPORTED_MODULE_3__.decodeEventABI),\n/* harmony export */   decodeMethodParams: () => (/* binding */ decodeMethodParams),\n/* harmony export */   decodeMethodReturn: () => (/* binding */ decodeMethodReturn),\n/* harmony export */   encodeEventABI: () => (/* binding */ encodeEventABI),\n/* harmony export */   encodeMethodABI: () => (/* binding */ encodeMethodABI)\n/* harmony export */ });\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-types */ \"(ssr)/./node_modules/web3-types/lib/esm/index.js\");\n/* harmony import */ var web3_eth_abi__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-eth-abi */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/index.js\");\n/* harmony import */ var web3_eth__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3-eth */ \"(ssr)/./node_modules/web3-eth/lib/esm/index.js\");\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\n\n\n\n\nconst encodeEventABI = ({ address }, event, options) => {\n    var _a, _b;\n    const topics = options === null || options === void 0 ? void 0 : options.topics;\n    const filter = (_a = options === null || options === void 0 ? void 0 : options.filter) !== null && _a !== void 0 ? _a : {};\n    const opts = {};\n    if (!(0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.isNullish)(options === null || options === void 0 ? void 0 : options.fromBlock)) {\n        opts.fromBlock = (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)(web3_eth__WEBPACK_IMPORTED_MODULE_3__.blockSchema.properties.number, options === null || options === void 0 ? void 0 : options.fromBlock, {\n            number: web3_types__WEBPACK_IMPORTED_MODULE_1__.FMT_NUMBER.HEX,\n            bytes: web3_types__WEBPACK_IMPORTED_MODULE_1__.FMT_BYTES.HEX,\n        });\n    }\n    if (!(0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.isNullish)(options === null || options === void 0 ? void 0 : options.toBlock)) {\n        opts.toBlock = (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)(web3_eth__WEBPACK_IMPORTED_MODULE_3__.blockSchema.properties.number, options === null || options === void 0 ? void 0 : options.toBlock, {\n            number: web3_types__WEBPACK_IMPORTED_MODULE_1__.FMT_NUMBER.HEX,\n            bytes: web3_types__WEBPACK_IMPORTED_MODULE_1__.FMT_BYTES.HEX,\n        });\n    }\n    if (topics && Array.isArray(topics)) {\n        opts.topics = [...topics];\n    }\n    else {\n        opts.topics = [];\n        // add event signature\n        if (event && !event.anonymous && ![web3_eth__WEBPACK_IMPORTED_MODULE_3__.ALL_EVENTS, 'allEvents'].includes(event.name)) {\n            opts.topics.push((_b = event.signature) !== null && _b !== void 0 ? _b : (0,web3_eth_abi__WEBPACK_IMPORTED_MODULE_2__.encodeEventSignature)((0,web3_eth_abi__WEBPACK_IMPORTED_MODULE_2__.jsonInterfaceMethodToString)(event)));\n        }\n        // add event topics (indexed arguments)\n        if (![web3_eth__WEBPACK_IMPORTED_MODULE_3__.ALL_EVENTS, 'allEvents'].includes(event.name) && event.inputs) {\n            for (const input of event.inputs) {\n                if (!input.indexed) {\n                    continue;\n                }\n                const value = filter[input.name];\n                if (!value) {\n                    // eslint-disable-next-line no-null/no-null\n                    opts.topics.push(null);\n                    continue;\n                }\n                // TODO: https://github.com/ethereum/web3.js/issues/344\n                // TODO: deal properly with components\n                if (Array.isArray(value)) {\n                    opts.topics.push(value.map(v => (0,web3_eth_abi__WEBPACK_IMPORTED_MODULE_2__.encodeParameter)(input.type, v)));\n                }\n                else if (input.type === 'string') {\n                    opts.topics.push((0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.keccak256)(value));\n                }\n                else {\n                    opts.topics.push((0,web3_eth_abi__WEBPACK_IMPORTED_MODULE_2__.encodeParameter)(input.type, value));\n                }\n            }\n        }\n    }\n    if (!opts.topics.length)\n        delete opts.topics;\n    if (address) {\n        opts.address = address.toLowerCase();\n    }\n    return opts;\n};\nconst encodeMethodABI = (abi, args, deployData) => {\n    const inputLength = Array.isArray(abi.inputs) ? abi.inputs.length : 0;\n    if (abi.inputs && inputLength !== args.length) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_4__.Web3ContractError(`The number of arguments is not matching the methods required number. You need to pass ${inputLength} arguments.`);\n    }\n    let params;\n    if (abi.inputs) {\n        params = (0,web3_eth_abi__WEBPACK_IMPORTED_MODULE_2__.encodeParameters)(Array.isArray(abi.inputs) ? abi.inputs : [], args).replace('0x', '');\n    }\n    else {\n        params = (0,web3_eth_abi__WEBPACK_IMPORTED_MODULE_2__.inferTypesAndEncodeParameters)(args).replace('0x', '');\n    }\n    if ((0,web3_eth_abi__WEBPACK_IMPORTED_MODULE_2__.isAbiConstructorFragment)(abi)) {\n        if (!deployData)\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_4__.Web3ContractError('The contract has no contract data option set. This is necessary to append the constructor parameters.');\n        if (!deployData.startsWith('0x')) {\n            return `0x${deployData}${params}`;\n        }\n        return `${deployData}${params}`;\n    }\n    return `${(0,web3_eth_abi__WEBPACK_IMPORTED_MODULE_2__.encodeFunctionSignature)(abi)}${params}`;\n};\n/** @deprecated import `decodeFunctionCall` from ''web3-eth-abi' instead. */\nconst decodeMethodParams = web3_eth_abi__WEBPACK_IMPORTED_MODULE_2__.decodeFunctionCall;\n/** @deprecated import `decodeFunctionReturn` from ''web3-eth-abi' instead. */\nconst decodeMethodReturn = web3_eth_abi__WEBPACK_IMPORTED_MODULE_2__.decodeFunctionReturn;\n//# sourceMappingURL=encoding.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-contract/lib/esm/encoding.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-contract/lib/esm/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/web3-eth-contract/lib/esm/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Contract: () => (/* reexport safe */ _contract_js__WEBPACK_IMPORTED_MODULE_0__.Contract),\n/* harmony export */   ContractLogsSubscription: () => (/* reexport safe */ _contract_log_subscription_js__WEBPACK_IMPORTED_MODULE_3__.ContractLogsSubscription),\n/* harmony export */   DeployerMethodClass: () => (/* reexport safe */ _contract_deployer_method_class_js__WEBPACK_IMPORTED_MODULE_2__.DeployerMethodClass),\n/* harmony export */   LogsSubscription: () => (/* reexport safe */ _contract_log_subscription_js__WEBPACK_IMPORTED_MODULE_3__.LogsSubscription),\n/* harmony export */   create2ContractAddress: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_5__.create2ContractAddress),\n/* harmony export */   createContractAddress: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_5__.createContractAddress),\n/* harmony export */   decodeEventABI: () => (/* reexport safe */ _encoding_js__WEBPACK_IMPORTED_MODULE_1__.decodeEventABI),\n/* harmony export */   decodeMethodParams: () => (/* reexport safe */ _encoding_js__WEBPACK_IMPORTED_MODULE_1__.decodeMethodParams),\n/* harmony export */   decodeMethodReturn: () => (/* reexport safe */ _encoding_js__WEBPACK_IMPORTED_MODULE_1__.decodeMethodReturn),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   encodeEventABI: () => (/* reexport safe */ _encoding_js__WEBPACK_IMPORTED_MODULE_1__.encodeEventABI),\n/* harmony export */   encodeMethodABI: () => (/* reexport safe */ _encoding_js__WEBPACK_IMPORTED_MODULE_1__.encodeMethodABI),\n/* harmony export */   getCreateAccessListParams: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_5__.getCreateAccessListParams),\n/* harmony export */   getEstimateGasParams: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_5__.getEstimateGasParams),\n/* harmony export */   getEthTxCallParams: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_5__.getEthTxCallParams),\n/* harmony export */   getSendTxParams: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_5__.getSendTxParams),\n/* harmony export */   isWeb3ContractContext: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_5__.isWeb3ContractContext)\n/* harmony export */ });\n/* harmony import */ var _contract_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./contract.js */ \"(ssr)/./node_modules/web3-eth-contract/lib/esm/contract.js\");\n/* harmony import */ var _encoding_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./encoding.js */ \"(ssr)/./node_modules/web3-eth-contract/lib/esm/encoding.js\");\n/* harmony import */ var _contract_deployer_method_class_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./contract-deployer-method-class.js */ \"(ssr)/./node_modules/web3-eth-contract/lib/esm/contract-deployer-method-class.js\");\n/* harmony import */ var _contract_log_subscription_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./contract_log_subscription.js */ \"(ssr)/./node_modules/web3-eth-contract/lib/esm/contract_log_subscription.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./types.js */ \"(ssr)/./node_modules/web3-eth-contract/lib/esm/types.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/web3-eth-contract/lib/esm/utils.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * The `web3.eth.Contract` object makes it easy to interact with smart contracts on the Ethereum blockchain.\n * When you create a new contract object you give it the JSON interface of the respective smart contract and\n * web3 will auto convert all calls into low level ABI calls over RPC for you.\n * This allows you to interact with smart contracts as if they were JavaScript objects.\n *\n * To use it standalone:\n *\n * ```ts\n * const Contract = require('web3-eth-contract');\n *\n * // set provider for all later instances to use\n * Contract.setProvider('ws://localhost:8546');\n *\n * const contract = new Contract(jsonInterface, address);\n *\n * contract.methods.somFunc().send({from: ....})\n * .on('receipt', function(){\n *    ...\n * });\n * ```\n */\n/**\n * This comment _supports3_ [Markdown](https://marked.js.org/)\n */\n\n\n\n\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_contract_js__WEBPACK_IMPORTED_MODULE_0__.Contract);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtY29udHJhY3QvbGliL2VzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSwwQkFBMEI7QUFDMUI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQyxXQUFXO0FBQy9DO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUN5QztBQUNYO0FBQ0E7QUFDc0I7QUFDTDtBQUNwQjtBQUNBO0FBQzNCLGlFQUFlLGtEQUFRLEVBQUM7QUFDeEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tb3JwaC1wYXktc2RrLy4vbm9kZV9tb2R1bGVzL3dlYjMtZXRoLWNvbnRyYWN0L2xpYi9lc20vaW5kZXguanM/NTdlMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuVGhpcyBmaWxlIGlzIHBhcnQgb2Ygd2ViMy5qcy5cblxud2ViMy5qcyBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG5pdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbnRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4oYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuXG53ZWIzLmpzIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG5idXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG5cbllvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuYWxvbmcgd2l0aCB3ZWIzLmpzLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuKi9cbi8qKlxuICogVGhlIGB3ZWIzLmV0aC5Db250cmFjdGAgb2JqZWN0IG1ha2VzIGl0IGVhc3kgdG8gaW50ZXJhY3Qgd2l0aCBzbWFydCBjb250cmFjdHMgb24gdGhlIEV0aGVyZXVtIGJsb2NrY2hhaW4uXG4gKiBXaGVuIHlvdSBjcmVhdGUgYSBuZXcgY29udHJhY3Qgb2JqZWN0IHlvdSBnaXZlIGl0IHRoZSBKU09OIGludGVyZmFjZSBvZiB0aGUgcmVzcGVjdGl2ZSBzbWFydCBjb250cmFjdCBhbmRcbiAqIHdlYjMgd2lsbCBhdXRvIGNvbnZlcnQgYWxsIGNhbGxzIGludG8gbG93IGxldmVsIEFCSSBjYWxscyBvdmVyIFJQQyBmb3IgeW91LlxuICogVGhpcyBhbGxvd3MgeW91IHRvIGludGVyYWN0IHdpdGggc21hcnQgY29udHJhY3RzIGFzIGlmIHRoZXkgd2VyZSBKYXZhU2NyaXB0IG9iamVjdHMuXG4gKlxuICogVG8gdXNlIGl0IHN0YW5kYWxvbmU6XG4gKlxuICogYGBgdHNcbiAqIGNvbnN0IENvbnRyYWN0ID0gcmVxdWlyZSgnd2ViMy1ldGgtY29udHJhY3QnKTtcbiAqXG4gKiAvLyBzZXQgcHJvdmlkZXIgZm9yIGFsbCBsYXRlciBpbnN0YW5jZXMgdG8gdXNlXG4gKiBDb250cmFjdC5zZXRQcm92aWRlcignd3M6Ly9sb2NhbGhvc3Q6ODU0NicpO1xuICpcbiAqIGNvbnN0IGNvbnRyYWN0ID0gbmV3IENvbnRyYWN0KGpzb25JbnRlcmZhY2UsIGFkZHJlc3MpO1xuICpcbiAqIGNvbnRyYWN0Lm1ldGhvZHMuc29tRnVuYygpLnNlbmQoe2Zyb206IC4uLi59KVxuICogLm9uKCdyZWNlaXB0JywgZnVuY3Rpb24oKXtcbiAqICAgIC4uLlxuICogfSk7XG4gKiBgYGBcbiAqL1xuLyoqXG4gKiBUaGlzIGNvbW1lbnQgX3N1cHBvcnRzM18gW01hcmtkb3duXShodHRwczovL21hcmtlZC5qcy5vcmcvKVxuICovXG5pbXBvcnQgeyBDb250cmFjdCB9IGZyb20gJy4vY29udHJhY3QuanMnO1xuZXhwb3J0ICogZnJvbSAnLi9lbmNvZGluZy5qcyc7XG5leHBvcnQgKiBmcm9tICcuL2NvbnRyYWN0LmpzJztcbmV4cG9ydCAqIGZyb20gJy4vY29udHJhY3QtZGVwbG95ZXItbWV0aG9kLWNsYXNzLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vY29udHJhY3RfbG9nX3N1YnNjcmlwdGlvbi5qcyc7XG5leHBvcnQgKiBmcm9tICcuL3R5cGVzLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vdXRpbHMuanMnO1xuZXhwb3J0IGRlZmF1bHQgQ29udHJhY3Q7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-contract/lib/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-contract/lib/esm/types.js":
/*!*********************************************************!*\
  !*** ./node_modules/web3-eth-contract/lib/esm/types.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtY29udHJhY3QvbGliL2VzbS90eXBlcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNVO0FBQ1YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tb3JwaC1wYXktc2RrLy4vbm9kZV9tb2R1bGVzL3dlYjMtZXRoLWNvbnRyYWN0L2xpYi9lc20vdHlwZXMuanM/ZmY2MSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuVGhpcyBmaWxlIGlzIHBhcnQgb2Ygd2ViMy5qcy5cblxud2ViMy5qcyBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG5pdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbnRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4oYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuXG53ZWIzLmpzIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG5idXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG5cbllvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuYWxvbmcgd2l0aCB3ZWIzLmpzLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuKi9cbmV4cG9ydCB7fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXR5cGVzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-contract/lib/esm/types.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-contract/lib/esm/utils.js":
/*!*********************************************************!*\
  !*** ./node_modules/web3-eth-contract/lib/esm/utils.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   create2ContractAddress: () => (/* binding */ create2ContractAddress),\n/* harmony export */   createContractAddress: () => (/* binding */ createContractAddress),\n/* harmony export */   getCreateAccessListParams: () => (/* binding */ getCreateAccessListParams),\n/* harmony export */   getEstimateGasParams: () => (/* binding */ getEstimateGasParams),\n/* harmony export */   getEthTxCallParams: () => (/* binding */ getEthTxCallParams),\n/* harmony export */   getSendTxParams: () => (/* binding */ getSendTxParams),\n/* harmony export */   isWeb3ContractContext: () => (/* binding */ isWeb3ContractContext)\n/* harmony export */ });\n/* harmony import */ var _ethereumjs_rlp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethereumjs/rlp */ \"(ssr)/./node_modules/web3-eth-contract/node_modules/@ethereumjs/rlp/dist/esm/index.js\");\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var _encoding_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./encoding.js */ \"(ssr)/./node_modules/web3-eth-contract/lib/esm/encoding.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\n\n\n\nconst dataInputEncodeMethodHelper = (txParams, abi, params, dataInputFill) => {\n    var _a, _b;\n    const tx = {};\n    if (!(0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.isNullish)(txParams.data) || dataInputFill === 'both') {\n        tx.data = (0,_encoding_js__WEBPACK_IMPORTED_MODULE_4__.encodeMethodABI)(abi, params, ((_a = txParams.data) !== null && _a !== void 0 ? _a : txParams.input));\n    }\n    if (!(0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.isNullish)(txParams.input) || dataInputFill === 'both') {\n        tx.input = (0,_encoding_js__WEBPACK_IMPORTED_MODULE_4__.encodeMethodABI)(abi, params, ((_b = txParams.input) !== null && _b !== void 0 ? _b : txParams.data));\n    }\n    // if input and data is empty, use web3config default\n    if ((0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.isNullish)(tx.input) && (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.isNullish)(tx.data)) {\n        tx[dataInputFill] = (0,_encoding_js__WEBPACK_IMPORTED_MODULE_4__.encodeMethodABI)(abi, params);\n    }\n    return { data: tx.data, input: tx.input };\n};\nconst getSendTxParams = ({ abi, params, options, contractOptions, }) => {\n    var _a, _b, _c;\n    const deploymentCall = (_c = (_b = (_a = options === null || options === void 0 ? void 0 : options.input) !== null && _a !== void 0 ? _a : options === null || options === void 0 ? void 0 : options.data) !== null && _b !== void 0 ? _b : contractOptions.input) !== null && _c !== void 0 ? _c : contractOptions.data;\n    if (!deploymentCall && !(options === null || options === void 0 ? void 0 : options.to) && !contractOptions.address) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_1__.Web3ContractError('Contract address not specified');\n    }\n    if (!(options === null || options === void 0 ? void 0 : options.from) && !contractOptions.from) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_1__.Web3ContractError('Contract \"from\" address not specified');\n    }\n    let txParams = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.mergeDeep)({\n        to: contractOptions.address,\n        gas: contractOptions.gas,\n        gasPrice: contractOptions.gasPrice,\n        from: contractOptions.from,\n        input: contractOptions.input,\n        maxPriorityFeePerGas: contractOptions.maxPriorityFeePerGas,\n        maxFeePerGas: contractOptions.maxFeePerGas,\n        data: contractOptions.data,\n    }, options);\n    const dataInput = dataInputEncodeMethodHelper(txParams, abi, params, options === null || options === void 0 ? void 0 : options.dataInputFill);\n    txParams = Object.assign(Object.assign({}, txParams), { data: dataInput.data, input: dataInput.input });\n    return txParams;\n};\nconst getEthTxCallParams = ({ abi, params, options, contractOptions, }) => {\n    if (!(options === null || options === void 0 ? void 0 : options.to) && !contractOptions.address) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_1__.Web3ContractError('Contract address not specified');\n    }\n    let txParams = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.mergeDeep)({\n        to: contractOptions.address,\n        gas: contractOptions.gas,\n        gasPrice: contractOptions.gasPrice,\n        from: contractOptions.from,\n        input: contractOptions.input,\n        maxPriorityFeePerGas: contractOptions.maxPriorityFeePerGas,\n        maxFeePerGas: contractOptions.maxFeePerGas,\n        data: contractOptions.data,\n    }, options);\n    const dataInput = dataInputEncodeMethodHelper(txParams, abi, params, options === null || options === void 0 ? void 0 : options.dataInputFill);\n    txParams = Object.assign(Object.assign({}, txParams), { data: dataInput.data, input: dataInput.input });\n    return txParams;\n};\nconst getEstimateGasParams = ({ abi, params, options, contractOptions, }) => {\n    let txParams = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.mergeDeep)({\n        to: contractOptions.address,\n        gas: contractOptions.gas,\n        gasPrice: contractOptions.gasPrice,\n        from: contractOptions.from,\n        input: contractOptions.input,\n        data: contractOptions.data,\n    }, options);\n    const dataInput = dataInputEncodeMethodHelper(txParams, abi, params, options === null || options === void 0 ? void 0 : options.dataInputFill);\n    txParams = Object.assign(Object.assign({}, txParams), { data: dataInput.data, input: dataInput.input });\n    return txParams;\n};\nconst isWeb3ContractContext = (options) => typeof options === 'object' &&\n    !(0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.isNullish)(options) &&\n    Object.keys(options).length !== 0 &&\n    !(0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.isContractInitOptions)(options);\nconst getCreateAccessListParams = ({ abi, params, options, contractOptions, }) => {\n    if (!(options === null || options === void 0 ? void 0 : options.to) && !contractOptions.address) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_1__.Web3ContractError('Contract address not specified');\n    }\n    if (!(options === null || options === void 0 ? void 0 : options.from) && !contractOptions.from) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_1__.Web3ContractError('Contract \"from\" address not specified');\n    }\n    let txParams = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.mergeDeep)({\n        to: contractOptions.address,\n        gas: contractOptions.gas,\n        gasPrice: contractOptions.gasPrice,\n        from: contractOptions.from,\n        input: contractOptions.input,\n        maxPriorityFeePerGas: contractOptions.maxPriorityFeePerGas,\n        maxFeePerGas: contractOptions.maxFeePerGas,\n        data: contractOptions.data,\n    }, options);\n    const dataInput = dataInputEncodeMethodHelper(txParams, abi, params, options === null || options === void 0 ? void 0 : options.dataInputFill);\n    txParams = Object.assign(Object.assign({}, txParams), { data: dataInput.data, input: dataInput.input });\n    return txParams;\n};\nconst createContractAddress = (from, nonce) => {\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isAddress)(from))\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_1__.InvalidAddressError(`Invalid address given ${from}`);\n    let nonceValue = nonce;\n    if (typeof nonce === 'string' && (0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isHexString)(nonce))\n        nonceValue = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.hexToNumber)(nonce);\n    else if (typeof nonce === 'string' && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isHexString)(nonce))\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_1__.InvalidNumberError('Invalid nonce value format');\n    const rlpEncoded = _ethereumjs_rlp__WEBPACK_IMPORTED_MODULE_0__.RLP.encode([from, nonceValue]);\n    const result = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.keccak256)(rlpEncoded);\n    const contractAddress = '0x'.concat(result.substring(26));\n    return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.toChecksumAddress)(contractAddress);\n};\nconst create2ContractAddress = (from, salt, initCode) => {\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isAddress)(from))\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_1__.InvalidAddressError(`Invalid address given ${from}`);\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isHexString)(salt))\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_1__.InvalidMethodParamsError(`Invalid salt value ${salt}`);\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isHexString)(initCode))\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_1__.InvalidMethodParamsError(`Invalid initCode value ${initCode}`);\n    const initCodeHash = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.keccak256)(initCode);\n    const initCodeHashPadded = initCodeHash.padStart(64, '0'); // Pad to 32 bytes (64 hex characters)\n    const create2Params = ['0xff', from, salt, initCodeHashPadded].map(x => x.replace(/0x/, ''));\n    const create2Address = `0x${create2Params.join('')}`;\n    return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.toChecksumAddress)(`0x${(0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.keccak256)(create2Address).slice(26)}`); // Slice to get the last 20 bytes (40 hex characters) & checksum\n};\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-contract/lib/esm/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-contract/node_modules/@ethereumjs/rlp/dist/esm/index.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/web3-eth-contract/node_modules/@ethereumjs/rlp/dist/esm/index.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RLP: () => (/* binding */ RLP),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   utils: () => (/* binding */ utils)\n/* harmony export */ });\n/**\n * RLP Encoding based on https://ethereum.org/en/developers/docs/data-structures-and-encoding/rlp/\n * This function takes in data, converts it to Uint8Array if not,\n * and adds a length for recursion.\n * @param input Will be converted to Uint8Array\n * @returns Uint8Array of encoded data\n **/\nfunction encode(input) {\n    if (Array.isArray(input)) {\n        const output = [];\n        let outputLength = 0;\n        for (let i = 0; i < input.length; i++) {\n            const encoded = encode(input[i]);\n            output.push(encoded);\n            outputLength += encoded.length;\n        }\n        return concatBytes(encodeLength(outputLength, 192), ...output);\n    }\n    const inputBuf = toBytes(input);\n    if (inputBuf.length === 1 && inputBuf[0] < 128) {\n        return inputBuf;\n    }\n    return concatBytes(encodeLength(inputBuf.length, 128), inputBuf);\n}\n/**\n * Slices a Uint8Array, throws if the slice goes out-of-bounds of the Uint8Array.\n * E.g. `safeSlice(hexToBytes('aa'), 1, 2)` will throw.\n * @param input\n * @param start\n * @param end\n */\nfunction safeSlice(input, start, end) {\n    if (end > input.length) {\n        throw new Error('invalid RLP (safeSlice): end slice of Uint8Array out-of-bounds');\n    }\n    return input.slice(start, end);\n}\n/**\n * Parse integers. Check if there is no leading zeros\n * @param v The value to parse\n */\nfunction decodeLength(v) {\n    if (v[0] === 0) {\n        throw new Error('invalid RLP: extra zeros');\n    }\n    return parseHexByte(bytesToHex(v));\n}\nfunction encodeLength(len, offset) {\n    if (len < 56) {\n        return Uint8Array.from([len + offset]);\n    }\n    const hexLength = numberToHex(len);\n    const lLength = hexLength.length / 2;\n    const firstByte = numberToHex(offset + 55 + lLength);\n    return Uint8Array.from(hexToBytes(firstByte + hexLength));\n}\nfunction decode(input, stream = false) {\n    if (typeof input === 'undefined' || input === null || input.length === 0) {\n        return Uint8Array.from([]);\n    }\n    const inputBytes = toBytes(input);\n    const decoded = _decode(inputBytes);\n    if (stream) {\n        return {\n            data: decoded.data,\n            remainder: decoded.remainder.slice(),\n        };\n    }\n    if (decoded.remainder.length !== 0) {\n        throw new Error('invalid RLP: remainder must be zero');\n    }\n    return decoded.data;\n}\n/** Decode an input with RLP */\nfunction _decode(input) {\n    let length, llength, data, innerRemainder, d;\n    const decoded = [];\n    const firstByte = input[0];\n    if (firstByte <= 0x7f) {\n        // a single byte whose value is in the [0x00, 0x7f] range, that byte is its own RLP encoding.\n        return {\n            data: input.slice(0, 1),\n            remainder: input.subarray(1),\n        };\n    }\n    else if (firstByte <= 0xb7) {\n        // string is 0-55 bytes long. A single byte with value 0x80 plus the length of the string followed by the string\n        // The range of the first byte is [0x80, 0xb7]\n        length = firstByte - 0x7f;\n        // set 0x80 null to 0\n        if (firstByte === 0x80) {\n            data = Uint8Array.from([]);\n        }\n        else {\n            data = safeSlice(input, 1, length);\n        }\n        if (length === 2 && data[0] < 0x80) {\n            throw new Error('invalid RLP encoding: invalid prefix, single byte < 0x80 are not prefixed');\n        }\n        return {\n            data,\n            remainder: input.subarray(length),\n        };\n    }\n    else if (firstByte <= 0xbf) {\n        // string is greater than 55 bytes long. A single byte with the value (0xb7 plus the length of the length),\n        // followed by the length, followed by the string\n        llength = firstByte - 0xb6;\n        if (input.length - 1 < llength) {\n            throw new Error('invalid RLP: not enough bytes for string length');\n        }\n        length = decodeLength(safeSlice(input, 1, llength));\n        if (length <= 55) {\n            throw new Error('invalid RLP: expected string length to be greater than 55');\n        }\n        data = safeSlice(input, llength, length + llength);\n        return {\n            data,\n            remainder: input.subarray(length + llength),\n        };\n    }\n    else if (firstByte <= 0xf7) {\n        // a list between 0-55 bytes long\n        length = firstByte - 0xbf;\n        innerRemainder = safeSlice(input, 1, length);\n        while (innerRemainder.length) {\n            d = _decode(innerRemainder);\n            decoded.push(d.data);\n            innerRemainder = d.remainder;\n        }\n        return {\n            data: decoded,\n            remainder: input.subarray(length),\n        };\n    }\n    else {\n        // a list over 55 bytes long\n        llength = firstByte - 0xf6;\n        length = decodeLength(safeSlice(input, 1, llength));\n        if (length < 56) {\n            throw new Error('invalid RLP: encoded list too short');\n        }\n        const totalLength = llength + length;\n        if (totalLength > input.length) {\n            throw new Error('invalid RLP: total length is larger than the data');\n        }\n        innerRemainder = safeSlice(input, llength, totalLength);\n        while (innerRemainder.length) {\n            d = _decode(innerRemainder);\n            decoded.push(d.data);\n            innerRemainder = d.remainder;\n        }\n        return {\n            data: decoded,\n            remainder: input.subarray(totalLength),\n        };\n    }\n}\nconst cachedHexes = Array.from({ length: 256 }, (_v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    // Pre-caching chars with `cachedHexes` speeds this up 6x\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += cachedHexes[uint8a[i]];\n    }\n    return hex;\n}\nfunction parseHexByte(hexByte) {\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte))\n        throw new Error('Invalid byte sequence');\n    return byte;\n}\n// Caching slows it down 2-3x\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        array[i] = parseHexByte(hex.slice(j, j + 2));\n    }\n    return array;\n}\n/** Concatenates two Uint8Arrays into one. */\nfunction concatBytes(...arrays) {\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nfunction utf8ToBytes(utf) {\n    return new TextEncoder().encode(utf);\n}\n/** Transform an integer into its hexadecimal value */\nfunction numberToHex(integer) {\n    if (integer < 0) {\n        throw new Error('Invalid integer as argument, must be unsigned!');\n    }\n    const hex = integer.toString(16);\n    return hex.length % 2 ? `0${hex}` : hex;\n}\n/** Pad a string to be even */\nfunction padToEven(a) {\n    return a.length % 2 ? `0${a}` : a;\n}\n/** Check if a string is prefixed by 0x */\nfunction isHexPrefixed(str) {\n    return str.length >= 2 && str[0] === '0' && str[1] === 'x';\n}\n/** Removes 0x from a given String */\nfunction stripHexPrefix(str) {\n    if (typeof str !== 'string') {\n        return str;\n    }\n    return isHexPrefixed(str) ? str.slice(2) : str;\n}\n/** Transform anything into a Uint8Array */\nfunction toBytes(v) {\n    if (v instanceof Uint8Array) {\n        return v;\n    }\n    if (typeof v === 'string') {\n        if (isHexPrefixed(v)) {\n            return hexToBytes(padToEven(stripHexPrefix(v)));\n        }\n        return utf8ToBytes(v);\n    }\n    if (typeof v === 'number' || typeof v === 'bigint') {\n        if (!v) {\n            return Uint8Array.from([]);\n        }\n        return hexToBytes(numberToHex(v));\n    }\n    if (v === null || v === undefined) {\n        return Uint8Array.from([]);\n    }\n    throw new Error('toBytes: received unsupported type ' + typeof v);\n}\nconst utils = {\n    bytesToHex,\n    concatBytes,\n    hexToBytes,\n    utf8ToBytes,\n};\nconst RLP = { encode, decode };\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtY29udHJhY3Qvbm9kZV9tb2R1bGVzL0BldGhlcmV1bWpzL3JscC9kaXN0L2VzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixrQkFBa0I7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyxhQUFhO0FBQzlDO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixtQkFBbUI7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLGtCQUFrQjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLG1CQUFtQjtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MsSUFBSTtBQUNwQztBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsRUFBRTtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLGNBQWM7QUFDckIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tb3JwaC1wYXktc2RrLy4vbm9kZV9tb2R1bGVzL3dlYjMtZXRoLWNvbnRyYWN0L25vZGVfbW9kdWxlcy9AZXRoZXJldW1qcy9ybHAvZGlzdC9lc20vaW5kZXguanM/MTA0YyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFJMUCBFbmNvZGluZyBiYXNlZCBvbiBodHRwczovL2V0aGVyZXVtLm9yZy9lbi9kZXZlbG9wZXJzL2RvY3MvZGF0YS1zdHJ1Y3R1cmVzLWFuZC1lbmNvZGluZy9ybHAvXG4gKiBUaGlzIGZ1bmN0aW9uIHRha2VzIGluIGRhdGEsIGNvbnZlcnRzIGl0IHRvIFVpbnQ4QXJyYXkgaWYgbm90LFxuICogYW5kIGFkZHMgYSBsZW5ndGggZm9yIHJlY3Vyc2lvbi5cbiAqIEBwYXJhbSBpbnB1dCBXaWxsIGJlIGNvbnZlcnRlZCB0byBVaW50OEFycmF5XG4gKiBAcmV0dXJucyBVaW50OEFycmF5IG9mIGVuY29kZWQgZGF0YVxuICoqL1xuZXhwb3J0IGZ1bmN0aW9uIGVuY29kZShpbnB1dCkge1xuICAgIGlmIChBcnJheS5pc0FycmF5KGlucHV0KSkge1xuICAgICAgICBjb25zdCBvdXRwdXQgPSBbXTtcbiAgICAgICAgbGV0IG91dHB1dExlbmd0aCA9IDA7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgaW5wdXQubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGNvbnN0IGVuY29kZWQgPSBlbmNvZGUoaW5wdXRbaV0pO1xuICAgICAgICAgICAgb3V0cHV0LnB1c2goZW5jb2RlZCk7XG4gICAgICAgICAgICBvdXRwdXRMZW5ndGggKz0gZW5jb2RlZC5sZW5ndGg7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGNvbmNhdEJ5dGVzKGVuY29kZUxlbmd0aChvdXRwdXRMZW5ndGgsIDE5MiksIC4uLm91dHB1dCk7XG4gICAgfVxuICAgIGNvbnN0IGlucHV0QnVmID0gdG9CeXRlcyhpbnB1dCk7XG4gICAgaWYgKGlucHV0QnVmLmxlbmd0aCA9PT0gMSAmJiBpbnB1dEJ1ZlswXSA8IDEyOCkge1xuICAgICAgICByZXR1cm4gaW5wdXRCdWY7XG4gICAgfVxuICAgIHJldHVybiBjb25jYXRCeXRlcyhlbmNvZGVMZW5ndGgoaW5wdXRCdWYubGVuZ3RoLCAxMjgpLCBpbnB1dEJ1Zik7XG59XG4vKipcbiAqIFNsaWNlcyBhIFVpbnQ4QXJyYXksIHRocm93cyBpZiB0aGUgc2xpY2UgZ29lcyBvdXQtb2YtYm91bmRzIG9mIHRoZSBVaW50OEFycmF5LlxuICogRS5nLiBgc2FmZVNsaWNlKGhleFRvQnl0ZXMoJ2FhJyksIDEsIDIpYCB3aWxsIHRocm93LlxuICogQHBhcmFtIGlucHV0XG4gKiBAcGFyYW0gc3RhcnRcbiAqIEBwYXJhbSBlbmRcbiAqL1xuZnVuY3Rpb24gc2FmZVNsaWNlKGlucHV0LCBzdGFydCwgZW5kKSB7XG4gICAgaWYgKGVuZCA+IGlucHV0Lmxlbmd0aCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2ludmFsaWQgUkxQIChzYWZlU2xpY2UpOiBlbmQgc2xpY2Ugb2YgVWludDhBcnJheSBvdXQtb2YtYm91bmRzJyk7XG4gICAgfVxuICAgIHJldHVybiBpbnB1dC5zbGljZShzdGFydCwgZW5kKTtcbn1cbi8qKlxuICogUGFyc2UgaW50ZWdlcnMuIENoZWNrIGlmIHRoZXJlIGlzIG5vIGxlYWRpbmcgemVyb3NcbiAqIEBwYXJhbSB2IFRoZSB2YWx1ZSB0byBwYXJzZVxuICovXG5mdW5jdGlvbiBkZWNvZGVMZW5ndGgodikge1xuICAgIGlmICh2WzBdID09PSAwKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignaW52YWxpZCBSTFA6IGV4dHJhIHplcm9zJyk7XG4gICAgfVxuICAgIHJldHVybiBwYXJzZUhleEJ5dGUoYnl0ZXNUb0hleCh2KSk7XG59XG5mdW5jdGlvbiBlbmNvZGVMZW5ndGgobGVuLCBvZmZzZXQpIHtcbiAgICBpZiAobGVuIDwgNTYpIHtcbiAgICAgICAgcmV0dXJuIFVpbnQ4QXJyYXkuZnJvbShbbGVuICsgb2Zmc2V0XSk7XG4gICAgfVxuICAgIGNvbnN0IGhleExlbmd0aCA9IG51bWJlclRvSGV4KGxlbik7XG4gICAgY29uc3QgbExlbmd0aCA9IGhleExlbmd0aC5sZW5ndGggLyAyO1xuICAgIGNvbnN0IGZpcnN0Qnl0ZSA9IG51bWJlclRvSGV4KG9mZnNldCArIDU1ICsgbExlbmd0aCk7XG4gICAgcmV0dXJuIFVpbnQ4QXJyYXkuZnJvbShoZXhUb0J5dGVzKGZpcnN0Qnl0ZSArIGhleExlbmd0aCkpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZShpbnB1dCwgc3RyZWFtID0gZmFsc2UpIHtcbiAgICBpZiAodHlwZW9mIGlucHV0ID09PSAndW5kZWZpbmVkJyB8fCBpbnB1dCA9PT0gbnVsbCB8fCBpbnB1dC5sZW5ndGggPT09IDApIHtcbiAgICAgICAgcmV0dXJuIFVpbnQ4QXJyYXkuZnJvbShbXSk7XG4gICAgfVxuICAgIGNvbnN0IGlucHV0Qnl0ZXMgPSB0b0J5dGVzKGlucHV0KTtcbiAgICBjb25zdCBkZWNvZGVkID0gX2RlY29kZShpbnB1dEJ5dGVzKTtcbiAgICBpZiAoc3RyZWFtKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBkYXRhOiBkZWNvZGVkLmRhdGEsXG4gICAgICAgICAgICByZW1haW5kZXI6IGRlY29kZWQucmVtYWluZGVyLnNsaWNlKCksXG4gICAgICAgIH07XG4gICAgfVxuICAgIGlmIChkZWNvZGVkLnJlbWFpbmRlci5sZW5ndGggIT09IDApIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdpbnZhbGlkIFJMUDogcmVtYWluZGVyIG11c3QgYmUgemVybycpO1xuICAgIH1cbiAgICByZXR1cm4gZGVjb2RlZC5kYXRhO1xufVxuLyoqIERlY29kZSBhbiBpbnB1dCB3aXRoIFJMUCAqL1xuZnVuY3Rpb24gX2RlY29kZShpbnB1dCkge1xuICAgIGxldCBsZW5ndGgsIGxsZW5ndGgsIGRhdGEsIGlubmVyUmVtYWluZGVyLCBkO1xuICAgIGNvbnN0IGRlY29kZWQgPSBbXTtcbiAgICBjb25zdCBmaXJzdEJ5dGUgPSBpbnB1dFswXTtcbiAgICBpZiAoZmlyc3RCeXRlIDw9IDB4N2YpIHtcbiAgICAgICAgLy8gYSBzaW5nbGUgYnl0ZSB3aG9zZSB2YWx1ZSBpcyBpbiB0aGUgWzB4MDAsIDB4N2ZdIHJhbmdlLCB0aGF0IGJ5dGUgaXMgaXRzIG93biBSTFAgZW5jb2RpbmcuXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBkYXRhOiBpbnB1dC5zbGljZSgwLCAxKSxcbiAgICAgICAgICAgIHJlbWFpbmRlcjogaW5wdXQuc3ViYXJyYXkoMSksXG4gICAgICAgIH07XG4gICAgfVxuICAgIGVsc2UgaWYgKGZpcnN0Qnl0ZSA8PSAweGI3KSB7XG4gICAgICAgIC8vIHN0cmluZyBpcyAwLTU1IGJ5dGVzIGxvbmcuIEEgc2luZ2xlIGJ5dGUgd2l0aCB2YWx1ZSAweDgwIHBsdXMgdGhlIGxlbmd0aCBvZiB0aGUgc3RyaW5nIGZvbGxvd2VkIGJ5IHRoZSBzdHJpbmdcbiAgICAgICAgLy8gVGhlIHJhbmdlIG9mIHRoZSBmaXJzdCBieXRlIGlzIFsweDgwLCAweGI3XVxuICAgICAgICBsZW5ndGggPSBmaXJzdEJ5dGUgLSAweDdmO1xuICAgICAgICAvLyBzZXQgMHg4MCBudWxsIHRvIDBcbiAgICAgICAgaWYgKGZpcnN0Qnl0ZSA9PT0gMHg4MCkge1xuICAgICAgICAgICAgZGF0YSA9IFVpbnQ4QXJyYXkuZnJvbShbXSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBkYXRhID0gc2FmZVNsaWNlKGlucHV0LCAxLCBsZW5ndGgpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChsZW5ndGggPT09IDIgJiYgZGF0YVswXSA8IDB4ODApIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignaW52YWxpZCBSTFAgZW5jb2Rpbmc6IGludmFsaWQgcHJlZml4LCBzaW5nbGUgYnl0ZSA8IDB4ODAgYXJlIG5vdCBwcmVmaXhlZCcpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBkYXRhLFxuICAgICAgICAgICAgcmVtYWluZGVyOiBpbnB1dC5zdWJhcnJheShsZW5ndGgpLFxuICAgICAgICB9O1xuICAgIH1cbiAgICBlbHNlIGlmIChmaXJzdEJ5dGUgPD0gMHhiZikge1xuICAgICAgICAvLyBzdHJpbmcgaXMgZ3JlYXRlciB0aGFuIDU1IGJ5dGVzIGxvbmcuIEEgc2luZ2xlIGJ5dGUgd2l0aCB0aGUgdmFsdWUgKDB4YjcgcGx1cyB0aGUgbGVuZ3RoIG9mIHRoZSBsZW5ndGgpLFxuICAgICAgICAvLyBmb2xsb3dlZCBieSB0aGUgbGVuZ3RoLCBmb2xsb3dlZCBieSB0aGUgc3RyaW5nXG4gICAgICAgIGxsZW5ndGggPSBmaXJzdEJ5dGUgLSAweGI2O1xuICAgICAgICBpZiAoaW5wdXQubGVuZ3RoIC0gMSA8IGxsZW5ndGgpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignaW52YWxpZCBSTFA6IG5vdCBlbm91Z2ggYnl0ZXMgZm9yIHN0cmluZyBsZW5ndGgnKTtcbiAgICAgICAgfVxuICAgICAgICBsZW5ndGggPSBkZWNvZGVMZW5ndGgoc2FmZVNsaWNlKGlucHV0LCAxLCBsbGVuZ3RoKSk7XG4gICAgICAgIGlmIChsZW5ndGggPD0gNTUpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignaW52YWxpZCBSTFA6IGV4cGVjdGVkIHN0cmluZyBsZW5ndGggdG8gYmUgZ3JlYXRlciB0aGFuIDU1Jyk7XG4gICAgICAgIH1cbiAgICAgICAgZGF0YSA9IHNhZmVTbGljZShpbnB1dCwgbGxlbmd0aCwgbGVuZ3RoICsgbGxlbmd0aCk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBkYXRhLFxuICAgICAgICAgICAgcmVtYWluZGVyOiBpbnB1dC5zdWJhcnJheShsZW5ndGggKyBsbGVuZ3RoKSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgZWxzZSBpZiAoZmlyc3RCeXRlIDw9IDB4ZjcpIHtcbiAgICAgICAgLy8gYSBsaXN0IGJldHdlZW4gMC01NSBieXRlcyBsb25nXG4gICAgICAgIGxlbmd0aCA9IGZpcnN0Qnl0ZSAtIDB4YmY7XG4gICAgICAgIGlubmVyUmVtYWluZGVyID0gc2FmZVNsaWNlKGlucHV0LCAxLCBsZW5ndGgpO1xuICAgICAgICB3aGlsZSAoaW5uZXJSZW1haW5kZXIubGVuZ3RoKSB7XG4gICAgICAgICAgICBkID0gX2RlY29kZShpbm5lclJlbWFpbmRlcik7XG4gICAgICAgICAgICBkZWNvZGVkLnB1c2goZC5kYXRhKTtcbiAgICAgICAgICAgIGlubmVyUmVtYWluZGVyID0gZC5yZW1haW5kZXI7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGRhdGE6IGRlY29kZWQsXG4gICAgICAgICAgICByZW1haW5kZXI6IGlucHV0LnN1YmFycmF5KGxlbmd0aCksXG4gICAgICAgIH07XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICAvLyBhIGxpc3Qgb3ZlciA1NSBieXRlcyBsb25nXG4gICAgICAgIGxsZW5ndGggPSBmaXJzdEJ5dGUgLSAweGY2O1xuICAgICAgICBsZW5ndGggPSBkZWNvZGVMZW5ndGgoc2FmZVNsaWNlKGlucHV0LCAxLCBsbGVuZ3RoKSk7XG4gICAgICAgIGlmIChsZW5ndGggPCA1Nikge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdpbnZhbGlkIFJMUDogZW5jb2RlZCBsaXN0IHRvbyBzaG9ydCcpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHRvdGFsTGVuZ3RoID0gbGxlbmd0aCArIGxlbmd0aDtcbiAgICAgICAgaWYgKHRvdGFsTGVuZ3RoID4gaW5wdXQubGVuZ3RoKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2ludmFsaWQgUkxQOiB0b3RhbCBsZW5ndGggaXMgbGFyZ2VyIHRoYW4gdGhlIGRhdGEnKTtcbiAgICAgICAgfVxuICAgICAgICBpbm5lclJlbWFpbmRlciA9IHNhZmVTbGljZShpbnB1dCwgbGxlbmd0aCwgdG90YWxMZW5ndGgpO1xuICAgICAgICB3aGlsZSAoaW5uZXJSZW1haW5kZXIubGVuZ3RoKSB7XG4gICAgICAgICAgICBkID0gX2RlY29kZShpbm5lclJlbWFpbmRlcik7XG4gICAgICAgICAgICBkZWNvZGVkLnB1c2goZC5kYXRhKTtcbiAgICAgICAgICAgIGlubmVyUmVtYWluZGVyID0gZC5yZW1haW5kZXI7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGRhdGE6IGRlY29kZWQsXG4gICAgICAgICAgICByZW1haW5kZXI6IGlucHV0LnN1YmFycmF5KHRvdGFsTGVuZ3RoKSxcbiAgICAgICAgfTtcbiAgICB9XG59XG5jb25zdCBjYWNoZWRIZXhlcyA9IEFycmF5LmZyb20oeyBsZW5ndGg6IDI1NiB9LCAoX3YsIGkpID0+IGkudG9TdHJpbmcoMTYpLnBhZFN0YXJ0KDIsICcwJykpO1xuZnVuY3Rpb24gYnl0ZXNUb0hleCh1aW50OGEpIHtcbiAgICAvLyBQcmUtY2FjaGluZyBjaGFycyB3aXRoIGBjYWNoZWRIZXhlc2Agc3BlZWRzIHRoaXMgdXAgNnhcbiAgICBsZXQgaGV4ID0gJyc7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB1aW50OGEubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaGV4ICs9IGNhY2hlZEhleGVzW3VpbnQ4YVtpXV07XG4gICAgfVxuICAgIHJldHVybiBoZXg7XG59XG5mdW5jdGlvbiBwYXJzZUhleEJ5dGUoaGV4Qnl0ZSkge1xuICAgIGNvbnN0IGJ5dGUgPSBOdW1iZXIucGFyc2VJbnQoaGV4Qnl0ZSwgMTYpO1xuICAgIGlmIChOdW1iZXIuaXNOYU4oYnl0ZSkpXG4gICAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBieXRlIHNlcXVlbmNlJyk7XG4gICAgcmV0dXJuIGJ5dGU7XG59XG4vLyBDYWNoaW5nIHNsb3dzIGl0IGRvd24gMi0zeFxuZnVuY3Rpb24gaGV4VG9CeXRlcyhoZXgpIHtcbiAgICBpZiAodHlwZW9mIGhleCAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignaGV4VG9CeXRlczogZXhwZWN0ZWQgc3RyaW5nLCBnb3QgJyArIHR5cGVvZiBoZXgpO1xuICAgIH1cbiAgICBpZiAoaGV4Lmxlbmd0aCAlIDIpXG4gICAgICAgIHRocm93IG5ldyBFcnJvcignaGV4VG9CeXRlczogcmVjZWl2ZWQgaW52YWxpZCB1bnBhZGRlZCBoZXgnKTtcbiAgICBjb25zdCBhcnJheSA9IG5ldyBVaW50OEFycmF5KGhleC5sZW5ndGggLyAyKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGFycmF5Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGNvbnN0IGogPSBpICogMjtcbiAgICAgICAgYXJyYXlbaV0gPSBwYXJzZUhleEJ5dGUoaGV4LnNsaWNlKGosIGogKyAyKSk7XG4gICAgfVxuICAgIHJldHVybiBhcnJheTtcbn1cbi8qKiBDb25jYXRlbmF0ZXMgdHdvIFVpbnQ4QXJyYXlzIGludG8gb25lLiAqL1xuZnVuY3Rpb24gY29uY2F0Qnl0ZXMoLi4uYXJyYXlzKSB7XG4gICAgaWYgKGFycmF5cy5sZW5ndGggPT09IDEpXG4gICAgICAgIHJldHVybiBhcnJheXNbMF07XG4gICAgY29uc3QgbGVuZ3RoID0gYXJyYXlzLnJlZHVjZSgoYSwgYXJyKSA9PiBhICsgYXJyLmxlbmd0aCwgMCk7XG4gICAgY29uc3QgcmVzdWx0ID0gbmV3IFVpbnQ4QXJyYXkobGVuZ3RoKTtcbiAgICBmb3IgKGxldCBpID0gMCwgcGFkID0gMDsgaSA8IGFycmF5cy5sZW5ndGg7IGkrKykge1xuICAgICAgICBjb25zdCBhcnIgPSBhcnJheXNbaV07XG4gICAgICAgIHJlc3VsdC5zZXQoYXJyLCBwYWQpO1xuICAgICAgICBwYWQgKz0gYXJyLmxlbmd0aDtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIHV0ZjhUb0J5dGVzKHV0Zikge1xuICAgIHJldHVybiBuZXcgVGV4dEVuY29kZXIoKS5lbmNvZGUodXRmKTtcbn1cbi8qKiBUcmFuc2Zvcm0gYW4gaW50ZWdlciBpbnRvIGl0cyBoZXhhZGVjaW1hbCB2YWx1ZSAqL1xuZnVuY3Rpb24gbnVtYmVyVG9IZXgoaW50ZWdlcikge1xuICAgIGlmIChpbnRlZ2VyIDwgMCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgaW50ZWdlciBhcyBhcmd1bWVudCwgbXVzdCBiZSB1bnNpZ25lZCEnKTtcbiAgICB9XG4gICAgY29uc3QgaGV4ID0gaW50ZWdlci50b1N0cmluZygxNik7XG4gICAgcmV0dXJuIGhleC5sZW5ndGggJSAyID8gYDAke2hleH1gIDogaGV4O1xufVxuLyoqIFBhZCBhIHN0cmluZyB0byBiZSBldmVuICovXG5mdW5jdGlvbiBwYWRUb0V2ZW4oYSkge1xuICAgIHJldHVybiBhLmxlbmd0aCAlIDIgPyBgMCR7YX1gIDogYTtcbn1cbi8qKiBDaGVjayBpZiBhIHN0cmluZyBpcyBwcmVmaXhlZCBieSAweCAqL1xuZnVuY3Rpb24gaXNIZXhQcmVmaXhlZChzdHIpIHtcbiAgICByZXR1cm4gc3RyLmxlbmd0aCA+PSAyICYmIHN0clswXSA9PT0gJzAnICYmIHN0clsxXSA9PT0gJ3gnO1xufVxuLyoqIFJlbW92ZXMgMHggZnJvbSBhIGdpdmVuIFN0cmluZyAqL1xuZnVuY3Rpb24gc3RyaXBIZXhQcmVmaXgoc3RyKSB7XG4gICAgaWYgKHR5cGVvZiBzdHIgIT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHJldHVybiBzdHI7XG4gICAgfVxuICAgIHJldHVybiBpc0hleFByZWZpeGVkKHN0cikgPyBzdHIuc2xpY2UoMikgOiBzdHI7XG59XG4vKiogVHJhbnNmb3JtIGFueXRoaW5nIGludG8gYSBVaW50OEFycmF5ICovXG5mdW5jdGlvbiB0b0J5dGVzKHYpIHtcbiAgICBpZiAodiBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpIHtcbiAgICAgICAgcmV0dXJuIHY7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgdiA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgaWYgKGlzSGV4UHJlZml4ZWQodikpIHtcbiAgICAgICAgICAgIHJldHVybiBoZXhUb0J5dGVzKHBhZFRvRXZlbihzdHJpcEhleFByZWZpeCh2KSkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB1dGY4VG9CeXRlcyh2KTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiB2ID09PSAnbnVtYmVyJyB8fCB0eXBlb2YgdiA9PT0gJ2JpZ2ludCcpIHtcbiAgICAgICAgaWYgKCF2KSB7XG4gICAgICAgICAgICByZXR1cm4gVWludDhBcnJheS5mcm9tKFtdKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gaGV4VG9CeXRlcyhudW1iZXJUb0hleCh2KSk7XG4gICAgfVxuICAgIGlmICh2ID09PSBudWxsIHx8IHYgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gVWludDhBcnJheS5mcm9tKFtdKTtcbiAgICB9XG4gICAgdGhyb3cgbmV3IEVycm9yKCd0b0J5dGVzOiByZWNlaXZlZCB1bnN1cHBvcnRlZCB0eXBlICcgKyB0eXBlb2Ygdik7XG59XG5leHBvcnQgY29uc3QgdXRpbHMgPSB7XG4gICAgYnl0ZXNUb0hleCxcbiAgICBjb25jYXRCeXRlcyxcbiAgICBoZXhUb0J5dGVzLFxuICAgIHV0ZjhUb0J5dGVzLFxufTtcbmV4cG9ydCBjb25zdCBSTFAgPSB7IGVuY29kZSwgZGVjb2RlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-contract/node_modules/@ethereumjs/rlp/dist/esm/index.js\n");

/***/ })

};
;